{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/chat-icon/chat-icon.component.ts","./src/app/components/chat-icon/chat-icon.component.html","./src/app/components/chat-page/global-chat/global-chat.component.ts","./src/app/components/chat-page/global-chat/global-chat.component.html","./src/app/components/chat-page/global-chat/related-chats/related-chats.component.ts","./src/app/components/chat-page/global-chat/related-chats/related-chats.component.html","./src/app/components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe-admin-dialog/chat-subscribe-admin-dialog.component.ts","./src/app/components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe-admin-dialog/chat-subscribe-admin-dialog.component.html","./src/app/components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe.component.ts","./src/app/components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe.component.html","./src/app/components/chat-page/message-view/chat-title/chat-title.component.ts","./src/app/components/chat-page/message-view/chat-title/chat-title.component.html","./src/app/components/chat-page/message-view/message-create/message-create.component.ts","./src/app/components/chat-page/message-view/message-create/message-create.component.html","./src/app/components/chat-page/message-view/message-view.component.ts","./src/app/components/chat-page/message-view/message-view.component.html","./src/app/components/chat-page/message-view/messages/message-received/message-received.component.ts","./src/app/components/chat-page/message-view/messages/message-received/message-received.component.html","./src/app/components/chat-page/message-view/messages/message-sent/message-sent.component.ts","./src/app/components/chat-page/message-view/messages/message-sent/message-sent.component.html","./src/app/components/chat-page/message-view/messages/messages.component.ts","./src/app/components/chat-page/message-view/messages/messages.component.html","./src/app/components/chat-page/subscribers-view/subscriber/subscriber.component.ts","./src/app/components/chat-page/subscribers-view/subscriber/subscriber.component.html","./src/app/components/chat-page/subscribers-view/subscribers-view.component.ts","./src/app/components/chat-page/subscribers-view/subscribers-view.component.html","./src/app/components/chat-selection/chat-option/chat-option.ts","./src/app/components/chat-selection/chat-option/chat-option.html","./src/app/components/chat-selection/chat-selection.ts","./src/app/components/chat-selection/chat-selection.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/home-page/chat-display/chat-display.component.ts","./src/app/components/home-page/chat-display/chat-display.component.html","./src/app/components/home-page/chat-lists/chat-lists.component.ts","./src/app/components/home-page/chat-lists/chat-lists.component.html","./src/app/components/home-page/chat-search/chat-search.component.ts","./src/app/components/home-page/chat-search/chat-search.component.html","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/image-fab/image-fab.component.ts","./src/app/components/image-fab/image-fab.component.html","./src/app/components/login-page/login-page.component.ts","./src/app/components/login-page/login-page.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/register-page/register-page.component.ts","./src/app/components/register-page/register-page.component.html","./src/app/components/user-icon/user-icon.component.ts","./src/app/components/user-icon/user-icon.component.html","./src/app/components/user-page/user-chats-view/user-chats-view.component.ts","./src/app/components/user-page/user-chats-view/user-chats-view.component.html","./src/app/components/user-page/user-friends-view/friend-request/friend-request.component.ts","./src/app/components/user-page/user-friends-view/friend-request/friend-request.component.html","./src/app/components/user-page/user-friends-view/user-friends-view.component.ts","./src/app/components/user-page/user-friends-view/user-friends-view.component.html","./src/app/components/user-page/user-page.component.ts","./src/app/components/user-page/user-page.component.html","./src/app/components/user-page/user-view/user-view-chat-create-dialog/chat-tags/chat-tags.component.ts","./src/app/components/user-page/user-view/user-view-chat-create-dialog/chat-tags/chat-tags.component.html","./src/app/components/user-page/user-view/user-view-chat-create-dialog/chat-tags/tag/tag.component.ts","./src/app/components/user-page/user-view/user-view-chat-create-dialog/chat-tags/tag/tag.component.html","./src/app/components/user-page/user-view/user-view-chat-create-dialog/user-view-chat-create-dialog.component.ts","./src/app/components/user-page/user-view/user-view-chat-create-dialog/user-view-chat-create-dialog.component.html","./src/app/components/user-page/user-view/user-view-icon-dialog/user-view-icon-dialog.component.ts","./src/app/components/user-page/user-view/user-view-icon-dialog/user-view-icon-dialog.component.html","./src/app/components/user-page/user-view/user-view.component.ts","./src/app/components/user-page/user-view/user-view.component.html","./src/app/services/authentication.ts","./src/app/services/chat-create.ts","./src/app/services/chat.ts","./src/app/services/chats.ts","./src/app/services/token.interceptor.ts","./src/app/services/user.ts","./src/app/services/users.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { HomePageComponent } from './components/home-page/home-page.component'\nimport { LoginPageComponent } from './components/login-page/login-page.component'\nimport { RegisterPageComponent } from \"./components/register-page/register-page.component\"\nimport { GlobalChatComponent } from './components/chat-page/global-chat/global-chat.component'\nimport { UserPageComponent } from \"./components/user-page/user-page.component\"\n\nconst routes: Routes = [\n  { path: \"\", component: HomePageComponent },\n  { path: \"api/authentication/login\", component: LoginPageComponent },\n  { path: \"api/authentication/register\", component: RegisterPageComponent },\n  { path: \"api/chat/view/:id\", component: GlobalChatComponent },\n  { path: \"api/user\", component: UserPageComponent },\n  { path: \"**\", redirectTo: \"\", component: HomePageComponent }\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ChatsService } from \"./services/chats\"\nimport { UsersService } from \"./services/users\"\nimport { ChatService } from './services/chat';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\"./app.component.css\"],\n  providers: [ChatsService, UsersService]\n})\nexport class AppComponent {\n  title = 'messenger-app'\n  constructor(\n    private chatsService: ChatsService, \n    private usersService: UsersService, \n    private chatService: ChatService\n  ) {}\n  \n  ngOnInit() {\n    this.chatService.initServerSocket()\n  }\n}","<router-outlet></router-outlet>\n","// Modules\nimport { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\nimport { AppRoutingModule } from './app-routing.module'\nimport { HttpClientModule } from '@angular/common/http'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatToolbarModule } from \"@angular/material/toolbar\"\nimport { MatCardModule } from '@angular/material/card'\nimport { FormsModule } from \"@angular/forms\"\nimport { FlexLayoutModule } from \"@angular/flex-layout\"\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatExpansionModule } from \"@angular/material/expansion\"\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatDialogModule } from \"@angular/material/dialog\"\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\"\nimport { ReactiveFormsModule } from \"@angular/forms\"\n//Services\nimport { AuthenticationService } from './services/authentication'\nimport { UserService } from './services/user'\n//Components\nimport { HomePageComponent } from './components/home-page/home-page.component'\nimport { RegisterPageComponent } from \"./components/register-page/register-page.component\"\nimport { LoginPageComponent } from './components/login-page/login-page.component'\nimport { NavbarComponent } from './components/navbar/navbar.component'\nimport { AppComponent } from './app.component'\nimport { GlobalChatComponent } from './components/chat-page/global-chat/global-chat.component'\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\"\nimport { TokenInterceptor } from './services/token.interceptor'\nimport { MessageViewComponent } from './components/chat-page/message-view/message-view.component'\nimport { MessageCreateComponent } from './components/chat-page/message-view/message-create/message-create.component'\nimport { MessageReceivedComponent } from './components/chat-page/message-view/messages/message-received/message-received.component'\nimport { MessageSentComponent } from \"./components/chat-page/message-view/messages/message-sent/message-sent.component\"\nimport { ChatDisplayComponent } from \"./components/home-page/chat-display/chat-display.component\"\nimport { UserPageComponent } from \"./components/user-page/user-page.component\"\nimport { UserIconComponent } from \"./components/user-icon/user-icon.component\"\nimport { ChatTitleComponent } from  \"./components/chat-page/message-view/chat-title/chat-title.component\"\nimport { ChatSubscribeComponent } from \"./components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe.component\"\nimport { SubscribersViewComponent } from \"./components/chat-page/subscribers-view/subscribers-view.component\"\nimport { MessagesComponent } from \"./components/chat-page/message-view/messages/messages.component\"\nimport { UserFriendsViewComponent } from \"./components/user-page/user-friends-view/user-friends-view.component\"\nimport { UserViewComponent } from \"./components/user-page/user-view/user-view.component\"\nimport { UserChatsViewComponent } from \"./components/user-page/user-chats-view/user-chats-view.component\"\nimport { ImageFabComponent } from \"./components/image-fab/image-fab.component\"\nimport { ChatTagsComponent } from \"./components/user-page/user-view/user-view-chat-create-dialog/chat-tags/chat-tags.component\"\nimport { TagComponent } from \"./components/user-page/user-view/user-view-chat-create-dialog/chat-tags/tag/tag.component\"\nimport { HeaderComponent } from \"./components/header/header.component\"\nimport { SubscriberComponent } from \"./components/chat-page/subscribers-view/subscriber/subscriber.component\"\nimport { ChatSelectionComponent } from './components/chat-selection/chat-selection'\nimport { ChatOptionComponent } from './components/chat-selection/chat-option/chat-option'\nimport { ChatSubscribeAdminDialogComponent } from \"./components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe-admin-dialog/chat-subscribe-admin-dialog.component\"\nimport { ChatIconComponent } from \"./components/chat-icon/chat-icon.component\"\nimport { UserViewIconDialogComponent } from \"./components/user-page/user-view/user-view-icon-dialog/user-view-icon-dialog.component\"\nimport { FriendRequestComponent } from \"./components/user-page/user-friends-view/friend-request/friend-request.component\"\nimport { RelatedChatsComponent } from \"./components/chat-page/global-chat/related-chats/related-chats.component\"\nimport { ChatSearchComponent } from \"./components/home-page/chat-search/chat-search.component\"\nimport { ChatListsComponent } from './components/home-page/chat-lists/chat-lists.component'\nimport { UserViewChatCreateDialogComponent } from \"./components/user-page/user-view/user-view-chat-create-dialog/user-view-chat-create-dialog.component\"\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    LoginPageComponent,\n    RegisterPageComponent,\n    NavbarComponent,\n    MessageViewComponent,\n    MessageCreateComponent,\n    MessageReceivedComponent,\n    MessageSentComponent,\n    GlobalChatComponent,\n    ChatDisplayComponent,\n    UserPageComponent,\n    UserIconComponent,\n    ChatTitleComponent,\n    ChatSubscribeComponent,\n    SubscribersViewComponent,\n    MessagesComponent,\n    UserFriendsViewComponent,\n    UserViewComponent,\n    UserChatsViewComponent,\n    ImageFabComponent,\n    ChatTagsComponent,\n    TagComponent,\n    HeaderComponent,\n    SubscriberComponent,\n    ChatSelectionComponent,\n    ChatOptionComponent,\n    ChatSubscribeAdminDialogComponent,\n    ChatIconComponent,\n    FriendRequestComponent,\n    RelatedChatsComponent,\n    ChatSearchComponent,\n    ChatListsComponent,\n    UserViewIconDialogComponent,\n    UserViewChatCreateDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatCardModule,\n    MatInputModule,\n    MatToolbarModule,\n    FormsModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    AuthenticationService,\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from \"@angular/core\"\n\n@Component({\n        selector: \"app-chat-icon\",\n        templateUrl: \"chat-icon.component.html\",\n        styleUrls: [\"chat-icon.component.css\"]\n})\nexport class ChatIconComponent {}","<div class=\"icon-button\"></div>","import { Component, OnInit } from '@angular/core'\nimport { ChatService } from 'src/app/services/chat';\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { UsersService } from 'src/app/services/users';\nimport { Subscription } from 'rxjs';\nimport { Chat } from \"../../../models/chat\"\nimport { trigger, state, style, animate, transition } from '@angular/animations'\nimport { MediaObserver } from \"@angular/flex-layout\"\n\n\n@Component({\n  selector: \"app-global-chat\",\n  templateUrl: \"global-chat.component.html\",\n  styleUrls: [\"global-chat.component.css\"],\n  animations: [\n    trigger(\"expansionPanel\", [\n            state(\"open\", style({\n                    visibility: \"visible\",\n                    width: \"calc(100% - 64px)\"\n            })),\n            state(\"closed\", style({\n                    width: \"0%\",\n                    visibility: \"hidden\"\n            })),\n            transition(\"open => closed\", [\n                    animate(\"0.2s\")\n            ]),\n            transition(\"closed => open\", [\n                    animate(\"0.2s\")\n            ])\n      ]),\n      trigger(\"expansionTitle\", [\n            state(\"visible\", style({\n                    width: \"30px\",\n                    lineHeight: \"30px\",\n                    marginRight: \"1px\",\n                    marginLeft: \"1px\",\n                    visibility: \"visible\"\n            })),\n            state(\"invisible\", style({\n                    width: \"0px\",\n                    visibility: \"hidden\"\n            }))\n      ])\n  ],\n  providers: [ChatService]\n})\nexport class GlobalChatComponent implements OnInit {\n  chatId: string\n  chatSub: Subscription\n  leftExpanded: boolean = false\n  rightExpanded: boolean = false\n  constructor(\n    private chatService: ChatService, \n    private route: ActivatedRoute, \n    private usersService: UsersService,\n    private router: Router,\n    public media: MediaObserver\n  ) {\n    //Reloads when params change \n    this.router.routeReuseStrategy.shouldReuseRoute = \n      () => false\n  }\n\n  ngOnInit() {\n    //Set chatId from router link id\n    this.route.params\n      .subscribe(params => {\n        this.chatId = params[\"id\"]\n        this.chatService.initChatService(this.chatId)\n        this.chatService.getChat()\n        this.chatSub = this.chatService.getChatUpdated()\n          .subscribe((chat: Chat) => {\n            var userIds = []\n            for (var i = 0; i < chat.subs.length; i++) {\n              const userId = chat.subs[i]\n              if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                userIds.push(userId)\n              }\n            }\n            for (var i = 0; i < chat.messages.length; i++) {\n              const userId = chat.messages[i].senderId\n              if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                userIds.push(userId)\n              }\n            }\n            this.usersService.getUsers(userIds)\n          })\n      })\n  }\n\n  //Toggles the left expansion panel\n  toggleLeft() {\n    this.leftExpanded = !this.leftExpanded\n    if (this.leftExpanded) {\n      this.rightExpanded = false\n    }\n  }\n\n  //Toggles the right expansion panel\n  toggleRight() {\n    this.rightExpanded = !this.rightExpanded\n    if (this.rightExpanded) {\n      this.leftExpanded = false\n    }\n  }\n\n  //Toggles the middle expansion panel\n  toggleMiddle() {\n    this.rightExpanded = false\n    this.leftExpanded = false\n  }\n}\n","<app-navbar>\n        <div *ngIf=\"this.media.isActive('gt-sm')\" fxShow=\"true\" fxHide.lt-md=\"true\" class=\"container\">\n                <div class=\"left\">\n                        <app-related-chats></app-related-chats>\n                </div>\n                <div class=\"middle\">\n                        <app-message-view></app-message-view>\n                </div>\n                <div class=\"right\">\n                        <app-subscribers-view></app-subscribers-view>\n                </div>\n        </div>\n        <div *ngIf=\"this.media.isActive('lt-md')\" fxShow=\"true\" fxHide.gt-sm=\"true\" class=\"container-small\">\n                <div class=\"header-container float-left\" [@expansionTitle]=\"!leftExpanded ? 'visible' : 'invisible'\" (click)=\"toggleLeft()\">\n                       <span class=\"header-text no-select transform-color\">\n                                ◀&#xFE0E;\n                       </span> \n                </div>\n                <div class=\"left-small float-left\" [@expansionPanel]=\"leftExpanded ? 'open' : 'closed'\">\n                        <app-related-chats></app-related-chats>\n                </div>\n        \n                <div class=\"header-container float-left\" [@expansionTitle]=\"(leftExpanded || rightExpanded) ? 'visible' : 'invisible'\" (click)=\"toggleMiddle()\">\n                        <span class=\"header-text transform-color no-select\">\n                                ◈&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"middle-small float-left\" [@expansionPanel]=\"(!rightExpanded && !leftExpanded)? 'open' : 'closed'\">\n                        <app-message-view></app-message-view>\n                </div>\n        \n        \n                <div class=\"header-container float-right\" [@expansionTitle]=\"!rightExpanded ? 'visible' : 'invisible'\" (click)=\"toggleRight()\">\n                        <span class=\"header-text no-select transform-color\">\n                                ▶&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"right-small float-right\" [@expansionPanel]=\"rightExpanded ? 'open' : 'closed'\">\n                        <app-subscribers-view></app-subscribers-view>\n                </div>\n        </div>\n        \n</app-navbar>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { ChatsService } from \"../../../../services/chats\"\nimport { ChatService } from \"../../../../services/chat\"\nimport { Subscription } from \"rxjs\"\n\n@Component({\n        selector: \"app-related-chats\",\n        templateUrl: \"related-chats.component.html\",\n        styleUrls: [\"related-chats.component.css\"]\n})\nexport class RelatedChatsComponent implements OnInit, OnDestroy {\n        chatIds: string[] = []\n        queried: boolean = false\n        chatSub: Subscription\n        constructor(private chatsService: ChatsService, private chatService: ChatService) {}\n        ngOnInit() {\n                \n                this.chatSub = this.chatService.getChatUpdated()\n                        .subscribe((chat) => {\n                                if (this.queried) return\n                                this.queried = true\n                                this.chatsService.getRelatedChatIds(chat.tags, chat.category, chat._id)\n                                        .then((chatIds: string[]) => {\n                                                this.chatIds = chatIds\n                                                this.chatsService.getChats(chatIds)\n                                        })\n                        })\n                this.chatService.getChat()\n        }\n\n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.chatSub.unsubscribe()\n        }\n        \n}","<div class=\"container\">\n        <app-header \n                [headerText]=\"'Related Chats'\" \n                [imageUrl]=\"'../../../assets/images/Related2.png'\"\n        ></app-header>\n        <div class=\"chat-selection-container\">\n                <app-chat-selection \n                        [chatIds]=\"this.chatIds\"\n                        [color]=\"'rgb(173, 243, 250)'\"\n                ></app-chat-selection>\n        </div>\n</div>","import { Component, Inject } from \"@angular/core\"\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'\nimport { ChatService } from 'src/app/services/chat'\nimport { DialogData } from \"./dialog-data\"\n\n@Component({\n        selector: 'app-chat-subscribe-admin-dialog',\n        templateUrl: 'chat-subscribe-admin-dialog.component.html',\n        styleUrls: [\"chat-subscribe-admin-dialog.component.css\"]\n})\nexport class ChatSubscribeAdminDialogComponent {\n        selectedImage\n        selectedImageUrl\n        constructor(\n                public dialogRef: MatDialogRef<ChatSubscribeAdminDialogComponent>, \n                private chatService: ChatService,\n                @Inject(MAT_DIALOG_DATA) public data: DialogData\n        ) {}\n        \n        onExit() {\n                this.dialogRef.close();\n        }\n\n       //Sets the selected image to the image selected by the user\n       onImageSelected(event) {\n                this.selectedImage = event.target.files[0]\n                const reader = new FileReader()\n                reader.readAsDataURL(this.selectedImage)\n                reader.onload = () => {\n                        const originalDataUrl = reader.result\n                        //Scaled the image down to a 400 X 400 square\n                        this.scaleImage(originalDataUrl, 400, 400, this.selectedImage.type, 0.7, (dataUrl) => {\n                                this.selectedImageUrl = dataUrl\n                        })\n                }\n        }\n\n        //https://codepen.io/shrinivas93/pen/xdLLPN\n        scaleImage(dataUrl, newWidth: number, newHeight: number, imageType: string, imageArguments: number, callback) {\n                imageType = imageType || \"image/jpeg\";\n                imageArguments = imageArguments || 0.7;\n                const image = new Image();\n                image.onload = function() {\n                        const canvas = document.createElement(\"canvas\");\n                        canvas.width = newWidth;\n                        canvas.height = newHeight;\n                        const ctx = canvas.getContext(\"2d\");\n                        ctx.drawImage(image, 0, 0, newWidth, newHeight);\n                        const newDataUrl = canvas.toDataURL(imageType, imageArguments);\n                        callback(newDataUrl);\n                }\n                image.src = dataUrl;\n        }\n\n        //Uploads image\n        uploadImage() {\n                if (this.selectedImageUrl === undefined || this.selectedImageUrl === null) return\n                this.chatService.setChatId(this.data.chatId)\n                this.chatService.setChatImage(this.selectedImageUrl)\n                this.dialogRef.close()\n        }\n\n}","<div class=\"container\">\n        <div class=\"dialog-header\">Upload chat image</div>\n        <div class=\"file-input-container\">\n                <input type=\"file\"\n                        accept=\"image/*\"\n                        (change)=\"onImageSelected($event)\"\n                >\n        </div>\n        <div mat-dialog-actions>\n                <button \n                        mat-button \n                        *ngIf=\"this.selectedImage !== null && this.selectedImage !== undefined\" \n                        (click)=\"uploadImage()\"\n                        class=\"upload-button\"\n                >Upload</button>\n                <button \n                        mat-button \n                        (click)=\"onExit()\" \n                        class=\"dialog-button\"\n                >Exit</button>\n                \n        </div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { ChatService } from \"../../../../../services/chat\"\nimport { AuthenticationService } from \"../../../../../services/authentication\"\nimport { UserService } from \"../../../../../services/user\"\nimport { Subscription } from \"rxjs\"\nimport { User } from \"../../../../../models/user\"\nimport { ChatSub } from 'src/app/models/chat-sub'\nimport { UsersService } from 'src/app/services/users'\nimport { UserSub } from \"../../../../../models/user-sub\"\nimport { ChatSubscribeAdminDialogComponent } from \"../chat-subscribe/chat-subscribe-admin-dialog/chat-subscribe-admin-dialog.component\"\nimport { MatDialog } from \"@angular/material/dialog\"\n\n@Component({\n        selector: \"app-chat-subscribe\",\n        templateUrl: \"chat-subscribe.component.html\",\n        styleUrls: [\"chat-subscribe.component.css\"]\n})\nexport class ChatSubscribeComponent implements OnInit, OnDestroy {\n        user: User\n        userSub: Subscription\n        subscribing: boolean = false\n        constructor(\n                private chatService: ChatService, \n                private authService: AuthenticationService, \n                private userService: UserService, \n                private usersService: UsersService,\n                private dialog: MatDialog\n        ) {}\n\n        //Initializes user object and user subscription\n        ngOnInit() {\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe( user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n        }\n\n        isAdmin() {\n                if (this.user === undefined || this.user === null) return false\n                return this.chatService.isAdmin(this.user._id)\n        }\n\n        //Subscribes user to chat if the user is logged in and has not yet subscribed\n        subscribe() {\n                if (this.subscribing) return\n                this.subscribing = true\n                this.chatService.subscribeToChat().then(\n                        () =>  {\n                                if (this.usersService.getUserSub(this.user._id) === null || this.usersService.getUserSub(this.user._id) === undefined) {\n                                this.usersService.getUser(this.user._id)\n                                        .then( (userSub: UserSub ) => {\n                                                this.usersService.users.push(userSub)\n                                                this.usersService.updateUsers()\n                                        })\n                                }\n                                this.userService.getUser(true)\n                                this.subscribing = false\n                        }\n                ).catch((reject) => console.log(reject))\n        }\n\n        //Unsubscribes user from chat if the user is logged in and is already subscribed\n        unsubscribe() {\n                this.chatService.unsubscribeFromChat().then(\n                        () => this.userService.getUser(true)\n                ).catch((reject) => console.log(reject))\n        }\n\n        //Checks if user has logged in \n        isAuthenticated() {\n                return this.authService.isAuthenticated()\n        }\n\n        //Checks if user is subscribed to the chat\n        isSubscribed() {\n                if (this.chatService.chatId === undefined || this.chatService.chatId === null || this.user === null || this.user === undefined) return false\n                const chat: ChatSub = this.chatService.getChatSub()\n                for (var i = 0; i < this.user.chatIds.length; i++) {\n                        if (this.user.chatIds[i] === chat._id) {\n                                return true\n                        }\n                }\n                return false\n        }\n\n        openDialog() {\n                const dialogRef = this.dialog.open(ChatSubscribeAdminDialogComponent, {\n                        width: '350px',\n                        height: \"350px\",\n                        data: { chatId: this.chatService.chatId }\n                })\n                dialogRef.afterClosed()\n                        .subscribe(() => {\n                                this.chatService.getChat(true)\n                        })\n        }\n\n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n}","<div class=\"container transform-height\" *ngIf=\"this.isAuthenticated()\">\n        <div class=\"admin-container transform-background-color\" *ngIf=\"this.isAdmin()\" (click)=\"openDialog()\">\n                <div class=\"admin-text transform-color\">\n                        Edit\n                </div>\n        </div>\n        <div class=\"subscribe-button-container transform-background-color\" *ngIf=\"!this.isSubscribed()\" (click)=\"this.subscribe()\">\n                <div class=\"subscribe-button transform-color\">\n                        Join\n                </div>\n        </div>\n        <div class=\"subscribed-button-container transform-background-color\" *ngIf=\"this.isSubscribed() && !this.isAdmin()\" (click)=\"this.unsubscribe()\">\n                <div class=\"subscribed-button transform-color\">\n                        Joined\n                </div>\n        </div>\n</div>","import { Component, Input } from \"@angular/core\"\nimport { Subscription } from 'rxjs'\nimport { Chat } from 'src/app/models/chat'\nimport { ChatService } from \"../../../../services/chat\"\nimport { ChatsService } from \"../../../../services/chats\"\n\n@Component({\n        selector: \"app-chat-title\",\n        templateUrl: \"chat-title.component.html\",\n        styleUrls: [\"chat-title.component.css\"]\n})\nexport class ChatTitleComponent {\n        chatSub: Subscription\n        chat: Chat\n        @Input() onChatPage: boolean = false\n        constructor(private chatService: ChatService, public chatsService: ChatsService) {}\n\n        ngOnInit() {\n                this.chatSub = this.chatService.getChatUpdated()\n                        .subscribe(chat => {\n                                this.chat = chat\n                        })\n                this.chatService.getChat()\n        }    \n\n        ngOnDestroy() {\n                this.chatSub.unsubscribe()\n        }    \n}","<div class=\"container\">\n        <div class=\"icon-container\">\n                <app-image-fab \n                        *ngIf=\"(this.chat !== undefined && this.chat !== null) && this.chat.image !== '$$$Default$$$'\" \n                        [imageUrl]=\"this.chat.image\" \n                        [showStatus]=\"false\"\n                ></app-image-fab>\n                <app-chat-icon \n                        *ngIf=\"this.chat === undefined || this.chat === null ||this.chat.image === '$$$Default$$$'\" \n                ></app-chat-icon>\n        </div>\n        <div class=\"title-container\">\n                <div class=\"title\"  *ngIf=\"this.chat !== undefined && this.chat !== null\">\n                        {{this.chat.title}}\n                </div>\n                <div class=\"title\" *ngIf=\"this.chat === undefined || this.chat === null\">\n                        Loading...\n                </div>\n                <div class=\"tags-container\" *ngIf=\"this.chat !== undefined && this.chat !== null\">\n                        <div class=\"tag-container\" *ngFor=\"let tag of this.chat.tags\">\n                                {{tag}}\n                        </div>\n                </div>\n        </div>\n        <span class=\"flex-expand\"></span>\n        <div class=\"chat-subscribe-container\" *ngIf=\"this.onChatPage\">\n                <app-chat-subscribe></app-chat-subscribe>\n        </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core'\nimport { ChatService } from '../../../../services/chat'\nimport { AuthenticationService } from \"../../../../services/authentication\"\nimport { UserService } from '../../../../services/user'\nimport { User } from '../../../../models/user'\nimport { Subscription } from 'rxjs'\nimport { NgForm } from '@angular/forms'\nimport { UsersService } from 'src/app/services/users'\nimport { UserSub } from 'src/app/models/user-sub'\n\n@Component({\n  selector: \"app-message-create\",\n  templateUrl: \"message-create.component.html\",\n  styleUrls: [\"message-create.component.css\"]\n})\nexport class MessageCreateComponent {\n  user: User\n  userSub: Subscription\n  constructor(private userService: UserService, private chatService: ChatService, private authService: AuthenticationService, private usersService: UsersService) {}\n\n  //Initializes link to UserService user\n  ngOnInit() {\n    this.userSub = this.userService.getUserUpdated()\n      .subscribe(user => {\n        this.user = user\n      })\n    this.userService.getUser()\n  }\n\n  //Requests message post to database\n  postMessage(messageForm: NgForm) {\n    const message = messageForm.value.message.trim()\n    if (message == \"\" || message == null || message == undefined) {return}\n    let timestamp = new Date().getTime()\n    this.chatService.postMessage(message, this.user._id, timestamp)\n    if (this.usersService.getUserSub(this.user._id) === null || this.usersService.getUserSub(this.user._id) === undefined) {\n      this.usersService.getUser(this.user._id)\n        .then( (userSub: UserSub ) => {\n          this.usersService.users.push(userSub)\n          this.usersService.updateUsers()\n        })\n    }\n    messageForm.resetForm()\n  }\n\n  //Check if user is authenticated\n  isAuthenticated() {\n    return this.authService.isAuthenticated()\n  }\n\n  //Avoid memory leaks\n  ngOnDestroy() {\n    this.userSub.unsubscribe()\n  }\n\n}\n","<div *ngIf=\"isAuthenticated()\"  class=\"container-one\">\n  <div class=\"container-two\">\n      <form #messageForm=\"ngForm\" (submit)=\"postMessage(messageForm)\" class=\"message-form\">\n        <!-- Message Field -->\n        <div class=\"message-field-container\">\n          <input\n            matInput\n            type=\"text\"\n            name=\"message\"\n            ngModel\n            placeholder=\"message\"\n            #message=\"ngModel\"\n            class=\"message-field\"\n            autocomplete=\"off\" \n          >\n          <!-- ?mat-form-field? -->\n        </div>\n        <div class=\"form-submit-container\">\n            <button mat-raised-button type=\"submit\" class=\"form-submit\">\n              Send\n            </button>\n        </div>\n      </form>\n  </div>\n</div>\n<div *ngIf=\"!isAuthenticated()\" class=\"placeholder\">\n  <p [routerLink]=\"'/api/authentication/login'\" class=\"placeholder-text login\">login</p>\n  <p class=\"placeholder-text\">or</p>\n  <p [routerLink]=\"'/api/authentication/register'\" class=\"placeholder-text register\">register</p>\n  <p class=\"placeholder-text\">to send messages</p>\n\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core'\nimport { UserService } from '../../../services/user'\nimport { User } from 'src/app/models/user'\nimport { Subscription } from 'rxjs'\nimport { Chat } from 'src/app/models/chat'\nimport { ChatService } from \"../../../services/chat\"\n\n@Component({\n  selector: \"app-message-view\",\n  templateUrl: \"message-view.component.html\",\n  styleUrls: [\"message-view.component.css\"]\n})\nexport class MessageViewComponent {\n  chat: Chat\n  chatSub: Subscription\n  user: User\n  userSub: Subscription\n\n  constructor(private userService: UserService, private chatService: ChatService) {}\n\n  //Keeping the user object updated\n  ngOnInit() {\n    //Creates link to UserService user\n    this.userSub = this.userService.getUserUpdated()\n      .subscribe(user => {\n        this.user = user\n      })\n    this.userService.getUser()\n    //Creates link to ChatService chat\n    this.chatSub = this.chatService.getChatUpdated()\n      .subscribe(chat => this.chat = chat)\n    this.chatService.getChat()\n  }\n\n  \n\n  //Avoid memory leak\n  ngOnDestroy() {\n    this.userSub.unsubscribe()\n    this.chatSub.unsubscribe()\n  }\n}\n","<div class=\"view-background\">\n  <app-chat-title *ngIf=\"this.chat != undefined && this.chat != null\" [onChatPage]=\"true\"></app-chat-title>\n  <app-messages></app-messages>\n  <app-message-create></app-message-create>\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core'\nimport { UsersService } from \"../../../../../services/users\"\nimport { UserSub } from 'src/app/models/user-sub'\n\n@Component({\n  selector: \"app-message-received\",\n  templateUrl: \"message-received.component.html\",\n  styleUrls: [\"message-received.component.css\"]\n})\nexport class MessageReceivedComponent implements OnInit {\n  @Input() senderId: string\n  @Input() timestamp: number\n  userSub: UserSub = {\n    _id: \"----\",\n    username: \"loading...\",\n    image: \"$$$Default$$$\",\n    online: false\n  }\n\n  constructor(private usersService: UsersService) {}\n\n  ngOnInit() {\n    this.getUser()\n  }\n\n  getUser() {\n    if (this.usersService.getUserSub(this.senderId)) {\n      this.userSub = this.usersService.getUserSub(this.senderId)\n    }\n  }\n\n  getTime(timestampMil: number) {\n    const timestamp = new Date()\n    //Converts the timestamp from milliseconds to the clients local time\n    timestamp.setTime(timestampMil)\n    //Raw Time \n    const rawTime = timestamp.toLocaleTimeString()\n    const time = this.parseRawTime(rawTime)\n    const rawDate = timestamp.toDateString()\n    const date = this.parseRawDate(rawDate)\n    return time + \" \" + date\n  }\n\n  //Format HH:MM:SS (AM/PM) -> HH:MM (AM/PM)\n  parseRawTime(rawTime: string) {\n    const splitTime = rawTime.split(\":\")\n    const time = splitTime[0] + \":\" + splitTime[1] + splitTime[2].split(\" \")[1].toLowerCase()\n    return time\n  }\n\n  //Format WEEKDAY MON DAY YEAR -> MON DAY\n  parseRawDate(rawDate: string) {\n    if (rawDate === new Date().toDateString()) return \"Today\"\n    const dateSplit = rawDate.split(\" \")\n    var date = dateSplit[1] + \" \" + dateSplit[2]\n    if (dateSplit[2].length === 2) {\n      if (dateSplit[2][1] === '1') date += \"st\"\n      else if (dateSplit[2][1] === '2') date += \"nd\"\n      else if (dateSplit[2][1] === '3') date += \"rd\"\n      else date += \"th\"\n    } else {\n      if (dateSplit[2] === \"1\") date += \"st\"\n      else if (dateSplit[2] === \"2\") date += \"nd\"\n      else if (dateSplit[2] === \"3\") date += \"rd\"\n      else date += \"th\"\n    }\n    return date\n  }\n}\n","<div class=\"container\">\n  <div class=\"user-icon-container\">\n    <div class=\"user-icon\">\n      <app-image-fab *ngIf=\"this.userSub.image != '$$$Default$$$'\" [imageUrl]=\"this.userSub.image\" [showStatus]=\"false\"></app-image-fab>\n      <app-user-icon *ngIf=\"this.userSub.image === '$$$Default$$$'\" [showStatus]=\"false\"></app-user-icon>\n    </div>\n  </div>\n  <div class=\"message-container\">\n    <div class=\"message-header-container\">\n      <div class=\"username\">{{this.userSub.username}}</div>\n      <!-- Timestamp -->\n      <div class=\"timestamp\">{{this.getTime(this.timestamp)}}</div>\n    </div>\n    <!-- Text -->\n    <div class=\"message-body-container\">\n        <span class=\"message-text\"><ng-content></ng-content></span>\n    </div>\n  </div>\n</div>\n","import { Component, Input} from '@angular/core'\n\n@Component({\n  selector: \"app-message-sent\",\n  templateUrl: \"message-sent.component.html\",\n  styleUrls: [\"message-sent.component.css\"]\n})\nexport class MessageSentComponent {\n  @Input() senderUsername\n}\n","<div class=\"container\">\n  <div class=\"message-container\">\n    <div class=\"message-header-container\">\n        <div class=\"username\">{{this.senderUsername}}</div>\n        <!-- Timestamp -->\n    </div>\n    <!-- Text -->\n    <div class=\"message-body-container\">\n        <p class=\"message-text\"><ng-content></ng-content></p>\n    </div>\n  </div>\n  <div class=\"user-icon-container\">\n    <div class=\"user-icon\">\n        <app-user-icon></app-user-icon>\n    </div>\n  </div>\n</div>\n  ","import { Component, OnInit, OnDestroy, ElementRef, ViewChild, AfterViewChecked } from \"@angular/core\"\nimport { ChatService } from \"../../../../services/chat\"\nimport { UserService } from \"../../../../services/user\"\nimport { Message } from \"../../../../models/message\"\nimport { Chat } from \"../../../../models/chat\"\nimport { User } from \"../../../../models/user\"\nimport { Subscription } from \"rxjs\"\n\n@Component({\n        selector: \"app-messages\",\n        templateUrl: \"messages.component.html\",\n        styleUrls: [\"messages.component.css\"]\n})\nexport class MessagesComponent {\n        @ViewChild(\"messages\") private messageContainer: ElementRef\n        chat: Chat\n        chatSub: Subscription\n        user: User\n        userSub: Subscription\n\n        constructor(private userService: UserService, private chatService: ChatService) {}\n\n        //Keeping the user object updated\n        ngOnInit() {\n                //Scrolls to most recent messages\n                this.scrollToBottom();\n                //Creates link to UserService user\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n                \n                //Creates link to ChatService chat\n                this.chatSub = this.chatService.getChatUpdated()\n                        .subscribe(chat => {\n                                this.chat = chat\n                                this.scrollToBottom()\n                        })\n                this.chatService.getChat()\n        }\n\n        ngAfterViewChecked() {\n                this.scrollToBottom()\n        }\n\n        //Compresses messages\n        compressMessages(messages: Message[]) : Message[] {\n                if (messages === undefined || messages === null || messages.length == 0) return []\n                var compressedMessages: Message[] = [{...messages[0]}]\n                for (var i = 1; i < messages.length; i++) {\n                        var len = compressedMessages.length\n                        if (messages[i].senderId == compressedMessages[len-1].senderId) {\n                                compressedMessages[len-1].text = compressedMessages[len-1].text\n                                        .concat(\"\\n\", messages[i].text)\n                                compressedMessages[len - 1].timestamp = messages[i].timestamp\n                        } else {\n                                compressedMessages.push({...messages[i]})\n                        }\n                }\n                return compressedMessages\n        }\n\n        //Checks if logged in user sent the message\n        sent(message: Message) : boolean {\n                //Checks if user exists\n                if (this.user == undefined || this.user == null) return false\n                return message.senderId == this.user._id\n        }\n                \n        //Checks if logged in user received the message\n        received(message: Message) : boolean {\n                return !this.sent(message)\n        }\n\n        //Scroll to most recent messages\n        scrollToBottom() {\n                try {\n                        var currentPos = this.messageContainer.nativeElement.scrollHeight\n                        this.messageContainer.nativeElement.scrollTop = currentPos\n                } catch(err) {}\n        }\n\n        //Avoid memory leak\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n                this.chatSub.unsubscribe()\n        }\n}\n","<div #messages *ngIf=\"this.chat != undefined && this.chat != null\" class=\"messages\">\n        <div *ngFor=\"let message of compressMessages(chat.messages)\">\n                <app-message-received [senderId]=\"message.senderId\" [timestamp]=\"message.timestamp\"> \n                        {{message.text}}\n                </app-message-received>\n                <div class=\"spacer invisible\"></div>\n        </div>\n</div>","import { Component, Input } from \"@angular/core\"\n\n@Component({\n        selector: \"app-subscriber\",\n        templateUrl: \"subscriber.component.html\",\n        styleUrls: [\"subscriber.component.css\"]\n})\nexport class SubscriberComponent {\n        @Input() username: string = \"loading...\"\n        @Input() online: boolean = false\n        @Input() image: string = \"$$$Default$$$\"\n        @Input() adminId: string = \"--admin--\"\n        @Input() subId: string = \"--user--\"\n}","<div class=\"subscriber-container\" *ngIf=\"this.subId !== this.adminId\">\n        <div class=\"subscriber-icon-container\">\n                <app-image-fab *ngIf=\"this.image != '$$$Default$$$'\" [imageUrl]=\"this.image\" [showStatus]=\"true\" [online]=\"this.online\"></app-image-fab>\n                <app-user-icon *ngIf=\"this.image === '$$$Default$$$'\" [showStatus]=\"true\" [online]=\"this.online\"></app-user-icon>\n        </div>\n        <div class=\"subscriber-username-container\">\n                <div class=\"subscriber-username\">\n                        {{this.username}}\n                </div>\n        </div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { ChatService } from \"../../../services/chat\"\nimport { Chat } from 'src/app/models/chat'\nimport { Subscription } from 'rxjs'\nimport { UsersService } from 'src/app/services/users'\n\n@Component({\n        selector: \"app-subscribers-view\",\n        templateUrl: \"subscribers-view.component.html\",\n        styleUrls: [\"subscribers-view.component.css\"]\n})\nexport class SubscribersViewComponent implements OnInit, OnDestroy {\n        chat: Chat\n        chatSub: Subscription\n        constructor(private chatService: ChatService, private usersService: UsersService) {}\n\n        //Initialize chat object\n        ngOnInit() {\n                this.chatSub = this.chatService.getChatUpdated()\n                        .subscribe(chat => {\n                                this.chat = chat\n                                // console.log(\"List of subs updated \\n Sub count: \" + this.chat.subs.length)\n                        })\n                this.chatService.getChat()\n        }\n\n        getUserSub(subId: string) {\n                if (this.usersService.getUserSub(subId)) {\n                        return this.usersService.getUserSub(subId)\n                }\n                return {\n                        _id: \"-----\",\n                        username: \"loading...\",\n                        image: \"$$$Default$$$\",\n                        online: false\n                }\n        }\n\n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.chatSub.unsubscribe()\n        }\n}\n\n","<app-header \n        [headerText]=\"'Admin'\" \n        [imageUrl]=\"'../../../assets/images/Admin2.png'\"\n></app-header>\n<app-subscriber \n        *ngIf=\"this.chat !== undefined && this.chat !== null\"\n        [username]=\"this.getUserSub(this.chat.adminId).username\" \n        [image]=\"this.getUserSub(this.chat.adminId).image\" \n        [online]=\"this.getUserSub(this.chat.adminId).online\" \n        [subId]=\"'------'\"\n></app-subscriber>\n\n<app-header \n        [headerText]=\"'Subscribers'\" \n        *ngIf=\"this.chat !== undefined && this.chat !== null && this.chat.subs.length > 0\" \n        [imageUrl]=\"'../../../assets/images/SubTwo.png'\"\n></app-header>\n<div *ngIf=\"this.chat\" class=\"subscribers-view-container\">\n        <app-subscriber \n                *ngFor=\"let subId of this.chat.subs\" \n                [adminId]=\"this.chat.adminId\" \n                [username]=\"this.getUserSub(subId).username\" \n                [image]=\"this.getUserSub(subId).image\" \n                [online]=\"this.getUserSub(subId).online\" \n                [subId]=\"subId\"\n        ></app-subscriber>\n</div>","import { Component, Input, AfterContentInit, ElementRef, ViewChild, AfterViewInit } from \"@angular/core\"\nimport { ChatsService } from 'src/app/services/chats'\nimport { trigger, state, style, animate, transition } from '@angular/animations'\n\n@Component({\n        selector: \"app-chat-option\",\n        animations: [\n                trigger('expansionBox', [\n                        state('open', style({\n                                backgroundColor: \"rgb(30, 40, 50)\",\n                                height: \"90px\",\n                                borderRadius: \"5px\",\n                                width: \"100%\",\n                                marginBottom: \"5px\",\n                                marginTop: \"5px\"\n                        })),\n                        state('closed', style({\n                                // backgroundColor: \"rgb(38, 49, 54)\",\n                                height: \"40px\",\n                                borderRadius: \"0px\",\n                                width: \"100%\"\n                        })),\n                                transition('open => closed', [\n                                        animate('0.1s')\n                        ]),\n                                transition('closed => open', [\n                                        animate('0.2s')\n                        ]),\n                ])\n        ],\n        templateUrl: \"chat-option.html\",\n        styleUrls: [\"chat-option.css\"]\n})\nexport class ChatOptionComponent {\n        @Input() chatId: string\n        @Input(\"color\") color: string\n        @ViewChild(\"chatTitle\") chatTitle: ElementRef\n        expanded = false;\n        constructor(private chatsService: ChatsService) {}\n\n        //Get chat sub\n        getChatSub() {\n                if (this.chatsService.getChatSub(this.chatId)) {\n                        return this.chatsService.getChatSub(this.chatId)\n                }\n                return {\n                        _id: \"-----\",\n                        title: \"loading...\",\n                        image: \"$$$Default$$$\",\n                        tags: [],\n                        subCount: 0\n                }\n        }\n\n        //Sets the selected chat id for the chat display\n        setAsSelectedChat() {\n                this.chatsService.setSelectedChatId(this.chatId)\n        }\n\n        //Change expand\n        toggle() {\n                this.expanded = !this.expanded\n                if (this.expanded) {\n                        this.setAsSelectedChat()\n                }\n        }\n}","<div [@expansionBox]=\"expanded ? 'open' : 'closed'\" (click)=\"this.toggle()\" class=\"container transform-background-color\">\n        <div class=\"top-container\">\n                <div class=\"icon-container\">\n                        <app-image-fab \n                                *ngIf=\"this.getChatSub().image != '$$$Default$$$'\" \n                                [imageUrl]=\"this.getChatSub().image\" \n                                [showStatus]=\"false\"\n                        ></app-image-fab>\n                        <app-chat-icon \n                                *ngIf=\"this.getChatSub().image === '$$$Default$$$'\" \n                        ></app-chat-icon>\n                </div>\n                <div class=\"title-container\">\n                <div class=\"title no-select transform-font-size transform-color\" [style]=\"'color:' + this.color + ';'\" *ngIf=\"!this.expanded\" #chatTitle>\n                                {{this.getChatSub().title}}\n                        </div>\n                        <div class=\"title-expanded no-select\" *ngIf=\"this.expanded\">\n                                {{this.getChatSub().title}}\n                        </div>\n                </div>\n        </div>\n        <div class=\"bottom-container\" *ngIf=\"this.expanded\">\n                <div class=\"bottom-bottom-container\">\n                        <div class=\"sub-count-container no-select\">\n                                {{'Sub Count: ' + this.getChatSub().subCount}}\n                        </div>\n                        <span class=\"flex-expand\"></span>\n                        <div class=\"go-button transform-opacity no-select\" [routerLink]=\"['/api/chat/view', this.chatId]\">\n                                Chat\n                        </div>\n                </div>\n                <div class=\"tags-container\">\n                        <div class=\"tag-container no-select transform-color\" *ngFor=\"let tag of this.getChatSub().tags\">\n                                {{tag}}\n                        </div>\n                </div>\n                \n        </div>\n\n</div>","import { Component, Input } from \"@angular/core\"\n\n@Component({\n        selector: \"app-chat-selection\",\n        templateUrl: \"chat-selection.html\",\n        styleUrls: [\"chat-selection.css\"]\n})\nexport class ChatSelectionComponent {\n        @Input() chatIds: string[]\n        @Input(\"color\") color: string = \"white\"\n}","<div class=\"container\">\n        <app-chat-option \n                *ngFor=\"let chatId of this.chatIds\" \n                [chatId]=\"this.chatId\"\n                [color]='this.color'\n        ></app-chat-option>\n</div>","import { Component, Input, AfterViewInit, ElementRef, ViewChild } from \"@angular/core\";\n\n@Component({\n        selector: \"app-header\",\n        templateUrl: \"header.component.html\",\n        styleUrls: [\"header.component.css\"]\n})\nexport class HeaderComponent implements AfterViewInit {\n        @Input(\"imageUrl\") imageUrl: string\n        @Input(\"headerText\") headerText: string\n        @ViewChild(\"headerTextElement\") headerTextElement: ElementRef\n        @Input(\"color\") color: string = \"white\"\n\n        ngAfterViewInit() {\n                this.headerTextElement.nativeElement.style.color = this.color\n        }\n\n}","<div class=\"container\">\n        <div class=\"icon-container\">\n                <app-image-fab [imageUrl]=\"this.imageUrl\"></app-image-fab>\n        </div>\n        <div class=\"text-container\">\n                <div class=\"text\" #headerTextElement>\n                        {{this.headerText}}\n                </div>\n        </div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { ChatsService } from \"../../../services/chats\"\nimport { Subscription } from \"rxjs\"\nimport { Chat } from \"../../../models/chat\"\nimport { UsersService } from 'src/app/services/users'\nimport { ChatService } from 'src/app/services/chat'\n\n\n@Component({\n  selector: \"app-chat-display\",\n  templateUrl: \"chat-display.component.html\",\n  styleUrls: [\"chat-display.component.css\"]\n})\nexport class ChatDisplayComponent implements OnInit, OnDestroy {\n  selectedChatSub: Subscription\n  selectedChat: Chat\n  selectedChatIdSub: Subscription\n  constructor(public chatsService: ChatsService, private chatService: ChatService, private usersService: UsersService) {}\n\n  ngOnInit() {\n   this.selectedChatIdSub = this.chatsService.getSelectedChatIdUpdated()\n    .subscribe((chatId: string) => {\n      if (this.selectedChat !== undefined && this.selectedChat._id === chatId) return\n      this.chatService.setChatId(chatId)\n      this.selectedChatSub = this.chatService.getChatUpdated()\n        .subscribe(chat => {\n          if (this.selectedChat === undefined || this.selectedChat === null || this.selectedChat._id !== this.chatsService.selectedChatId) {\n            this.selectedChat = chat\n            var userIds = []\n            for (var i = 0; i < this.selectedChat.subs.length; i++) {\n              const userId = this.selectedChat.subs[i]\n              if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                userIds.push(userId)\n              }\n            }\n            for (var i = 0; i < this.selectedChat.messages.length; i++) {\n              const userId = this.selectedChat.messages[i].senderId\n              if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                userIds.push(userId)\n              }\n            }\n            this.usersService.getUsers(userIds)\n          }\n        })\n      this.chatService.getChat(true)\n    })\n  }\n  //Avoid memory leaks\n  ngOnDestroy() {\n    if (this.selectedChatIdSub !== undefined && this.selectedChatIdSub === null) {\n      this.selectedChatIdSub.unsubscribe()\n    }\n    if (this.selectedChatSub !== undefined && this.selectedChatSub !== null) {\n      this.selectedChatSub.unsubscribe()\n    }\n  }\n}\n","<div class=\"container transform-opacity\" >\n      <app-chat-title></app-chat-title>\n      <app-messages></app-messages>\n      <div \n            *ngIf=\"this.chatsService.selectedChatId !== null && this.chatsService.selectedChatId\" \n            [routerLink]=\"['/api/chat/view', this.chatsService.selectedChatId]\"\n            class=\"chat-button transform-opacity transform-border transform-top no-select\"\n      >CHAT\n      </div>\n</div>\n\n\n\n\n\n","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { ChatsService } from 'src/app/services/chats';\nimport { Subscription } from 'rxjs';\n\n@Component({\n        selector: \"app-chat-lists\",\n        templateUrl: \"chat-lists.component.html\",\n        styleUrls: [\"chat-lists.component.css\"]\n})\nexport class ChatListsComponent implements OnInit, OnDestroy {\n        popChatIds: string[]\n        recChatIds: string[]\n        recomChatIds: string[]\n        popChatIdsSub: Subscription\n        recChatIdsSub: Subscription\n        recomChatIdsSub: Subscription\n        constructor(private chatsService: ChatsService) {}\n\n        ngOnInit() {    \n                this.popChatIdsSub = this.chatsService.getPopularChatIdsUpdated()\n                        .subscribe(popChatIds => {\n                                this.popChatIds = popChatIds\n                                this.chatsService.getChats(this.popChatIds)\n                                this.popChatIdsSub.unsubscribe()\n                        })\n                this.recomChatIdsSub = this.chatsService.getRecommendedChatIdsUpdated()\n                        .subscribe(recomChatIds => {\n                                this.recomChatIds = recomChatIds\n                                this.chatsService.getChats(this.recomChatIds)\n                                this.recomChatIdsSub.unsubscribe()\n                        })\n                this.recChatIdsSub = this.chatsService.getRecentChatIdsUpdated()\n                        .subscribe(recChatIds => {\n                                this.recChatIds = recChatIds\n                                this.chatsService.getChats(this.recChatIds)\n                                this.recChatIdsSub.unsubscribe()\n                        })\n                this.chatsService.getPopularChatIds()\n                this.chatsService.getRecentChatIds()\n                this.chatsService.getRecommendedChatIds()\n        }\n\n        ngOnDestroy() {\n                this.popChatIdsSub.unsubscribe()\n                this.recChatIdsSub.unsubscribe()\n                this.recomChatIdsSub.unsubscribe()\n        }\n}","<div class=\"container\">\n        <app-header \n                [headerText]=\"'Popular Chats'\" \n                [imageUrl]=\"'../../../assets/images/PopularTwo.png'\"\n        ></app-header>\n        <app-chat-selection \n                *ngIf=\"this.popChatIds !== undefined\"\n                [chatIds]=\"this.popChatIds\"\n                [color]=\"'rgb(173, 243, 250)'\"\n        ></app-chat-selection>\n        <app-header \n                [headerText]=\"'New Chats'\" \n                [imageUrl]=\"'../../../assets/images/NewChatOne.png'\"\n        ></app-header>\n        <app-chat-selection \n                *ngIf=\"this.recChatIds !== undefined\"\n                [chatIds]=\"this.recChatIds\"\n                [color]=\"'rgb(173, 243, 250)'\"\n        ></app-chat-selection>\n        <app-header \n                [headerText]=\"'Recommended Chats'\" \n                [imageUrl]=\"'../../../assets/images/RecomOne.png'\"\n            ></app-header>\n        <app-chat-selection \n                *ngIf=\"this.recomChatIds !== undefined\"\n                [chatIds]=\"this.recomChatIds\"\n                [color]=\"'rgb(173, 243, 250)'\"\n        ></app-chat-selection>\n</div>","import { Component, OnInit, OnDestroy, ElementRef, ViewChild } from \"@angular/core\"\nimport { FormControl } from \"@angular/forms\"\nimport { ChatsService } from \"../../../services/chats\"\nimport { Observable, Subscription } from \"rxjs\"\nimport { map, startWith } from 'rxjs/operators'\n\n@Component({\n        selector: \"app-chat-search\",\n        templateUrl: \"chat-search.component.html\",\n        styleUrls: [\"chat-search.component.css\"]\n})\nexport class ChatSearchComponent implements OnInit, OnDestroy {\n        @ViewChild(\"tagInput\") tagInput: ElementRef\n        formControlTags = new FormControl()\n        formControlTitles = new FormControl()\n        categories: String[] = [\n                \"Any\",\n                \"Science and Tech\",\n                \"Entertainment\",\n                \"Esports\",\n                \"Sports\",\n                \"Other\"\n        ]\n        titleValue: string = \"\"\n        tagValue: string = \"\"\n        queriedTags: boolean = false\n        queriedTitles: boolean = false\n        titleOptions: string[] = []\n        tagOptions: string[] = []\n        tagOptionsSub: Subscription\n        titleOptionsSub: Subscription\n        filteredTitleOptions: Observable<string[]>\n        filteredTagOptions: Observable<string[]>\n        tags: string[] = []\n        searching: boolean = false\n        searchResults: string[] = [] //Chat ids\n        constructor(private chatsService: ChatsService) {}\n\n        ngOnInit() {\n                this.filteredTagOptions = this.formControlTags.valueChanges.pipe(\n                        startWith(''),\n                        map(value => this.tagFilter(value))\n                )\n                this.filteredTitleOptions = this.formControlTitles.valueChanges.pipe(\n                        startWith(''),\n                        map(value => this.titleFilter(value))\n                )\n\n                this.titleOptionsSub = this.chatsService.getChatTitlesUpdated() \n                        .subscribe( titleOptions => {\n                                this.titleOptions = titleOptions\n                                this.titleOptionsSub.unsubscribe()\n                        })\n                this.tagOptionsSub = this.chatsService.getTagsUpdated() \n                        .subscribe( tagOptions => {\n                                this.tagOptions = tagOptions\n                                this.tagOptionsSub.unsubscribe()\n                        })\n                this.chatsService.getAllTags()\n                this.chatsService.getAllChatTitles()\n        }\n\n        //Adds a new tag to the list of tags\n        addTag() {\n                const newTag = this.fixTag(\n                                this.tagValue\n                                .trim()\n                                .toLowerCase()\n                        )\n                        .split(/\\s+/g)\n                        .join('‑')\n                this.tagValue = \"\"\n                if (this.tagInput !== undefined && this.tagInput !== null) {\n                        this.tagInput.nativeElement.value = \"\"\n                }\n                if (newTag === null || newTag === undefined || newTag === \"\" || newTag === \"new tag\") return\n                if (this.tags.indexOf(newTag) === -1 && this.tags.length <= 6) {\n                        this.tags.push(newTag)\n                }\n        }\n\n        //Removes a given tag\n        removeTag(tag: string) {\n                const index = this.tags.indexOf(tag)\n                if (index !== -1) {\n                        this.tags.splice(index, 1)\n                }\n        }\n\n        //Replace underscores and hyphens with no breakable hyphen\n        fixTag(tag: string) {\n                for (var i = 0; i < tag.length; i++) {\n                        if (tag[i] === '_' || tag[i] === '-') {\n                                tag = this.replaceAt(tag, i, '‑')\n                        }\n                }\n                return tag\n        }\n\n        //Search chats based on query params\n        searchChats(category: string) {\n                if (this.searching) return\n                this.searching = true\n                if (category === undefined || category === null || category === \"\") {\n                        category = \"Any\"\n                }\n                this.chatsService.searchChats(category, this.titleValue, this.tags)\n                        .then((results: string[]) => {\n                                this.searchResults = results\n                                this.chatsService.getChats(this.searchResults)\n                                this.searching = false\n                        })\n                        .catch(reject => {\n                                console.log(reject)\n                                this.searching = false\n                        })\n                return\n        }\n\n        //Replace character at index\n        replaceAt(current: string, index: number, replacement: string) {\n                return current.substr(0, index) + replacement + current.substr(index + replacement.length);\n        }\n\n        //https://stackblitz.com/angular/mjxnrkeoknp?file=src%2Fapp%2Fautocomplete-auto-active-first-option-example.ts\n        tagFilter(value: string): string[] {\n                this.tagValue = value\n                const filterValue = value.toLowerCase()    \n                return this.tagOptions.filter(option => option.toLowerCase().indexOf(filterValue) === 0)\n        }\n\n        titleFilter(value: string): string[] {\n                this.titleValue = value\n                const filterValue = value.toLowerCase()\n                return this.titleOptions.filter(option => option.toLowerCase().indexOf(filterValue) === 0)\n        }\n        \n        ngOnDestroy() {\n                this.tagOptionsSub.unsubscribe()\n                this.titleOptionsSub.unsubscribe()\n        }\n}","<div class=\"container\">\n        <app-header \n                [headerText]=\"'Search Chats'\" \n                [imageUrl]=\"'../../../assets/images/Search2.png'\"\n        ></app-header>\n        <div class=\"chat-search-container\">\n                <div class=\"chat-title-container\">\n                        <input\n                                type=\"text\"\n                                matInput\n                                name=\"title\"\n                                placeholder=\"title\"\n                                maxlength=\"40\"\n                                class=\"chat-title\"\n                                [matAutocomplete]=\"autoTitles\"\n                                [formControl]=\"this.formControlTitles\"\n                        >\n                </div>\n                <mat-autocomplete autoActiveFirstOption #autoTitles=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let title of filteredTitleOptions | async\" [value]=\"title\">\n                                        {{title}}\n                        </mat-option>\n                </mat-autocomplete>\n                <div class=\"chat-category-container\">\n                        <mat-select placeholder=\"Category\" ngModel #category=\"ngModel\" name=\"category\">\n                                <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n                                        {{category}}\n                                </mat-option>\n                        </mat-select>\n                </div>\n                <div class=\"chat-tags-container\">\n                        <div class=\"tags-container\">\n                                <div class=\"tag-container\" *ngFor=\"let tag of tags\">\n                                        <div class=\"tag-text-container no-select\">\n                                                {{tag}}\n                                        </div>\n                                        <div class=\"tag-button-container no-select\" (click)=\"removeTag(tag)\">\n                                                x\n                                        </div>\n                                </div>\n                                <button class=\"add-tag-button no-select\" (click)=\"addTag()\">+</button>\n                                <form (submit)=\"addTag()\">\n                                        <div class=\"add-tag-input-container\">\n                                                <input class=\"add-tag-input\" \n                                                        type=\"text\"\n                                                        matInput\n                                                        #tagInput\n                                                        name=\"tag\"\n                                                        placeholder=\"tag\"\n                                                        maxlength=\"25\"\n                                                        [matAutocomplete]=\"autoTags\"\n                                                        [formControl]=\"this.formControlTags\"\n                                                >\n                                        </div>\n                                        <mat-autocomplete autoActiveFirstOption #autoTags=\"matAutocomplete\">\n                                                <mat-option *ngFor=\"let tag of filteredTagOptions | async\" [value]=\"tag\">\n                                                          {{tag}}\n                                                </mat-option>\n                                        </mat-autocomplete>\n                                </form> \n                        </div>\n                </div>\n                <div class=\"search-button\" (click)=\"searchChats(category.value)\">\n                        search\n                </div>\n                <div class=\"results-container\">\n                        <div class=\"searching-label\" *ngIf=\"this.searching\">loading...</div>\n                        <app-chat-selection \n                                [chatIds]=\"this.searchResults\" \n                                [color]=\"'rgb(173, 243, 250)'\">\n                        </app-chat-selection>\n                </div>\n        </div>\n       \n</div>","import { Component, OnInit, OnDestroy } from '@angular/core'\nimport { ChatsService } from 'src/app/services/chats'\nimport { trigger, state, style, animate, transition } from '@angular/animations'\nimport { Subscription } from \"rxjs\"\nimport { MediaObserver } from \"@angular/flex-layout\"\nimport { ChatService } from 'src/app/services/chat'\n\n@Component({\n  selector: \"app-home-page\",\n  animations: [\n          trigger(\"expansionPanel\", [\n                  state(\"open\", style({\n                          visibility: \"visible\",\n                          width: \"calc(100% - 64px)\"\n                  })),\n                  state(\"closed\", style({\n                          width: \"0%\",\n                          visibility: \"hidden\"\n                  })),\n                  transition(\"open => closed\", [\n                          animate(\"0.2s\")\n                  ]),\n                  transition(\"closed => open\", [\n                          animate(\"0.2s\")\n                  ])\n          ]),\n          trigger(\"expansionTitle\", [\n                  state(\"visible\", style({\n                          width: \"30px\",\n                          lineHeight: \"30px\",\n                          marginRight: \"1px\",\n                          marginLeft: \"1px\",\n                          visibility: \"visible\"\n                  })),\n                  state(\"invisible\", style({\n                          width: \"0px\",\n                          visibility: \"hidden\"\n                  }))\n            ])\n  ],\n  templateUrl: \"home-page.component.html\",\n  styleUrls: [\"home-page.component.css\"],\n  providers: [ChatService]\n})\nexport class HomePageComponent implements OnInit, OnDestroy {\n  constructor(private chatsService: ChatsService, public media: MediaObserver, private chatService: ChatService) {}\n  leftExpanded: boolean = false\n  rightExpanded: boolean = false\n  popChatIdsSub: Subscription\n  ngOnInit() {\n        this.popChatIdsSub = this.chatsService.getPopularChatIdsUpdated()\n                .subscribe(popularChatsIds => {\n                        this.chatsService.setSelectedChatId(popularChatsIds[0])\n                        this.popChatIdsSub.unsubscribe()\n                })\n  }\n\n  //Toggle left expansion panel\n  toggleLeft() {\n    this.leftExpanded = !this.leftExpanded\n    if (this.leftExpanded) {\n      this.rightExpanded = false\n    }\n  }\n\n  //Toggle right expansion panel\n  toggleRight() {\n    this.rightExpanded = !this.rightExpanded\n    if (this.rightExpanded) {\n      this.leftExpanded = false\n    }\n  }\n\n  //Toggle middle expansion panel \n  toggleMiddle() {\n    this.rightExpanded = false\n    this.leftExpanded = false\n  }\n\n  ngOnDestroy() {\n        this.popChatIdsSub.unsubscribe()\n  }\n}\n","<app-navbar>\n        <div *ngIf=\"this.media.isActive('gt-sm')\" fxShow=\"true\" fxHide.lt-md=\"true\" class=\"container\">\n                <div class=\"left\">\n                        <app-chat-search></app-chat-search>\n                </div>\n                <div class=\"middle\">\n                        <app-chat-display></app-chat-display>\n                </div>\n                <div class=\"right\">\n                        <app-chat-lists></app-chat-lists>\n                </div>\n        </div>\n        <div *ngIf=\"this.media.isActive('lt-md')\" fxShow=\"true\" fxHide.gt-sm=\"true\" class=\"container-small\">\n                <div class=\"header-container float-left\" [@expansionTitle]=\"!leftExpanded ? 'visible' : 'invisible'\" (click)=\"toggleLeft()\">\n                        <span class=\"header-text no-select transform-color\">\n                                ◀&#xFE0E;\n                        </span> \n                </div>\n                <div class=\"left-small float-left\" [@expansionPanel]=\"leftExpanded ? 'open' : 'closed'\">\n                        <app-chat-search></app-chat-search>\n                </div> \n\n                <div class=\"header-container float-left\" [@expansionTitle]=\"(leftExpanded || rightExpanded) ? 'visible' : 'invisible'\" (click)=\"toggleMiddle()\">\n                        <span class=\"header-text transform-color no-select\">\n                                ◈&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"middle-small float-left\" [@expansionPanel]=\"(!rightExpanded && !leftExpanded)? 'open' : 'closed'\">\n                        <app-chat-display></app-chat-display>\n                </div>\n\n\n                <div class=\"header-container float-right\" [@expansionTitle]=\"!rightExpanded ? 'visible' : 'invisible'\" (click)=\"toggleRight()\">\n                        <span class=\"header-text no-select transform-color\">\n                                ▶&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"right-small float-right\" [@expansionPanel]=\"rightExpanded ? 'open' : 'closed'\">\n                        <app-chat-lists></app-chat-lists>\n                </div>\n        </div>\n</app-navbar>\n\n\n","import { Component, Input } from \"@angular/core\"\nimport { DomSanitizer } from \"@angular/platform-browser\"\n\n@Component({\n        selector: \"app-image-fab\",\n        templateUrl: \"image-fab.component.html\",\n        styleUrls: [\"image-fab.component.css\"]\n})\nexport class ImageFabComponent {\n        @Input() imageUrl: string\n        @Input() showStatus: boolean\n        @Input() online: boolean\n        constructor(public DomSanitationService: DomSanitizer) {}\n}\n","<div class=\"container\">\n        <img \n                [src]=\"DomSanitationService.bypassSecurityTrustUrl(imageUrl)\" \n                class=\"icon-button\" \n                object-fit=\"contain\"\n        >\n        <div class=\"online-marker\" *ngIf=\"this.online && this.showStatus\"></div>\n        <div class=\"offline-marker\" *ngIf=\"!this.online && this.showStatus\"></div>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core'\nimport { AuthenticationService } from '../../services/authentication'\nimport { NgForm } from '@angular/forms'\n\n@Component({\n  selector: \"app-login-page\",\n  templateUrl: \"login-page.component.html\",\n  styleUrls: [\"login-page.component.css\"],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LoginPageComponent {\n  errorMessage: string\n  loggingIn: boolean = false\n  constructor(private authService : AuthenticationService) {}\n\n  login(loginForm: NgForm) {\n    if (this.loggingIn) return\n    if (loginForm.invalid) this.errorMessage = \"Enter missing data\"\n    else {\n      this.loggingIn = true\n      const email = loginForm.value.email\n      const password = loginForm.value.password\n      this.authService.login(email, password)\n        .then( (resolve: string) => {\n          this.errorMessage = resolve\n          loginForm.resetForm()\n          this.loggingIn = false\n        })\n    }\n  }\n}","<div class=\"login-background\">\n  <mat-card class=\"login-form-card\">\n    <div class=\"login-form-container\">\n      <form #loginForm=\"ngForm\" (submit)=\"login(loginForm)\">\n          <!-- Email Field -->\n          <div class=\"form-input-container\">\n            <mat-form-field>\n              <input\n                matInput\n                type=\"text\"\n                name=\"email\"\n                ngModel\n                required\n                placeholder=\"email\"\n                #email=\"ngModel\"\n                class=\"input-field\"\n              >\n              <mat-error *ngIf=\"email.invalid\">Enter your email</mat-error>\n            </mat-form-field>\n          </div>\n          <!-- Password Field -->\n          <div class=\"form-input-container\">\n            <mat-form-field>\n              <input\n                matInput\n                name=\"password\"\n                ngModel\n                required\n                placeholder=\"password\"\n                #password=\"ngModel\"\n                type=\"password\"\n                class=\"input-field\"\n              >\n              <mat-error *ngIf=\"password.invalid\">Enter your password</mat-error>\n            </mat-form-field>\n          </div>\n\n          <!-- Submit Button -->\n          <div class=\"form-button-container\">\n            <button mat-raised-button type=\"submit\" class=\"form-submit-button\">Login</button>\n          </div>\n          <div *ngIf=\"this.errorMessage !== undefined\" class=\"error-message\">\n            {{this.errorMessage}}\n          </div>\n      </form>\n      <div class=\"message-container\">\n        <p class=\"placeholder-text\">Don't have an account?</p>\n        <button mat-raised-button [routerLink]=\"'/api/authentication/register'\" class=\"register-button\">Register!</button>\n      </div>\n    </div>\n  </mat-card>\n</div>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { AuthenticationService } from \"../../services/authentication\"\nimport { UserService } from \"../../services/user\"\nimport { Subscription } from 'rxjs'\nimport { User } from 'src/app/models/user'\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n  styleUrls: [\"navbar.component.css\"]\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  userSub : Subscription\n  user : User\n  constructor(private authService : AuthenticationService, private userService : UserService) {}\n\n  ngOnInit() {\n    this.userSub = this.userService.getUserUpdated()\n      .subscribe(user => {\n        this.user = user\n      })\n    if (this.authService.isAuthenticated()) {\n      this.userService.getUser()\n    }\n  }\n\n  //Checks if user is logged in\n  isAuthenticated() {\n    return this.authService.isAuthenticated()\n  }\n\n  //Avoids memory leak\n  ngOnDestroy() {\n    this.userSub.unsubscribe()\n  }\n}\n","<div class=\"nav-container\">\n  <mat-toolbar class=\"navbar-main\">\n    <div class=\"account-button transform-border\" *ngIf=\"this.user !== undefined && this.user !== null\">\n      <app-user-icon \n        [routerLink]=\"'/api/user'\"  \n        *ngIf=\"this.user.image === '$$$Default$$$'\" \n        class=\"change-on-hover\" \n        [showStatus]=\"true\" \n        [online]=\"this.user.online\"\n        style=\"outline: 0 !important;\"\n      ></app-user-icon>\n      <app-image-fab \n        [routerLink]=\"'/api/user'\"  \n        *ngIf=\"this.user.image != '$$$Default$$$'\" \n        [imageUrl]=\"this.user.image\" \n        [showStatus]=\"true\" \n        [online]=\"this.user.online\" \n        class=\"change-on-hover\"\n        style=\"outline: 0 !important;\"\n      ></app-image-fab>\n    </div>\n    <span *ngIf=\"this.isAuthenticated()\" class=\"flexExpand\"></span>\n    <div \n      [routerLink]=\"''\" \n      class=\"home-link \n      transform-color \n      transform-border-bottom \n      transform-border-top\n      no-select\"\n    >RUMBLE</div> \n    <span class=\"flexExpand\" *ngIf=\"!isAuthenticated()\"></span>\n    <button mat-raised-button class=\"button-login transform-opacity\" [routerLink]=\"'/api/authentication/login'\" *ngIf=\"!isAuthenticated()\">Login</button>\n    <button mat-raised-button class=\"button-register transform-opacity\" [routerLink]=\"'/api/authentication/register'\" *ngIf=\"!isAuthenticated()\">Register</button>\n  </mat-toolbar>\n  <ng-content></ng-content>\n</div>\n","import { Component } from \"@angular/core\"\nimport { NgForm } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication'\n\n@Component({\n  selector: \"app-register-page\",\n  templateUrl: \"register-page.component.html\",\n  styleUrls: [\"register-page.component.css\"]\n})\nexport class RegisterPageComponent {\n  errorMessage: string\n  registering: boolean = false;\n  constructor(private authService: AuthenticationService) {}\n\n  register(registerForm: NgForm) {\n    if (this.registering) return \n    else if (registerForm.invalid) {\n      this.errorMessage = \"Enter missing data\"\n      return\n    }\n    const username = registerForm.value.username\n    const email = String(registerForm.value.email).toLowerCase()\n    const password = registerForm.value.password\n    const reEnteredPassword = registerForm.value.reEnteredPassword\n    if (password !== reEnteredPassword) {\n      this.errorMessage = \"Passwords do not match\"\n      return\n    }\n    if (!this.isValidEmail(email)) {\n      this.errorMessage = \"Email is invalid\"\n      return \n    } \n    if (!this.passwordIsSafe(password)) {\n      this.errorMessage = \"Insecure password\"\n      alert(\"Password must contain:\\n-One capital letter\\n-One lowercase letter\\n-One special character\\n-One number\\n-At least 8 characters\")\n      return\n    }\n    this.registering = true\n    this.authService.register(username, email, password)\n      .then( (resolve: string) => {\n        this.errorMessage = resolve\n        this.registering = false\n      })\n  }\n  //Checks if password is safe\n  passwordIsSafe(password: string) {\n    // const regex = /^(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/\n    // return regex.test(password)\n    return true\n  }\n\n  //Checks if email syntax is correct\n  isValidEmail(email: string) {\n    const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    return regex.test(email);\n  }\n}\n","<div class=\"register-background\">\n    <mat-card class=\"register-form-card\">\n      <div class=\"register-form-container\">\n        <form #registerForm=\"ngForm\" (submit)=\"register(registerForm)\">\n            <!-- Username Field -->\n            <div class=\"form-input-container\">\n              <mat-form-field>\n                <input\n                  matInput\n                  type=\"text\"\n                  name=\"username\"\n                  ngModel\n                  required\n                  placeholder=\"username\"\n                  #username=\"ngModel\"\n                  class=\"input-field\"\n                >\n                <mat-error *ngIf=\"username.invalid\">Enter your username</mat-error>\n              </mat-form-field>\n            </div>\n            <!-- Email Field -->\n            <div class=\"form-input-container\">\n              <mat-form-field>\n                <input\n                  matInput\n                  type=\"text\"\n                  name=\"email\"\n                  ngModel\n                  required\n                  placeholder=\"email\"\n                  #email=\"ngModel\"\n                  class=\"input-field\"\n                >\n                <mat-error *ngIf=\"email.invalid\">Enter your email</mat-error>\n              </mat-form-field>\n            </div>\n            <!-- Password Field -->\n            <div class=\"form-input-container\">\n              <mat-form-field>\n                <input\n                  matInput\n                  name=\"password\"\n                  ngModel\n                  required\n                  placeholder=\"password\"\n                  #password=\"ngModel\"\n                  type=\"password\"\n                  class=\"input-field\"\n                >\n                <mat-error *ngIf=\"password.invalid\">Enter your password</mat-error>\n              </mat-form-field>\n            </div>\n            <!-- Re-entered Password Field -->\n            <div class=\"form-input-container\">\n              <mat-form-field>\n                <input\n                  matInput\n                  name=\"reEnteredPassword\"\n                  ngModel\n                  required\n                  placeholder=\"re-enter password\"\n                  #reEnteredPassword=\"ngModel\"\n                  type=\"password\"\n                  class=\"input-field\"\n                >\n                <mat-error>Re-enter your password</mat-error>\n              </mat-form-field>\n            </div>\n            <!-- Submit Button -->\n            <div class=\"form-button-container\">\n              <button mat-raised-button type=\"submit\" class=\"form-submit-button\">Register</button>\n            </div>\n            \n            <div *ngIf=\"this.errorMessage !== undefined\" class=\"error-message\">\n                {{this.errorMessage}}\n              </div>\n        </form>\n        <div class=\"message-container\">\n          <p class=\"placeholder-text\">Already have an account?</p>\n          <button mat-raised-button [routerLink]=\"'/api/authentication/login'\" class=\"login-button\">Login!</button>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n","import { Component, Input } from \"@angular/core\"\n\n@Component({\n        selector: \"app-user-icon\",\n        templateUrl: \"user-icon.component.html\",\n        styleUrls: [\"user-icon.component.css\"]\n})\nexport class UserIconComponent {\n        @Input(\"showStatus\") showStatus: boolean\n        @Input(\"online\") online: boolean\n}","<div class=\"icon-button\">\n        <div class=\"online-marker\" *ngIf=\"this.showStatus && this.online\"></div>\n        <div class=\"offline-marker\" *ngIf=\"this.showStatus && !this.online\"></div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { UserService } from \"../../../services/user\"\nimport { User } from 'src/app/models/user'\nimport { Subscription } from 'rxjs'\n\n@Component({\n        selector: \"app-user-chats-view\",\n        templateUrl: \"user-chats-view.component.html\",\n        styleUrls: [\"user-chats-view.component.css\"]\n})\nexport class UserChatsViewComponent implements OnInit, OnDestroy {\n        user: User\n        userSub: Subscription\n        constructor(private userService: UserService) {}\n\n        ngOnInit() {\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n        }\n\n        //Get chat Ids from user chatIds list\n        getChatIds() {\n                if (this.user === undefined || this.user === null) return []\n                var chatIds = []\n                for (var i = 0; i < this.user.chatIds.length; i++) {\n                        chatIds.push(this.user.chatIds[i])\n                }\n                return chatIds\n        }\n\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n}","<div class=\"container\">\n        <div class=\"header-container\">\n                <app-header \n                        [headerText]=\"'Subscriptions'\" \n                        [imageUrl]=\"'../../../assets/images/SubsTwo.png'\"\n                ></app-header>     \n        </div>\n        <div class=\"chats-container\">\n                <app-chat-selection \n                        [chatIds]=\"this.getChatIds()\"\n                        [color]=\"'rgb(173, 243, 250)'\"\n                >\n                </app-chat-selection>\n        </div>\n</div>","import { Component, Input } from \"@angular/core\"\nimport { UserService } from 'src/app/services/user'\n\n@Component({\n        selector: \"app-friend-request\",\n        templateUrl: \"friend-request.component.html\",\n        styleUrls: [\"friend-request.component.css\"]\n})\nexport class FriendRequestComponent {\n        @Input() username: string\n        @Input() image: string = \"$$$Default$$$\"\n        @Input() userId: string\n\n        constructor(private userService: UserService) {}\n\n        //Accept user's friend request\n        acceptRequest() {\n                this.userService.acceptFriendRequest(this.userId)\n        }\n\n        //Decline user's friend request\n        declineRequest() {\n                this.userService.declineFriendRequest(this.userId)\n        }\n}","<div class=\"request-container\">\n        <div class=\"request-icon-container\">\n                <app-image-fab \n                        *ngIf=\"this.image !== '$$$Default$$$'\" \n                        [imageUrl]=\"this.image\" \n                        [showStatus]=\"false\" \n                        [online]=\"false\"\n                ></app-image-fab>\n                <app-user-icon \n                        *ngIf=\"this.image === '$$$Default$$$'\" \n                        [showStatus]=\"false\" \n                        [online]=\"false\"\n                ></app-user-icon>\n        </div>\n        <div class=\"request-username-container\">\n                <div class=\"request-username\">\n                        {{this.username}}\n                </div>\n        </div>\n        <div class=\"request-actions-container\">\n                <div \n                        class=\"request-accept \n                        transform-background-color \n                        transform-font-size \n                        transform-color\" \n                        (click)=\"acceptRequest()\"\n                >   ✓\n                </div>\n                <div \n                        class=\"request-decline \n                        transform-background-color \n                        transform-font-size \n                        transform-color\" \n                        (click)=\"declineRequest()\"\n                >   x\n                </div>\n        </div>\n</div>","import { Component, OnInit, OnDestroy} from \"@angular/core\"\nimport { Subscription } from \"rxjs\"\nimport { UserService } from \"../../../services/user\"\nimport { User } from \"../../../models/user\"\nimport { UsersService } from 'src/app/services/users'\n\n@Component({\n        selector: \"app-user-friends-view\",\n        templateUrl: \"user-friends-view.component.html\",\n        styleUrls: [\"user-friends-view.component.css\"]\n})\nexport class UserFriendsViewComponent implements OnInit, OnDestroy {\n        user: User\n        userSub: Subscription\n        constructor(private userService: UserService, private usersService: UsersService) {}\n        \n        ngOnInit() {\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n        }\n\n        getUserSub(subId: string) {\n                if (this.usersService.getUserSub(subId)) {\n                        return this.usersService.getUserSub(subId)\n                }\n                return {\n                        _id: \"-----\",\n                        username: \"loading...\",\n                        image: \"$$$Default$$$\",\n                        online: false\n                }\n        }\n\n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n\n\n}","<div class=\"container\">\n        <app-header [headerText]=\"'Friends'\" [imageUrl]=\"'../../../assets/images/FriendsThree.png'\"></app-header>\n        <app-subscriber\n                *ngFor=\"let friendId of this.user.friendIds\" \n                [username]=\"this.getUserSub(friendId).username\" \n                [online]=\"this.getUserSub(friendId).online\"\n                [image]=\"this.getUserSub(friendId).image\"\n        ></app-subscriber>\n        <app-header *ngIf=\"this.user.friendReqIds.length > 0\" [headerText]=\"'Friend Requests'\" [imageUrl]=\"'../../../assets/images/SubsOne.png'\"></app-header>\n        <app-friend-request \n                *ngFor=\"let requestId of this.user.friendReqIds\"\n                [username]=\"this.getUserSub(requestId).username\" \n                [image]=\"this.getUserSub(requestId).image\"\n                [userId]=\"requestId\"\n        ></app-friend-request>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { UserService } from \"../../services/user\"\nimport { Subscription } from \"rxjs\"\nimport { User } from 'src/app/models/user'\nimport { AuthenticationService } from 'src/app/services/authentication'\nimport { ChatsService } from 'src/app/services/chats'\nimport { UsersService } from 'src/app/services/users'\nimport { trigger, state, style, animate, transition } from '@angular/animations'\nimport { MediaObserver } from \"@angular/flex-layout\"\n\n@Component({\n        selector: \"app-user-page\",\n        templateUrl: \"user-page.component.html\",\n        styleUrls: [\"user-page.component.css\"],\n        animations: [\n                trigger(\"expansionPanel\", [\n                        state(\"open\", style({\n                                visibility: \"visible\",\n                                width: \"calc(100% - 64px)\"\n                        })),\n                        state(\"closed\", style({\n                                width: \"0%\",\n                                visibility: \"hidden\"\n                        })),\n                        transition(\"open => closed\", [\n                                animate(\"0.2s\")\n                        ]),\n                        transition(\"closed => open\", [\n                                animate(\"0.2s\")\n                        ])\n                ]),\n                trigger(\"expansionTitle\", [\n                        state(\"visible\", style({\n                                width: \"30px\",\n                                lineHeight: \"30px\",\n                                marginRight: \"1px\",\n                                marginLeft: \"1px\",\n                                visibility: \"visible\"\n                        })),\n                        state(\"invisible\", style({\n                                width: \"0px\",\n                                visibility: \"hidden\"\n                        }))\n                  ])\n        ]\n})\nexport class UserPageComponent implements OnInit, OnDestroy {\n        user: User\n        userSub: Subscription\n        leftExpanded: boolean = false\n        rightExpanded: boolean = true\n        queried: boolean = false\n        constructor(\n                private userService: UserService, \n                private authService: AuthenticationService, \n                private chatsService: ChatsService,\n                private usersService: UsersService,\n                public media: MediaObserver\n        ) {}\n\n        ngOnInit() {\n                if (this.queried) return\n                this.queried = true\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                                var chatIds = []\n                                for (var i = 0; i < this.user.chatIds.length; i++) {\n                                        const chatId = this.user.chatIds[i]\n                                        if (!this.chatsService.containsChatSub(chatId) && chatIds.indexOf(chatId) === -1) {\n                                                chatIds.push(chatId)\n                                        }\n                                }\n                                this.chatsService.getChats(chatIds)\n                                var userIds = []\n                                for (var i = 0; i < this.user.friendIds.length; i++) {\n                                        const userId = this.user.friendIds[i]\n                                        if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                                                userIds.push(userId)\n                                        }\n                                }\n                                for (var i = 0; i < this.user.friendReqIds.length; i++) {\n                                        const userId = this.user.friendReqIds[i]\n                                        if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                                                userIds.push(userId)\n                                        }\n                                }\n                                this.usersService.getUsers(userIds)\n                        })\n                this.userService.getUser()\n        }\n\n        isAuthenticated() {\n                return this.authService.isAuthenticated()\n        }\n\n        //Avoid memoroy leaks\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n\n        //Toggles the left expansion panel\n        toggleLeft() {\n                this.leftExpanded = !this.leftExpanded\n                if (this.leftExpanded) {\n                        this.rightExpanded = false\n                }\n        }\n\n        //Toggles the right expansion panel\n        toggleRight() {\n                this.rightExpanded = !this.rightExpanded\n                if (this.rightExpanded) {\n                        this.leftExpanded = false\n                }\n        }\n\n        //Toggles the middle expansion panel\n        toggleMiddle() {\n                this.rightExpanded = false\n                this.leftExpanded = false\n        }\n} ","<app-navbar>\n        <div *ngIf=\"this.media.isActive('gt-sm')\" class=\"container\" fxShow=\"true\" fxHide.lt-md=\"true\">\n                <div class=\"left\" *ngIf=\"this.user != null && this.user != undefined\">\n                        <app-user-friends-view></app-user-friends-view>\n                </div>\n                <div class=\"middle\" *ngIf=\"this.user != null && this.user != undefined\">\n                        <app-user-chats-view></app-user-chats-view>\n                </div>\n                <div class=\"right\" *ngIf=\"this.user != null && this.user != undefined\">\n                        <app-user-view></app-user-view>\n                </div>\n        </div>\n        \n        <div *ngIf=\"this.media.isActive('lt-md')\" fxShow=\"true\" fxHide.gt-sm=\"true\" class=\"container-small\">\n                <div class=\"header-container float-left\" [@expansionTitle]=\"!leftExpanded ? 'visible' : 'invisible'\" (click)=\"toggleLeft()\">\n                        <span class=\"header-text no-select transform-color\">\n                                ◀&#xFE0E;\n                        </span> \n                </div>\n                <div class=\"left-small float-left\" [@expansionPanel]=\"leftExpanded ? 'open' : 'closed'\">\n                        <app-user-friends-view></app-user-friends-view>\n                </div>\n        \n                <div class=\"header-container float-left\" [@expansionTitle]=\"(leftExpanded || rightExpanded) ? 'visible' : 'invisible'\" (click)=\"toggleMiddle()\">\n                        <span class=\"header-text transform-color no-select\">\n                                ◈&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"middle-small float-left\" [@expansionPanel]=\"(!rightExpanded && !leftExpanded)? 'open' : 'closed'\">\n                        <app-user-chats-view></app-user-chats-view>\n                </div>\n        \n        \n                <div class=\"header-container float-right\" [@expansionTitle]=\"!rightExpanded ? 'visible' : 'invisible'\" (click)=\"toggleRight()\">\n                        <span class=\"header-text no-select transform-color\">\n                                ▶&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"right-small float-right\" [@expansionPanel]=\"rightExpanded ? 'open' : 'closed'\">\n                        <app-user-view></app-user-view>\n                </div>\n        </div>\n</app-navbar>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { NgForm } from '@angular/forms'\nimport { Chat } from 'src/app/models/chat'\nimport { Subscription } from 'rxjs'\nimport { ChatCreateService } from 'src/app/services/chat-create'\n\n@Component({\n        selector: \"app-chat-tags\",\n        templateUrl: \"chat-tags.component.html\",\n        styleUrls: [\"chat-tags.component.css\"]\n})\nexport class ChatTagsComponent implements OnInit, OnDestroy{\n        newChat: Chat\n        newChatSub: Subscription\n\n        constructor(private chatCreateService: ChatCreateService) {}\n\n        ngOnInit() {\n                this.newChatSub = this.chatCreateService.getNewChatUpdated()\n                        .subscribe(chat => { \n                                this.newChat = chat\n                        })\n                this.chatCreateService.updateNewChat()\n        }\n\n        //Adds a new tag to the list of tags\n        addTag(tagForm: NgForm) {\n                const newTag = this.fixTag(tagForm\n                                .value\n                                .tag\n                                .trim()\n                                .toLowerCase()\n                        )\n                        .split(/\\s+/g)\n                        .join('‑')\n                if (!(newTag === null || newTag === undefined || newTag === \"\" || newTag === \"new tag\")) {\n                        this.chatCreateService.addTag(newTag)\n                }\n                tagForm.resetForm()\n        }\n\n        //Replace underscores and hyphens with no breakable hyphen\n        fixTag(tag: string) {\n                for (var i = 0; i < tag.length; i++) {\n                        if (tag[i] === '_' || tag[i] === '-') {\n                                tag = this.replaceAt(tag, i, '‑')\n                        }\n                }\n                return tag\n        }\n\n        //Replace character at index\n        replaceAt(current: string, index: number, replacement: string) {\n                return current.substr(0, index) + replacement + current.substr(index + replacement.length);\n        }\n\n\n        updateOptions(queryText: string) {\n                // this.chatsService.getTags(queryText) \n        }\n\n        ngOnDestroy() {\n                this.newChatSub.unsubscribe()\n        }\n}","<div class=\"main-container\">\n        <div class=\"tags-container\">\n                <div class=\"tag-container\" *ngFor=\"let tag of newChat.tags\">\n                        <app-tag [tagText]=\"tag\"></app-tag>\n                </div>\n                <button class=\"add-tag-button no-select\" (click)=\"addTag(tagForm)\">+</button>\n                <form #tagForm=\"ngForm\" (submit)=\"addTag(tagForm)\">\n                        <div class=\"add-tag-input-container tag-container\">\n                                <input class=\"add-tag-input\" \n                                        type=\"text\"\n                                        matInput\n                                        name=\"tag\"\n                                        ngModel\n                                        #tag=\"ngModel\"\n                                        placeholder=\"tag\"\n                                        maxlength=\"25\"\n                                        autocomplete=\"off\"\n                                >\n                        </div>\n                </form> \n                \n        </div>\n</div>","import { Component, Input } from \"@angular/core\"\nimport { ChatCreateService } from 'src/app/services/chat-create'\n\n@Component({\n        selector: \"app-tag\",\n        templateUrl: \"tag.component.html\",\n        styleUrls: [\"tag.component.css\"]\n})\nexport class TagComponent {\n        @Input() tagText: string\n\n        constructor(private chatCreateService: ChatCreateService) {}\n\n        //Removes existing tag from this of tags\n        removeTag() {\n                this.chatCreateService.removeTag(this.tagText)\n        }\n\n}","<div class=\"container\">\n        <div class=\"text-container no-select\">\n                {{this.tagText}}\n        </div>\n        <div class=\"button-container no-select\" (click)=\"removeTag()\">\n                x\n        </div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { NgForm } from '@angular/forms'\nimport { UserService } from \"../../../../services/user\"\nimport { User } from \"../../../../models/user\"\nimport { Subscription } from 'rxjs'\nimport { AuthenticationService } from 'src/app/services/authentication'\nimport { ChatCreateService } from 'src/app/services/chat-create'\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\n\n@Component({\n        selector: \"app-user-view-chat-create-dialog\",\n        templateUrl: \"user-view-chat-create-dialog.component.html\",\n        styleUrls: [\"user-view-chat-create-dialog.component.css\"]\n})\nexport class UserViewChatCreateDialogComponent implements OnInit, OnDestroy {\n        categories: String[] = [\n                \"Science and Tech\",\n                \"Entertainment\",\n                \"Esports\",\n                \"Sports\",\n                \"Other\"\n        ]\n        user: User;\n        userSub: Subscription\n        constructor(\n                private chatCreateService: ChatCreateService, \n                private userService: UserService, \n                private authService: AuthenticationService,\n                public dialogRef: MatDialogRef<UserViewChatCreateDialogComponent>\n        ) {}\n\n        onExit() {\n                this.dialogRef.close()\n        }\n        \n        ngOnInit() {\n                this.chatCreateService.initNewChat()\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n        }\n        \n        isAuthenticated() {\n                return this.authService.isAuthenticated()\n        }\n        \n        //Creates a chat if the users input is valid\n        createChat(chatForm: NgForm) {\n                const title = chatForm.value.title\n                const category = chatForm.value.category\n                if (!chatForm.invalid && category !== undefined && category !== null && category !== \"\") {\n                        this.chatCreateService.postChat(title, this.user._id, category, true)\n                        chatForm.resetForm()\n                }\n        }\n        \n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n}","<div class=\"two-container\">\n        <div class=\"three-container\">\n                <form #chatForm=\"ngForm\">\n                        <div class=\"chat-title-input-container\">\n                                <input\n                                        type=\"text\"\n                                        matInput\n                                        name=\"title\"\n                                        ngModel\n                                        required\n                                        #title=\"ngModel\"\n                                        placeholder=\"title\"\n                                        maxlength=\"40\"\n                                        class=\"chat-title-input\"\n                                        autocomplete=\"off\"\n                                >\n                        </div>\n                        <!-- Mat select for categories -->\n                        <div class=\"chat-category-container\">\n                                <mat-select placeholder=\"Select a Category\" ngModel #category=\"ngModel\" name=\"category\">\n                                        <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n                                                {{category}}\n                                        </mat-option>\n                                </mat-select>\n                        </div>\n                        <app-chat-tags class=\"chat-tags\"></app-chat-tags>\n                        <div class=\"form-submit-container\" mat-dialog-actions>\n                                <button \n                                        mat-button \n                                        (click)=\"createChat(chatForm)\"\n                                        class=\"form-submit-button\" \n                                        *ngIf=\"title.value !== '' && !(category.value === undefined || category.value === null || category.value === '')\" \n                                >Create</button>\n                                <button \n                                        mat-button \n                                        (click)=\"onExit()\" \n                                        class=\"dialog-button\"\n                                >Exit</button>\n                        </div>\n                </form>\n        </div>\n</div>","import { Component } from \"@angular/core\"\nimport { MatDialogRef } from '@angular/material/dialog'\nimport { UserService } from 'src/app/services/user'\n\n@Component({\n        selector: 'app-user-view-icon-dialog',\n        templateUrl: 'user-view-icon-dialog.component.html',\n        styleUrls: [\"user-view-icon-dialog.component.css\"]\n})\nexport class UserViewIconDialogComponent {\n        selectedImage\n        selectedImageUrl\n        constructor(\n                public dialogRef: MatDialogRef<UserViewIconDialogComponent>, \n                private userService: UserService,\n        ) {}\n        \n        //Closes the dialog\n        onExit() {\n                this.dialogRef.close();\n        }\n\n       //Sets the selected image to the image selected by the user\n       onImageSelected(event) {\n                this.selectedImage = event.target.files[0]\n                const reader = new FileReader()\n                reader.readAsDataURL(this.selectedImage)\n                reader.onload = () => {\n                        const originalDataUrl = reader.result\n                        //Scaled the image down to a 400 X 400 square\n                        this.scaleImage(originalDataUrl, 400, 400, this.selectedImage.type, 0.7, (dataUrl) => {\n                                this.selectedImageUrl = dataUrl\n                        })\n                }\n        }\n\n        //https://codepen.io/shrinivas93/pen/xdLLPN\n        scaleImage(dataUrl, newWidth: number, newHeight: number, imageType: string, imageArguments: number, callback) {\n                imageType = imageType || \"image/jpeg\";\n                imageArguments = imageArguments || 0.7;\n                const image = new Image();\n                image.onload = function() {\n                        const canvas = document.createElement(\"canvas\");\n                        canvas.width = newWidth;\n                        canvas.height = newHeight;\n                        const ctx = canvas.getContext(\"2d\");\n                        ctx.drawImage(image, 0, 0, newWidth, newHeight);\n                        const newDataUrl = canvas.toDataURL(imageType, imageArguments);\n                        callback(newDataUrl);\n                }\n                image.src = dataUrl;\n        }\n\n        //Uploads image\n        uploadImage() {\n                if (this.selectedImageUrl === undefined || this.selectedImageUrl === null) return\n                this.userService.setProfileImage(this.selectedImageUrl)\n                this.dialogRef.close()\n        }\n\n}","<div class=\"container\">\n        <div class=\"dialog-header\">Upload profile image</div>\n        <div class=\"file-input-container\">\n                <input type=\"file\"\n                        accept=\"image/*\"\n                        (change)=\"onImageSelected($event)\"\n                >\n        </div>\n        <div mat-dialog-actions>\n                <button \n                        mat-button \n                        *ngIf=\"this.selectedImage !== null && this.selectedImage !== undefined\" \n                        (click)=\"uploadImage()\"\n                        class=\"upload-button\"\n                >Upload</button>\n                <button \n                        mat-button \n                        (click)=\"onExit()\" \n                        class=\"dialog-button\"\n                >Exit</button>\n                \n        </div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { NgForm } from \"@angular/forms\"\nimport { UserService } from \"../../../services/user\"\nimport { User } from 'src/app/models/user'\nimport { Subscription } from 'rxjs'\nimport { DomSanitizer } from \"@angular/platform-browser\"\nimport { MatDialog } from \"@angular/material/dialog\"\nimport { UserViewIconDialogComponent } from './user-view-icon-dialog/user-view-icon-dialog.component'\nimport { UserViewChatCreateDialogComponent } from './user-view-chat-create-dialog/user-view-chat-create-dialog.component'\n\n@Component({\n        selector: \"app-user-view\",\n        templateUrl: \"user-view.component.html\",\n        styleUrls: [\"user-view.component.css\"]\n})\nexport class UserViewComponent implements OnInit, OnDestroy {\n        user: User\n        userSub: Subscription\n        sendingFriendRequest: boolean = false\n        constructor(\n                private userService: UserService, \n                public DomSanitationService: DomSanitizer,\n                private dialog: MatDialog\n        ) {}\n        \n        ngOnInit() {\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n        }\n        \n        //Sends a friend request\n        sendFriendReq(requestForm: NgForm) {\n                const email = requestForm.value.email.trim()\n                if (email == \"\" || email == \"null\" || email == undefined || this.sendingFriendRequest) return\n                this.sendingFriendRequest = true\n                this.userService.sendFriendRequestToEmail(email)\n                        .then( resolve => {\n                                alert(resolve)\n                                this.sendingFriendRequest = false\n                                requestForm.resetForm()\n                        })\n                        .catch( reject => {\n                                alert(reject)\n                                this.sendingFriendRequest = false\n                                requestForm.resetForm()\n                        })\n        }\n\n        //Opens the image icon select dialog\n        openIconDialog() {\n                const dialogRef = this.dialog.open(UserViewIconDialogComponent, {\n                        width: \"350px\",\n                        height: \"350px\"\n                })\n                dialogRef.afterClosed()\n                        .subscribe(() => {\n                                //Gets the new user icon image from the database\n                                this.userService.getUser(true)\n                        })\n        }\n\n        //Opens the chat create dialog\n        openChatCreateDialog() {\n                this.dialog.open(UserViewChatCreateDialogComponent, {\n                        width: \"350px\",\n                        height: \"550px\"\n                })\n                \n        }\n\n        //Logs out the user\n        logOut() {\n                \n                this.userService.logOut()\n        }\n\n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n}","<div class=\"container\">\n        <div class=\"user-container\">\n                <div class=\"user-icon-container\">\n                        <app-image-fab \n                                *ngIf=\"this.user.image != '$$$Default$$$'\" \n                                [imageUrl]=\"this.user.image\" \n                        ></app-image-fab>\n                        <app-user-icon \n                                *ngIf=\"this.user.image === '$$$Default$$$'\"\n                        ></app-user-icon>\n                </div>\n                <div class=\"user-username-container\">\n                        <div class=\"user-username\">\n                                {{this.user.username}}\n                        </div>\n                </div>\n        </div>\n        <h2 class=\"user-options-header\">\n                Options\n        </h2>\n        <div class=\"user-options-container\">\n                <div class=\"user-option-container\">\n                        <div class=\"user-option-header\">\n                                Set Your Icon\n                        </div>\n                        <div class=\"user-option\">\n                                <div class=\"edit-image-button \n                                        transform-color \n                                        no-select\"\n                                        (click)=\"openIconDialog()\"\n                                >Edit</div>\n                        </div>\n                </div>\n                <div class=\"user-option-container margin-top\">\n                        <div class=\"user-option-header\">\n                                Send a Friend Request\n                        </div>\n                        <div class=\"user-option\">\n                                <div class=\"friend-request-form-container\">\n                                        <form #friendReqForm=\"ngForm\" (submit)=\"sendFriendReq(friendReqForm)\" class=\"friend-request-form\">\n                                                <div class=\"friend-request-input-container\">\n                                                        <mat-form-field>\n                                                                <input\n                                                                        matInput\n                                                                        type=\"text\"\n                                                                        name=\"email\"\n                                                                        ngModel\n                                                                        placeholder=\"email\"\n                                                                        #email=\"ngModel\"\n                                                                        class=\"friend-request-email-field\"\n                                                                        autocomplete=\"off\"\n                                                                >\n                                                        </mat-form-field>\n                                                        <div \n                                                                *ngIf=\"friendReqForm.value.email !== ''\"\n                                                                class=\"friend-request-button\n                                                                transform-color\n                                                                no-select\" \n                                                                (click)=\"sendFriendReq(friendReqForm)\"\n                                                        >Send</div>\n                                                </div>\n                                        </form>\n                                </div>\n                                \n                        </div>\n                </div>\n                <div class=\"user-option-container margin-top\">\n                        <div class=\"user-option-header\">\n                                Create a New Chat\n                        </div>\n                        <div class=\"user-option\">\n                                <div \n                                        (click)=\"openChatCreateDialog()\"\n                                        class=\"create-chat-button\n                                        transform-color\n                                        no-select\" \n                                >Create</div>\n                        </div>\n                </div>\n                <div class=\"user-option-container margin-top\">\n                        <div class=\"user-option-header\">\n                                Log Out\n                        </div>\n                        <div class=\"user-option\">\n                                <div \n                                        class=\"log-out-button \n                                        transform-color \n                                        no-select\"\n                                        (click)=\"logOut()\"\n                                >Leave</div>\n                        </div>\n                </div>\n        </div>\n</div>","//Service for the authentication API\nimport { Injectable } from \"@angular/core\"\nimport { HttpHeaders, HttpClient } from '@angular/common/http'\nimport { Location } from '@angular/common';\nconst BASE_URL = \"https://ddm-rumble.herokuapp.com/api/authentication/\"\nconst BASE_USER_URL = \"https://ddm-rumble.herokuapp.com/api/user/\"\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthenticationService {\n  constructor(private http: HttpClient, private location : Location) {\n    console.log(\"Authentication Service Initialized\")\n  }\n\n  //Returns clients jwt token\n  getToken() {\n    return sessionStorage.getItem(\"accessToken\")\n  }\n  \n  //Removes token from session storage\n  clearTokens() {\n    sessionStorage.clear()\n  }\n\n  setAccessToken(token: string) {\n    this.clearTokens()\n    sessionStorage.setItem(\"accessToken\", token)\n  }\n\n  isAuthenticated() {\n    if (this.getToken()) return true\n    return false\n  }\n\n  //Changes client url\n  go(route: string) {\n    this.location.replaceState(route);\n    window.location.reload()\n  }\n\n  //Register a new user\n  register(username: string, email: string, password: string) {\n    return new Promise(resolve => {\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      const body = {\n        username: username,\n        email: email,\n        password: password\n      }\n      this.http.post(BASE_URL + \"register/createUser\", body, { headers: headers })\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === '0') {\n            const accessToken = res.data\n            if (accessToken) {\n              //User was created\n              this.setAccessToken(accessToken)\n              this.go(\"\")\n            }\n          } else {\n            resolve(res.data)\n          }\n        })\n    })\n  }\n\n  //Logs in a given user\n  login(email: string, password: string) {\n    return new Promise(resolve => {\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      const body = {\n        email: email,\n        password: password\n      }\n      this.http.post(BASE_URL + \"login/authenticate\", body, { headers: headers })\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === '0') {\n            const accessToken = res.data\n            if (accessToken) {\n              //User was authenticated\n              this.setAccessToken(accessToken)\n              this.setUserStatusOnline()\n                .then( () => this.go(\"\") )\n            }\n          } else {\n            resolve(res.data)\n          }\n        })\n    })\n  }\n\n  //Set user status as online\n  setUserStatusOnline() {\n    return new Promise((resolve, reject) => {\n      this.http.get(BASE_USER_URL + \"userOnline\")\n       .subscribe((res: {status: string, data: string} ) => {\n        console.log(res)\n        resolve(\"User status was set\")\n       })\n    })\n  }\n}\n","//Service for the chat API\n//Handles the creation of a single chat\nconst BASE_URL = \"https://ddm-rumble.herokuapp.com/api/chat/\"\nimport { Injectable } from \"@angular/core\"\nimport { Location } from \"@angular/common\"\nimport { HttpHeaders, HttpClient } from '@angular/common/http'\nimport { Subject } from 'rxjs'\nimport { Chat } from '../models/chat'\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ChatCreateService {\n        newChat: Chat\n        newChatUpdated = new Subject<Chat>()\n\n        constructor(private http: HttpClient, private location: Location) {}\n\n        getNewChatUpdated() {\n                return this.newChatUpdated.asObservable()\n        }\n\n        //Initializes new chat\n        initNewChat() {\n                this.newChat = {\n                        _id: undefined,\n                        tags: [],\n                        title: undefined,\n                        messages: [],\n                        category: undefined,\n                        adminId: undefined,\n                        subs: [],\n                        global: undefined,\n                        image: \"$$$Default$$$\"\n                }\n        }\n\n        //Adds a tag to the new chat\n        addTag(newTag: string) {\n                if (this.newChat === undefined || this.newChat === null) return \n                else if (this.newChat.tags.indexOf(newTag) == -1 && this.newChat.tags.length < 8) {\n                        this.newChat.tags.push(newTag)\n                        this.updateNewChat()\n                }\n        }\n        \n        //Removes a tag from the new chats list of tags\n        removeTag(tagToRemove: string) {\n                if (this.newChat === undefined || this.newChat === null) return \n                const indexOfTag = this.newChat.tags.indexOf(tagToRemove)\n                if (indexOfTag >= 0) {\n                        this.newChat.tags.splice(indexOfTag, 1)\n                        this.updateNewChat()\n                }\n        }\n\n        //Changes client url\n        go(route: string) {\n                this.location.replaceState(route);\n                window.location.reload()\n        }\n    \n        //Create new chat\n        postChat(title: string, adminId: string, category: string, global: boolean) {\n                const body = {\n                        title: title,\n                        adminId: adminId,\n                        category: category,\n                        tags: this.newChat.tags,\n                        global: global\n                }\n        var headers = new HttpHeaders()\n        headers = headers.append('Content-type', 'application/json')\n        this.http.post(BASE_URL + \"chat-create/create\", body, { headers: headers })\n                .subscribe( (res: string ) => {\n                        console.log(res)\n                        //Chat was created\n                        this.postTags(this.newChat.tags, res)\n                        .then( () => this.postCategory(category, res)\n                        .then( () => {\n                                //Visit then chat once it's been created\n                                this.go(\"api/chat/view/\" + res)\n                        })\n                )\n          })\n      }\n    \n      //Add newly created tags and update existing tags with chat sub\n      postTags(tags: string[], chatId: string) {\n                return new Promise((resolve, reject) => {\n                        for (var i = 0; i < tags.length; i++) {\n                                const body = {\n                                        tag: tags[i],\n                                        chatId: chatId\n                                }\n                                var headers = new HttpHeaders()\n                                headers = headers.append('Content-type', 'application/json')\n                                this.http.post(BASE_URL + \"chat-create/addTag\", body, { headers: headers })\n                                        .subscribe( res => console.log(res) )\n                                }\n                        resolve(0)\n                })\n        }\n    \n        //Post category from newly created chat\n        postCategory(category: string, chatId: string) {\n                return new Promise((resolve, reject) => {\n                        const body = {\n                                category: category,\n                                chatId: chatId\n                        }\n                        var headers = new HttpHeaders()\n                        headers = headers.append('Content-type', 'application/json')\n                        this.http.post(BASE_URL + \"chat-create/addCategory\", body, { headers: headers })\n                                .subscribe( res => console.log(res) )\n                        resolve(0)\n                })\n        }\n        \n        //Update new chat\n        updateNewChat() {\n                if (this.newChat === undefined || this.newChat === null) return \n                this.newChatUpdated.next({...this.newChat})\n        }\n}","//Service for the chat API\n//Handles a single chat\nconst CHAT_API = \"https://ddm-rumble.herokuapp.com/api/chat/\"\nimport { Injectable } from \"@angular/core\"\nimport { HttpHeaders, HttpClient } from '@angular/common/http'\nimport { Subject } from 'rxjs'\nimport { Chat } from '../models/chat'\nimport { Message } from \"../models/message\"\nimport * as io from 'socket.io-client'\nimport { ChatSub } from '../models/chat-sub'\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ChatService {\n  socket: SocketIOClient.Socket\n  chat: Chat\n  chatUpdated = new Subject<Chat>()\n  chatId: string\n  constructor(private http: HttpClient) {}\n\n  //Get subscription to chat object\n  getChatUpdated() {\n    return this.chatUpdated.asObservable()\n  }\n\n  initChatService(chatId: string) {\n    this.setChatId(chatId)\n    console.log(\"Chat Service Initialized\")\n    this.socket = io.connect(\"\", )\n    this.initClientSocket()\n  }\n  //Sets the chat id\n  setChatId(chatId: string) {\n    this.chatId = chatId\n  }\n\n  //Returns chat sub\n  getChatSub() : ChatSub {\n    return {\n      _id: this.chat._id, \n      title: this.chat.title, \n      image: this.chat.image,\n      tags: this.chat.tags,\n      subCount: this.chat.subs.length\n    }\n  }\n\n  //Updates chat\n  getChat(query=false) {\n    if (this.chatId === null || this.chatId === undefined || (!query && this.chat !== undefined && this.chat !== null)) {\n      this.updateChat()\n      return\n    } \n    this.http.get(CHAT_API + \"data/\" + this.chatId)\n    .subscribe((res: Chat) => {\n      this.chat = res\n      this.updateChat()\n    })\n  }\n\n  //Creates link between the socket on the client and the socket on the server\n  initServerSocket() {\n    this.http.get(CHAT_API + \"init\")\n      .subscribe(res => {\n        console.log(res)\n      })\n  }\n\n  //Declares function of client socket\n  initClientSocket() {\n    const _this = this\n    this.socket.on(\"message-posted-to-chat-\" + this.chatId, function(message: Message) {\n      _this.chat.messages.push(message)\n      _this.updateChat()\n    })\n  }\n\n  //Request message post to database\n  postMessage(message: string, senderId: string, timestamp: number) {\n    this.socket.emit(\"message-posted-to-server\", {\n      text: message,\n      senderId: senderId,\n      chatId: this.chatId,\n      timestamp: timestamp\n    })\n  }\n\n  // Requests a subscription to a given chat\n  subscribeToChat() {\n    return new Promise( (resolve, reject) => {\n      if (this.chatId == undefined || this.chatId == null) reject(\"Bad Data\")\n      const body = {\n        chatId: this.chatId\n      }\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      this.http.post(CHAT_API + \"subscribe/\", body, { headers: headers })\n        .subscribe( (res: string) => {\n          //Get user and not just user id\n          if (res == undefined || res == null) reject(\"Subscription was unsuccessful\")\n          this.chat.subs.push(res)\n          this.updateChat()\n          resolve(0)\n        })\n    })\n  }\n\n  // Requests a unsubscription to a given chat\n  unsubscribeFromChat() {\n    return new Promise( (resolve, reject) => {\n      if (this.chatId == undefined || this.chatId == null) {\n        reject(\"Bad Data\")\n        return\n      }\n      const body = {\n        chatId: this.chatId\n      }\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      this.http.post(CHAT_API + \"unsubscribe/\", body, { headers: headers })\n        .subscribe((res: {status: string, data: string}) => {\n          //Get user and not just user id\n          if (res === undefined || res === null) {\n            reject(\"Subscription was unsuccessful\")\n            return\n          }\n          const index = this.getIndexOfUserId(res.data)\n          if (index !== -1) {\n            this.chat.subs.splice(index, 1)\n          }\n          this.updateChat()\n          resolve(0)\n        })\n    })\n  }\n\n  //Get index of userSub in Chat subs list\n  getIndexOfUserId(userId: string) {\n    for (var i = 0; i < this.chat.subs.length; i++) {\n      const cur = this.chat.subs[i]\n      if (cur === userId) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  //Sets chat image\n  setChatImage(dataUrl) {\n    const body = {\n      imageUrl: dataUrl\n    }\n    var headers = new HttpHeaders()\n    headers = headers.append('Content-type', 'application/json')\n    this.http.post(CHAT_API + \"setChatImage/\" + this.chatId, body, { headers: headers }) \n      .subscribe((res: {status: number, data: string}) => {\n        if (res.status == 1) {\n          this.chat.image = res.data\n          this.updateChat()\n        }\n      })\n  }\n\n  //Checks if user on chat is the chat's admin\n  isAdmin(userId: string) {\n          if (this.chat === undefined || userId === undefined) return false\n          if (this.chat.adminId === userId) return true\n          return false\n  }  \n\n  //Update chat object\n  updateChat() {\n    this.chatUpdated.next({...this.chat})\n  }\n}\n","//Service for the chat API\n//Handles multiple chats\nconst BASE_URL = \"https://ddm-rumble.herokuapp.com/api/chat/\"\nimport { Injectable } from \"@angular/core\"\nimport { HttpHeaders, HttpClient } from '@angular/common/http'\nimport { Subject } from 'rxjs'\nimport { ChatSub } from '../models/chat-sub'\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ChatsService {\n  chats: ChatSub[] = []\n  chatIds: string[] = []\n  chatsUpdated = new Subject<ChatSub[]>()\n  popChatIds: string[] = []\n  recChatIds: string[] = []\n  recomChatIds: string[] = []\n  popChatIdsUpdated = new Subject<string[]>()\n  recChatIdsUpdated = new Subject<string[]>()\n  recomChatIdsUpdated = new Subject<string[]>()\n  chatTitles: string[] = []\n  chatTags: string[] = []\n  chatTitlesUpdated = new Subject<string[]>()\n  chatTagsUpdated = new Subject<string[]>()\n  selectedChatId: string\n  selectedChatIdUpdated = new Subject<string>()\n\n  constructor(private http: HttpClient) {}\n\n  //Gets subscription to all chat subs\n  getChatsUpdated() {\n    return this.chatsUpdated.asObservable()\n  }\n\n  //Get selected chat updated\n  getSelectedChatIdUpdated() {\n    return this.selectedChatIdUpdated.asObservable()\n  }\n\n  //Get observable for recent chat Ids\n  getRecentChatIdsUpdated() {\n    return this.recChatIdsUpdated.asObservable()\n  }\n\n  //Get observable for popular chat Ids\n  getPopularChatIdsUpdated() {\n    return this.popChatIdsUpdated.asObservable()\n  }\n\n  //Get observable for recent chat Ids\n  getRecommendedChatIdsUpdated() {\n    return this.recomChatIdsUpdated.asObservable()\n  }\n\n  //Gets observable for all tags in use\n  getTagsUpdated() {\n    return this.chatTagsUpdated.asObservable()\n  }\n\n  //Gets observable for all chat titles in use\n  getChatTitlesUpdated() {\n    return this.chatTitlesUpdated.asObservable()\n  }\n\n  //Gets chatsub from list of chatsubs that have already been gotten\n  getChatSub(chatId: string) {\n    if (this.chats === undefined || this.chats === null) return\n    for (var i = 0; i < this.chats.length; i++) {\n      if (this.chats[i]._id === chatId) {\n        return this.chats[i]\n      }\n    }\n  }\n\n  //Checks if service has already searched for a given chat\n  containsChatSub(chatId: string) {\n    for (var i = 0; i < this.chatIds.length; i++) {\n      if (this.chatIds[i] === chatId) return true\n    }\n    return false\n  }\n\n  //Creates list of chat subs from a list of chatIds\n  getChats(chatIds: string[]) {\n    if (chatIds.length === 0) return\n    console.log(\"Getting chats\", chatIds)\n    for (var i = 0; i < chatIds.length; i++) {\n      const chatId = chatIds[i]\n      if (this.containsChatSub(chatId)) continue \n      this.chatIds.push(chatId)\n      this.getChat(chatId) \n        .then( (chatSub: ChatSub) => {\n          this.chats.push(chatSub)\n          this.updateChats()\n        })\n    }\n  }\n\n  //Promise that resolves a chatSub\n  getChat(chatId: string) {\n    return new Promise((resolve, reject) => {\n      if (chatId === undefined || chatId === null) {\n        reject(\"Bad data\")\n        return\n      }\n      //Send get request for chat sub\n      const body = {\n        _id: chatId\n      }\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      this.http.post(BASE_URL + \"chatSub\", body, { headers: headers })\n        .subscribe( (chatSub: ChatSub) => {\n          resolve(chatSub)\n        })\n    })\n  }\n\n  //Get most recent 10 chats ids\n  getRecentChatIds() {\n    if (this.recChatIds.length === 0) {\n      this.http.get(BASE_URL + \"chatIds/recent\")\n      .subscribe((res: {status: string, data: string[]}) => {\n        this.recChatIds = res.data\n        this.updateRecentChatIds()\n      })\n    } else {\n      this.updateRecentChatIds()\n    }\n  }\n  \n  //Get 10 most popular chats\n  getPopularChatIds() {\n    if (this.popChatIds.length === 0) {\n      this.http.get(BASE_URL + \"chatIds/popular\")\n        .subscribe((res: {status: string, data: string[]}) => {\n          this.popChatIds = res.data\n          this.updatePopularChatIds()\n        })\n    } else {\n      this.updatePopularChatIds()\n    }\n  }\n\n  //Get 10 recommeded chats\n  getRecommendedChatIds() {\n    if (this.recomChatIds.length === 0) {\n      this.http.get(BASE_URL + \"chatIds/recommended\")\n        .subscribe((res: {status: string, data: string[]}) => {\n          this.recomChatIds = res.data\n          this.updateRecommendedChatIds()\n        })\n    } else {\n      this.updateRecommendedChatIds()\n    }\n  }\n\n  //Get up to 10 related chats\n  getRelatedChatIds(chatTags: string[], chatCategory: string, chatId: string) {\n    return new Promise((resolve) => {\n      const body = {\n        tags: chatTags,\n        category: chatCategory,\n        chatId: chatId\n      }\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      this.http.post(BASE_URL + \"chatIds/related\", body, { headers: headers })\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === '0') {\n            resolve(res.data)\n          }\n        })\n    }) \n  }\n\n  //Get all tags in use\n  getAllTags() {\n     if (this.chatTags.length === 0) {\n      this.http.get(BASE_URL + \"allTags\")\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === '0') {\n            this.chatTags = res.data\n            this.updateChatTags()\n          } \n        })\n    } else {\n      this.updateChatTags()\n    }\n  }\n\n  //Get all chat titles in use\n  getAllChatTitles() {\n    if (this.chatTitles.length === 0) {\n      this.http.get(BASE_URL + \"allChatTitles\")\n      .subscribe((res: {status: string, data: any}) => {\n        if (res.status === '0') {\n          this.chatTitles = res.data\n          this.updateChatTitles()\n        } \n      })\n    } else {\n      this.updateChatTitles()\n    }\n  }\n\n  //Search chats based on title prefix, category and tags\n  searchChats(category: string, title: string, tags: string[]) {\n    return new Promise((resolve, reject) => {\n      const body = {\n        category: category,\n        title: title,\n        tags: tags\n      }\n      var headers = new HttpHeaders()\n      headers.append('Content-type', 'application/json')\n      this.http.post(BASE_URL + \"searchChats\", body, { headers: headers })\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === \"0\") {\n            resolve(res.data)\n          } else {\n            reject(res.data)\n          }\n        })\n    })\n  }\n\n  //Select chat\n  setSelectedChatId(chatId: string) {\n    this.selectedChatId = chatId\n    this.updateSelectedChatId()\n  }\n\n  //Update chat \n  updateChats() {\n    this.chatsUpdated.next([...this.chats])\n  }\n\n  //Update selected chat id\n  updateSelectedChatId() {\n    if (this.selectedChatId === undefined || this.selectedChatId === null) return\n    this.selectedChatIdUpdated.next(this.selectedChatId)\n  }\n\n  //Updated recent chat ids\n  updateRecentChatIds() {\n    this.recChatIdsUpdated.next([...this.recChatIds])\n  }\n\n  //Updated recent chat ids\n  updatePopularChatIds() {\n    this.popChatIdsUpdated.next([...this.popChatIds])\n  }\n\n  //Updated recent chat ids\n  updateRecommendedChatIds() {\n    this.recomChatIdsUpdated.next([...this.recomChatIds])\n  }\n\n  //Update chat tags\n  updateChatTags() {\n    this.chatTagsUpdated.next([...this.chatTags])\n  }\n\n  //Updates chat titles\n  updateChatTitles() {\n    this.chatTitlesUpdated.next([...this.chatTitles])\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { HttpRequest, HttpEvent, HttpHandler, HttpInterceptor } from '@angular/common/http'\nimport { AuthenticationService } from './authentication'\nimport { Observable } from 'rxjs'\n\n@Injectable( { providedIn: \"root\" })\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(public authService : AuthenticationService) {\n    console.log(\"Token Interceptor Initialized\")\n  }\n\n  intercept(request : HttpRequest<any>, next: HttpHandler) : Observable<HttpEvent<any>> {\n    //Injects token into request\n\n    // console.log(\"Injecting token\")\n    request = request.clone({\n      setHeaders: {\n        authorization: \"Bearer \" + this.authService.getToken(),\n      }\n    })\n    //Sends request to next handler\n    return next.handle(request)\n  }\n}","//Service for User API\nconst BASE_URL = \"https://ddm-rumble.herokuapp.com/api/user/\"\nimport { Injectable } from \"@angular/core\"\nimport { HttpHeaders, HttpClient } from '@angular/common/http'\nimport { User } from '../models/user'\nimport { Subject } from 'rxjs'\nimport { Location } from '@angular/common'\n\n@Injectable({ providedIn: \"root\"} )\nexport class UserService {\n  user : User\n  userUpdated = new Subject<User>()\n  constructor(private http: HttpClient, private location: Location) {\n    console.log(\"User Service Initialized\")\n  }\n\n  getUserUpdated() {\n    return this.userUpdated.asObservable()\n  }\n\n  getUser(query=false) {\n    if (query || this.user == undefined || this.user == null) {\n      //Query for user\n      this.http.get(BASE_URL + \"data\")\n      .subscribe((res : {status: string, data: any}) => {\n        if (res.status === '0') {\n          this.user = res.data\n          this.updateUser()\n        }\n      })\n    } else {\n      //Update subscription with existing user\n      this.updateUser()\n    }\n  }\n\n  //Send friend request\n  sendFriendRequestToEmail(userEmail: String) {\n    return new Promise((resolve, reject) => {\n      const body = {\n        email: userEmail\n      }\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      this.http.post(BASE_URL + \"friend-request\", body, { headers: headers })\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === '0') {\n            resolve(res.data)\n          } else {\n            reject(res.data)\n          }\n        })\n    })\n    \n  }\n\n  //Logs out the user\n  logOut() {\n    //Sets user status as offline\n    this.http.get(BASE_URL + \"userOffline\")\n      .subscribe((res: {status: string, data: string}) => {\n        console.log(res)\n        //Deletes authentication token\n        sessionStorage.clear()\n        //Deletes user data\n        this.user = undefined\n        //Routes to the home page and reloads\n        this.go(\"\")\n      })\n  }\n\n  //Changes client url\n  go(route: string) {\n    this.location.replaceState(route);\n    window.location.reload()\n  }\n\n  acceptFriendRequest(requestId: string) {\n    const body = {\n        requestId: requestId,\n    }\n    var headers = new HttpHeaders()\n    headers = headers.append('Content-type', 'application/json')\n    this.http.post(BASE_URL + \"accept-request\", body, { headers: headers })\n      .subscribe((res: {status: string, data: any}) => {\n        if (res.status === '0') {\n          const index = this.user.friendReqIds.indexOf(requestId)\n          if (index !== -1) {\n            this.user.friendReqIds.splice(index, 1)\n            this.updateUser()\n          }\n          this.user.friendIds.push(requestId)\n          this.updateUser()\n        }\n      })\n  }\n\n  declineFriendRequest(requestId: string) {\n    const body = {\n      requestId: requestId\n    }\n    var headers = new HttpHeaders()\n    headers = headers.append('Content-type', 'application/json')\n    this.http.post(BASE_URL + \"decline-request\", body, { headers: headers }) \n      .subscribe((res: {status: string, data: any}) => {\n        if (res.status === \"0\") {\n          const index = this.user.friendReqIds.indexOf(requestId)\n          if (index !== -1) {\n            this.user.friendReqIds.splice(index, 1)\n            this.updateUser()\n          }\n        }\n      })\n  }\n\n  //Sets profile image\n  setProfileImage(dataUrl) {\n    const body = {\n      imageUrl: dataUrl\n    }\n    var headers = new HttpHeaders()\n    headers = headers.append('Content-type', 'application/json')\n    this.http.post(BASE_URL + \"setProfileImage\", body, { headers: headers }) \n      .subscribe((res: {status: number, data: string}) => {\n        if (res.status == 1) {\n          this.user.image = res.data\n          this.updateUser()\n        }\n      })\n  }\n\n  //Set user status as offline\n  setUserStatusOffline() {\n    return new Promise((resolve, reject) => {\n      this.http.get(BASE_URL + \"userOffline\")\n        .subscribe((res: {status: string, data: string} ) => {\n          console.log(res)\n          resolve(0)\n        })\n    })\n  }\n\n  updateUser() {\n    this.userUpdated.next({...this.user})\n  }\n}","import { Injectable } from \"@angular/core\"\nimport { HttpClient } from '@angular/common/http'\nimport { UserSub } from \"../models/user-sub\"\nimport { Subject } from \"rxjs\"\n\nconst BASE_URL = \"https://ddm-rumble.herokuapp.com/api/user/\"\n\n@Injectable({\n        providedIn: \"root\"\n})\nexport class UsersService {\n        users: UserSub[] = []\n        userIds: string[] = []\n        usersUpdated = new Subject<UserSub[]>()\n\n        constructor(private http: HttpClient) {}\n\n        getUsersUpdated() {\n                return this.usersUpdated.asObservable()\n        }\n\n        //Get user from list of users that have already been retreived from database\n        getUserSub(userId: string) {\n                if (this.users === undefined || this.users === null) return \n                for (var i = 0; i < this.users.length; i++) {\n                        if (this.users[i]._id === userId) {\n                                return this.users[i]\n                        }\n                }\n        } \n\n        //Check if user service contains a user sub\n        containsUserSub(userId: string) {\n                for (var i = 0; i < this.userIds.length; i++) {\n                        if (this.userIds[i] === userId) return true\n                }\n                return false\n        }\n\n        //Creates list of user subs from a list of userIds\n        getUsers(userIds: string[]) {\n                if (userIds.length === 0) return\n                console.log(\"Getting users\", userIds)\n                for (var i = 0; i < userIds.length; i++) {\n                        const userId = userIds[i]\n                        if (this.containsUserSub(userId)) continue\n                        this.userIds.push(userId)\n                        this.getUser(userId)\n                                .then( (userSub: UserSub) => {\n                                        this.users.push(userSub)\n                                        this.updateUsers()\n                                })\n                }\n        }\n\n        //Promise that resolves a userSub\n        getUser(userId: string) {\n                return new Promise((resolve, reject) => {\n                        if (userId === null || userId === undefined) {\n                                reject(\"Bad data\")\n                                return\n                        }\n                        this.http.get(BASE_URL + \"data/\" + userId)\n                                .subscribe( (userSub: UserSub) => {\n                                        resolve(userSub)\n                                })\n                })   \n        }\n\n        //Updates the users subject\n        updateUsers() {\n                if (this.users) {\n                        this.usersUpdated.next([...this.users])\n                }\n        }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}