{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chat-icon/chat-icon.component.ts","webpack:///src/app/components/chat-icon/chat-icon.component.html","webpack:///src/app/components/chat-page/global-chat/global-chat.component.ts","webpack:///src/app/components/chat-page/global-chat/global-chat.component.html","webpack:///src/app/components/chat-page/global-chat/related-chats/related-chats.component.ts","webpack:///src/app/components/chat-page/global-chat/related-chats/related-chats.component.html","webpack:///src/app/components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe-admin-dialog/chat-subscribe-admin-dialog.component.ts","webpack:///src/app/components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe-admin-dialog/chat-subscribe-admin-dialog.component.html","webpack:///src/app/components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe.component.ts","webpack:///src/app/components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe.component.html","webpack:///src/app/components/chat-page/message-view/chat-title/chat-title.component.ts","webpack:///src/app/components/chat-page/message-view/chat-title/chat-title.component.html","webpack:///src/app/components/chat-page/message-view/message-create/message-create.component.ts","webpack:///src/app/components/chat-page/message-view/message-create/message-create.component.html","webpack:///src/app/components/chat-page/message-view/message-view.component.ts","webpack:///src/app/components/chat-page/message-view/message-view.component.html","webpack:///src/app/components/chat-page/message-view/messages/message-received/message-received.component.ts","webpack:///src/app/components/chat-page/message-view/messages/message-received/message-received.component.html","webpack:///src/app/components/chat-page/message-view/messages/message-sent/message-sent.component.ts","webpack:///src/app/components/chat-page/message-view/messages/message-sent/message-sent.component.html","webpack:///src/app/components/chat-page/message-view/messages/messages.component.ts","webpack:///src/app/components/chat-page/message-view/messages/messages.component.html","webpack:///src/app/components/chat-page/subscribers-view/subscriber/subscriber.component.ts","webpack:///src/app/components/chat-page/subscribers-view/subscriber/subscriber.component.html","webpack:///src/app/components/chat-page/subscribers-view/subscribers-view.component.ts","webpack:///src/app/components/chat-page/subscribers-view/subscribers-view.component.html","webpack:///src/app/components/chat-selection/chat-option/chat-option.ts","webpack:///src/app/components/chat-selection/chat-option/chat-option.html","webpack:///src/app/components/chat-selection/chat-selection.ts","webpack:///src/app/components/chat-selection/chat-selection.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/home-page/chat-display/chat-display.component.ts","webpack:///src/app/components/home-page/chat-display/chat-display.component.html","webpack:///src/app/components/home-page/chat-lists/chat-lists.component.ts","webpack:///src/app/components/home-page/chat-lists/chat-lists.component.html","webpack:///src/app/components/home-page/chat-search/chat-search.component.ts","webpack:///src/app/components/home-page/chat-search/chat-search.component.html","webpack:///src/app/components/home-page/home-page.component.ts","webpack:///src/app/components/home-page/home-page.component.html","webpack:///src/app/components/image-fab/image-fab.component.ts","webpack:///src/app/components/image-fab/image-fab.component.html","webpack:///src/app/components/login-page/login-page.component.ts","webpack:///src/app/components/login-page/login-page.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/register-page/register-page.component.ts","webpack:///src/app/components/register-page/register-page.component.html","webpack:///src/app/components/user-icon/user-icon.component.ts","webpack:///src/app/components/user-icon/user-icon.component.html","webpack:///src/app/components/user-page/user-chats-view/user-chats-view.component.ts","webpack:///src/app/components/user-page/user-chats-view/user-chats-view.component.html","webpack:///src/app/components/user-page/user-friends-view/friend-request/friend-request.component.ts","webpack:///src/app/components/user-page/user-friends-view/friend-request/friend-request.component.html","webpack:///src/app/components/user-page/user-friends-view/user-friends-view.component.ts","webpack:///src/app/components/user-page/user-friends-view/user-friends-view.component.html","webpack:///src/app/components/user-page/user-page.component.ts","webpack:///src/app/components/user-page/user-page.component.html","webpack:///src/app/components/user-page/user-view/user-view-chat-create-dialog/chat-tags/chat-tags.component.ts","webpack:///src/app/components/user-page/user-view/user-view-chat-create-dialog/chat-tags/chat-tags.component.html","webpack:///src/app/components/user-page/user-view/user-view-chat-create-dialog/chat-tags/tag/tag.component.ts","webpack:///src/app/components/user-page/user-view/user-view-chat-create-dialog/chat-tags/tag/tag.component.html","webpack:///src/app/components/user-page/user-view/user-view-chat-create-dialog/user-view-chat-create-dialog.component.ts","webpack:///src/app/components/user-page/user-view/user-view-chat-create-dialog/user-view-chat-create-dialog.component.html","webpack:///src/app/components/user-page/user-view/user-view-icon-dialog/user-view-icon-dialog.component.ts","webpack:///src/app/components/user-page/user-view/user-view-icon-dialog/user-view-icon-dialog.component.html","webpack:///src/app/components/user-page/user-view/user-view.component.ts","webpack:///src/app/components/user-page/user-view/user-view.component.html","webpack:///src/app/services/authentication.ts","webpack:///src/app/services/chat-create.ts","webpack:///src/app/services/chat.ts","webpack:///src/app/services/chats.ts","webpack:///src/app/services/token.interceptor.ts","webpack:///src/app/services/user.ts","webpack:///src/app/services/users.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","chatsService","usersService","chatService","title","initServerSocket","selector","templateUrl","styleUrls","providers","AppModule","provide","useClass","multi","declarations","bootstrap","ChatIconComponent","GlobalChatComponent","route","router","media","leftExpanded","rightExpanded","routeReuseStrategy","shouldReuseRoute","params","subscribe","chatId","initChatService","getChat","chatSub","getChatUpdated","chat","userIds","i","subs","length","userId","containsUserSub","indexOf","push","messages","senderId","getUsers","visibility","width","lineHeight","marginRight","marginLeft","animations","RelatedChatsComponent","chatIds","queried","getRelatedChatIds","tags","category","_id","getChats","unsubscribe","ChatSubscribeAdminDialogComponent","dialogRef","data","close","event","selectedImage","target","files","reader","FileReader","readAsDataURL","onload","originalDataUrl","result","scaleImage","type","dataUrl","selectedImageUrl","newWidth","newHeight","imageType","imageArguments","callback","image","Image","canvas","document","createElement","height","ctx","getContext","drawImage","newDataUrl","toDataURL","src","undefined","setChatId","setChatImage","onImageSelected","onExit","ChatSubscribeComponent","authService","userService","dialog","subscribing","userSub","getUserUpdated","user","getUser","isAdmin","subscribeToChat","getUserSub","users","updateUsers","reject","console","log","unsubscribeFromChat","isAuthenticated","getChatSub","open","afterClosed","ChatTitleComponent","onChatPage","MessageCreateComponent","messageForm","message","value","trim","timestamp","Date","getTime","postMessage","resetForm","MessageViewComponent","MessageReceivedComponent","username","online","timestampMil","setTime","rawTime","toLocaleTimeString","time","parseRawTime","rawDate","toDateString","date","parseRawDate","splitTime","split","toLowerCase","dateSplit","MessageSentComponent","MessagesComponent","scrollToBottom","compressedMessages","len","text","concat","sent","currentPos","messageContainer","nativeElement","scrollHeight","scrollTop","err","SubscriberComponent","adminId","subId","SubscribersViewComponent","ChatOptionComponent","expanded","subCount","setSelectedChatId","setAsSelectedChat","backgroundColor","borderRadius","marginBottom","marginTop","ChatSelectionComponent","color","HeaderComponent","headerTextElement","style","ChatDisplayComponent","selectedChatIdSub","getSelectedChatIdUpdated","selectedChat","selectedChatSub","selectedChatId","ChatListsComponent","popChatIdsSub","getPopularChatIdsUpdated","popChatIds","recomChatIdsSub","getRecommendedChatIdsUpdated","recomChatIds","recChatIdsSub","getRecentChatIdsUpdated","recChatIds","getPopularChatIds","getRecentChatIds","getRecommendedChatIds","ChatSearchComponent","formControlTags","formControlTitles","categories","titleValue","tagValue","queriedTags","queriedTitles","titleOptions","tagOptions","searching","searchResults","filteredTagOptions","valueChanges","pipe","tagFilter","filteredTitleOptions","titleFilter","titleOptionsSub","getChatTitlesUpdated","tagOptionsSub","getTagsUpdated","getAllTags","getAllChatTitles","newTag","fixTag","join","tagInput","tag","index","splice","replaceAt","searchChats","results","current","replacement","substr","filterValue","filter","option","addTag","HomePageComponent","popularChatsIds","ImageFabComponent","DomSanitationService","LoginPageComponent","loggingIn","loginForm","invalid","errorMessage","email","password","login","encapsulation","None","NavbarComponent","RegisterPageComponent","registering","registerForm","String","reEnteredPassword","isValidEmail","passwordIsSafe","alert","register","regex","test","UserIconComponent","UserChatsViewComponent","FriendRequestComponent","acceptFriendRequest","declineFriendRequest","acceptRequest","declineRequest","UserFriendsViewComponent","UserPageComponent","containsChatSub","friendIds","friendReqIds","ChatTagsComponent","chatCreateService","newChatSub","getNewChatUpdated","newChat","updateNewChat","tagForm","queryText","TagComponent","removeTag","tagText","UserViewChatCreateDialogComponent","initNewChat","chatForm","postChat","UserViewIconDialogComponent","setProfileImage","UserViewComponent","sendingFriendRequest","requestForm","sendFriendRequestToEmail","logOut","openIconDialog","sendFriendReq","openChatCreateDialog","BASE_URL","BASE_USER_URL","AuthenticationService","http","location","sessionStorage","getItem","clear","token","clearTokens","setItem","getToken","replaceState","window","reload","headers","append","body","post","res","status","accessToken","setAccessToken","go","setUserStatusOnline","get","providedIn","ChatCreateService","newChatUpdated","asObservable","global","tagToRemove","indexOfTag","postTags","postCategory","next","CHAT_API","ChatService","chatUpdated","socket","initClientSocket","query","updateChat","_this","on","emit","getIndexOfUserId","cur","imageUrl","ChatsService","chats","chatsUpdated","popChatIdsUpdated","recChatIdsUpdated","recomChatIdsUpdated","chatTitles","chatTags","chatTitlesUpdated","chatTagsUpdated","selectedChatIdUpdated","updateChats","updateRecentChatIds","updatePopularChatIds","updateRecommendedChatIds","chatCategory","updateChatTags","updateChatTitles","updateSelectedChatId","TokenInterceptor","request","clone","setHeaders","authorization","handle","UserService","userUpdated","updateUser","userEmail","requestId","UsersService","usersUpdated","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { HomePageComponent } from './components/home-page/home-page.component'\nimport { LoginPageComponent } from './components/login-page/login-page.component'\nimport { RegisterPageComponent } from \"./components/register-page/register-page.component\"\nimport { GlobalChatComponent } from './components/chat-page/global-chat/global-chat.component'\nimport { UserPageComponent } from \"./components/user-page/user-page.component\"\n\nconst routes: Routes = [\n  { path: \"\", component: HomePageComponent },\n  { path: \"api/authentication/login\", component: LoginPageComponent },\n  { path: \"api/authentication/register\", component: RegisterPageComponent },\n  { path: \"api/chat/view/:id\", component: GlobalChatComponent },\n  { path: \"api/user\", component: UserPageComponent },\n  { path: \"**\", redirectTo: \"\", component: HomePageComponent }\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ChatsService } from \"./services/chats\"\nimport { UsersService } from \"./services/users\"\nimport { ChatService } from './services/chat';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\"./app.component.css\"],\n  providers: [ChatsService, UsersService]\n})\nexport class AppComponent {\n  title = 'messenger-app'\n  constructor(\n    private chatsService: ChatsService, \n    private usersService: UsersService, \n    private chatService: ChatService\n  ) {}\n  \n  ngOnInit() {\n    this.chatService.initServerSocket()\n  }\n}","<router-outlet></router-outlet>\n","// Modules\nimport { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\nimport { AppRoutingModule } from './app-routing.module'\nimport { HttpClientModule } from '@angular/common/http'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatToolbarModule } from \"@angular/material/toolbar\"\nimport { MatCardModule } from '@angular/material/card'\nimport { FormsModule } from \"@angular/forms\"\nimport { FlexLayoutModule } from \"@angular/flex-layout\"\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatExpansionModule } from \"@angular/material/expansion\"\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatDialogModule } from \"@angular/material/dialog\"\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\"\nimport { ReactiveFormsModule } from \"@angular/forms\"\n//Services\nimport { AuthenticationService } from './services/authentication'\nimport { UserService } from './services/user'\n//Components\nimport { HomePageComponent } from './components/home-page/home-page.component'\nimport { RegisterPageComponent } from \"./components/register-page/register-page.component\"\nimport { LoginPageComponent } from './components/login-page/login-page.component'\nimport { NavbarComponent } from './components/navbar/navbar.component'\nimport { AppComponent } from './app.component'\nimport { GlobalChatComponent } from './components/chat-page/global-chat/global-chat.component'\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\"\nimport { TokenInterceptor } from './services/token.interceptor'\nimport { MessageViewComponent } from './components/chat-page/message-view/message-view.component'\nimport { MessageCreateComponent } from './components/chat-page/message-view/message-create/message-create.component'\nimport { MessageReceivedComponent } from './components/chat-page/message-view/messages/message-received/message-received.component'\nimport { MessageSentComponent } from \"./components/chat-page/message-view/messages/message-sent/message-sent.component\"\nimport { ChatDisplayComponent } from \"./components/home-page/chat-display/chat-display.component\"\nimport { UserPageComponent } from \"./components/user-page/user-page.component\"\nimport { UserIconComponent } from \"./components/user-icon/user-icon.component\"\nimport { ChatTitleComponent } from  \"./components/chat-page/message-view/chat-title/chat-title.component\"\nimport { ChatSubscribeComponent } from \"./components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe.component\"\nimport { SubscribersViewComponent } from \"./components/chat-page/subscribers-view/subscribers-view.component\"\nimport { MessagesComponent } from \"./components/chat-page/message-view/messages/messages.component\"\nimport { UserFriendsViewComponent } from \"./components/user-page/user-friends-view/user-friends-view.component\"\nimport { UserViewComponent } from \"./components/user-page/user-view/user-view.component\"\nimport { UserChatsViewComponent } from \"./components/user-page/user-chats-view/user-chats-view.component\"\nimport { ImageFabComponent } from \"./components/image-fab/image-fab.component\"\nimport { ChatTagsComponent } from \"./components/user-page/user-view/user-view-chat-create-dialog/chat-tags/chat-tags.component\"\nimport { TagComponent } from \"./components/user-page/user-view/user-view-chat-create-dialog/chat-tags/tag/tag.component\"\nimport { HeaderComponent } from \"./components/header/header.component\"\nimport { SubscriberComponent } from \"./components/chat-page/subscribers-view/subscriber/subscriber.component\"\nimport { ChatSelectionComponent } from './components/chat-selection/chat-selection'\nimport { ChatOptionComponent } from './components/chat-selection/chat-option/chat-option'\nimport { ChatSubscribeAdminDialogComponent } from \"./components/chat-page/message-view/chat-title/chat-subscribe/chat-subscribe-admin-dialog/chat-subscribe-admin-dialog.component\"\nimport { ChatIconComponent } from \"./components/chat-icon/chat-icon.component\"\nimport { UserViewIconDialogComponent } from \"./components/user-page/user-view/user-view-icon-dialog/user-view-icon-dialog.component\"\nimport { FriendRequestComponent } from \"./components/user-page/user-friends-view/friend-request/friend-request.component\"\nimport { RelatedChatsComponent } from \"./components/chat-page/global-chat/related-chats/related-chats.component\"\nimport { ChatSearchComponent } from \"./components/home-page/chat-search/chat-search.component\"\nimport { ChatListsComponent } from './components/home-page/chat-lists/chat-lists.component'\nimport { UserViewChatCreateDialogComponent } from \"./components/user-page/user-view/user-view-chat-create-dialog/user-view-chat-create-dialog.component\"\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    LoginPageComponent,\n    RegisterPageComponent,\n    NavbarComponent,\n    MessageViewComponent,\n    MessageCreateComponent,\n    MessageReceivedComponent,\n    MessageSentComponent,\n    GlobalChatComponent,\n    ChatDisplayComponent,\n    UserPageComponent,\n    UserIconComponent,\n    ChatTitleComponent,\n    ChatSubscribeComponent,\n    SubscribersViewComponent,\n    MessagesComponent,\n    UserFriendsViewComponent,\n    UserViewComponent,\n    UserChatsViewComponent,\n    ImageFabComponent,\n    ChatTagsComponent,\n    TagComponent,\n    HeaderComponent,\n    SubscriberComponent,\n    ChatSelectionComponent,\n    ChatOptionComponent,\n    ChatSubscribeAdminDialogComponent,\n    ChatIconComponent,\n    FriendRequestComponent,\n    RelatedChatsComponent,\n    ChatSearchComponent,\n    ChatListsComponent,\n    UserViewIconDialogComponent,\n    UserViewChatCreateDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatCardModule,\n    MatInputModule,\n    MatToolbarModule,\n    FormsModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    AuthenticationService,\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from \"@angular/core\"\n\n@Component({\n        selector: \"app-chat-icon\",\n        templateUrl: \"chat-icon.component.html\",\n        styleUrls: [\"chat-icon.component.css\"]\n})\nexport class ChatIconComponent {}","<div class=\"icon-button\"></div>","import { Component, OnInit } from '@angular/core'\nimport { ChatService } from 'src/app/services/chat';\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { UsersService } from 'src/app/services/users';\nimport { Subscription } from 'rxjs';\nimport { Chat } from \"../../../models/chat\"\nimport { trigger, state, style, animate, transition } from '@angular/animations'\nimport { MediaObserver } from \"@angular/flex-layout\"\n\n\n@Component({\n  selector: \"app-global-chat\",\n  templateUrl: \"global-chat.component.html\",\n  styleUrls: [\"global-chat.component.css\"],\n  animations: [\n    trigger(\"expansionPanel\", [\n            state(\"open\", style({\n                    visibility: \"visible\",\n                    width: \"calc(100% - 64px)\"\n            })),\n            state(\"closed\", style({\n                    width: \"0%\",\n                    visibility: \"hidden\"\n            })),\n            transition(\"open => closed\", [\n                    animate(\"0.2s\")\n            ]),\n            transition(\"closed => open\", [\n                    animate(\"0.2s\")\n            ])\n      ]),\n      trigger(\"expansionTitle\", [\n            state(\"visible\", style({\n                    width: \"30px\",\n                    lineHeight: \"30px\",\n                    marginRight: \"1px\",\n                    marginLeft: \"1px\",\n                    visibility: \"visible\"\n            })),\n            state(\"invisible\", style({\n                    width: \"0px\",\n                    visibility: \"hidden\"\n            }))\n      ])\n  ],\n  providers: [ChatService]\n})\nexport class GlobalChatComponent implements OnInit {\n  chatId: string\n  chatSub: Subscription\n  leftExpanded: boolean = false\n  rightExpanded: boolean = false\n  constructor(\n    private chatService: ChatService, \n    private route: ActivatedRoute, \n    private usersService: UsersService,\n    private router: Router,\n    public media: MediaObserver\n  ) {\n    //Reloads when params change \n    this.router.routeReuseStrategy.shouldReuseRoute = \n      () => false\n  }\n\n  ngOnInit() {\n    //Set chatId from router link id\n    this.route.params\n      .subscribe(params => {\n        this.chatId = params[\"id\"]\n        this.chatService.initChatService(this.chatId)\n        this.chatService.getChat()\n        this.chatSub = this.chatService.getChatUpdated()\n          .subscribe((chat: Chat) => {\n            var userIds = []\n            for (var i = 0; i < chat.subs.length; i++) {\n              const userId = chat.subs[i]\n              if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                userIds.push(userId)\n              }\n            }\n            for (var i = 0; i < chat.messages.length; i++) {\n              const userId = chat.messages[i].senderId\n              if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                userIds.push(userId)\n              }\n            }\n            this.usersService.getUsers(userIds)\n          })\n      })\n  }\n\n  //Toggles the left expansion panel\n  toggleLeft() {\n    this.leftExpanded = !this.leftExpanded\n    if (this.leftExpanded) {\n      this.rightExpanded = false\n    }\n  }\n\n  //Toggles the right expansion panel\n  toggleRight() {\n    this.rightExpanded = !this.rightExpanded\n    if (this.rightExpanded) {\n      this.leftExpanded = false\n    }\n  }\n\n  //Toggles the middle expansion panel\n  toggleMiddle() {\n    this.rightExpanded = false\n    this.leftExpanded = false\n  }\n}\n","<app-navbar>\n        <div *ngIf=\"this.media.isActive('gt-sm')\" fxShow=\"true\" fxHide.lt-md=\"true\" class=\"container\">\n                <div class=\"left\">\n                        <app-related-chats></app-related-chats>\n                </div>\n                <div class=\"middle\">\n                        <app-message-view></app-message-view>\n                </div>\n                <div class=\"right\">\n                        <app-subscribers-view></app-subscribers-view>\n                </div>\n        </div>\n        <div *ngIf=\"this.media.isActive('lt-md')\" fxShow=\"true\" fxHide.gt-sm=\"true\" class=\"container-small\">\n                <div class=\"header-container float-left\" [@expansionTitle]=\"!leftExpanded ? 'visible' : 'invisible'\" (click)=\"toggleLeft()\">\n                       <span class=\"header-text no-select transform-color\">\n                                ◀&#xFE0E;\n                       </span> \n                </div>\n                <div class=\"left-small float-left\" [@expansionPanel]=\"leftExpanded ? 'open' : 'closed'\">\n                        <app-related-chats></app-related-chats>\n                </div>\n        \n                <div class=\"header-container float-left\" [@expansionTitle]=\"(leftExpanded || rightExpanded) ? 'visible' : 'invisible'\" (click)=\"toggleMiddle()\">\n                        <span class=\"header-text transform-color no-select\">\n                                ◈&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"middle-small float-left\" [@expansionPanel]=\"(!rightExpanded && !leftExpanded)? 'open' : 'closed'\">\n                        <app-message-view></app-message-view>\n                </div>\n        \n        \n                <div class=\"header-container float-right\" [@expansionTitle]=\"!rightExpanded ? 'visible' : 'invisible'\" (click)=\"toggleRight()\">\n                        <span class=\"header-text no-select transform-color\">\n                                ▶&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"right-small float-right\" [@expansionPanel]=\"rightExpanded ? 'open' : 'closed'\">\n                        <app-subscribers-view></app-subscribers-view>\n                </div>\n        </div>\n        \n</app-navbar>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { ChatsService } from \"../../../../services/chats\"\nimport { ChatService } from \"../../../../services/chat\"\nimport { Subscription } from \"rxjs\"\n\n@Component({\n        selector: \"app-related-chats\",\n        templateUrl: \"related-chats.component.html\",\n        styleUrls: [\"related-chats.component.css\"]\n})\nexport class RelatedChatsComponent implements OnInit, OnDestroy {\n        chatIds: string[] = []\n        queried: boolean = false\n        chatSub: Subscription\n        constructor(private chatsService: ChatsService, private chatService: ChatService) {}\n        ngOnInit() {\n                \n                this.chatSub = this.chatService.getChatUpdated()\n                        .subscribe((chat) => {\n                                if (this.queried) return\n                                this.queried = true\n                                this.chatsService.getRelatedChatIds(chat.tags, chat.category, chat._id)\n                                        .then((chatIds: string[]) => {\n                                                this.chatIds = chatIds\n                                                this.chatsService.getChats(chatIds)\n                                        })\n                        })\n                this.chatService.getChat()\n        }\n\n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.chatSub.unsubscribe()\n        }\n        \n}","<div class=\"container\">\n        <app-header \n                [headerText]=\"'Related Chats'\" \n                [imageUrl]=\"'../../../assets/images/Related2.png'\"\n        ></app-header>\n        <div class=\"chat-selection-container\">\n                <app-chat-selection \n                        [chatIds]=\"this.chatIds\"\n                        [color]=\"'rgb(173, 243, 250)'\"\n                ></app-chat-selection>\n        </div>\n</div>","import { Component, Inject } from \"@angular/core\"\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'\nimport { ChatService } from 'src/app/services/chat'\nimport { DialogData } from \"./dialog-data\"\n\n@Component({\n        selector: 'app-chat-subscribe-admin-dialog',\n        templateUrl: 'chat-subscribe-admin-dialog.component.html',\n        styleUrls: [\"chat-subscribe-admin-dialog.component.css\"]\n})\nexport class ChatSubscribeAdminDialogComponent {\n        selectedImage\n        selectedImageUrl\n        constructor(\n                public dialogRef: MatDialogRef<ChatSubscribeAdminDialogComponent>, \n                private chatService: ChatService,\n                @Inject(MAT_DIALOG_DATA) public data: DialogData\n        ) {}\n        \n        onExit() {\n                this.dialogRef.close();\n        }\n\n       //Sets the selected image to the image selected by the user\n       onImageSelected(event) {\n                this.selectedImage = event.target.files[0]\n                const reader = new FileReader()\n                reader.readAsDataURL(this.selectedImage)\n                reader.onload = () => {\n                        const originalDataUrl = reader.result\n                        //Scaled the image down to a 400 X 400 square\n                        this.scaleImage(originalDataUrl, 400, 400, this.selectedImage.type, 0.7, (dataUrl) => {\n                                this.selectedImageUrl = dataUrl\n                        })\n                }\n        }\n\n        //https://codepen.io/shrinivas93/pen/xdLLPN\n        scaleImage(dataUrl, newWidth: number, newHeight: number, imageType: string, imageArguments: number, callback) {\n                imageType = imageType || \"image/jpeg\";\n                imageArguments = imageArguments || 0.7;\n                const image = new Image();\n                image.onload = function() {\n                        const canvas = document.createElement(\"canvas\");\n                        canvas.width = newWidth;\n                        canvas.height = newHeight;\n                        const ctx = canvas.getContext(\"2d\");\n                        ctx.drawImage(image, 0, 0, newWidth, newHeight);\n                        const newDataUrl = canvas.toDataURL(imageType, imageArguments);\n                        callback(newDataUrl);\n                }\n                image.src = dataUrl;\n        }\n\n        //Uploads image\n        uploadImage() {\n                if (this.selectedImageUrl === undefined || this.selectedImageUrl === null) return\n                this.chatService.setChatId(this.data.chatId)\n                this.chatService.setChatImage(this.selectedImageUrl)\n                this.dialogRef.close()\n        }\n\n}","<div class=\"container\">\n        <div class=\"dialog-header\">Upload chat image</div>\n        <div class=\"file-input-container\">\n                <input type=\"file\"\n                        accept=\"image/*\"\n                        (change)=\"onImageSelected($event)\"\n                >\n        </div>\n        <div mat-dialog-actions>\n                <button \n                        mat-button \n                        *ngIf=\"this.selectedImage !== null && this.selectedImage !== undefined\" \n                        (click)=\"uploadImage()\"\n                        class=\"upload-button\"\n                >Upload</button>\n                <button \n                        mat-button \n                        (click)=\"onExit()\" \n                        class=\"dialog-button\"\n                >Exit</button>\n                \n        </div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { ChatService } from \"../../../../../services/chat\"\nimport { AuthenticationService } from \"../../../../../services/authentication\"\nimport { UserService } from \"../../../../../services/user\"\nimport { Subscription } from \"rxjs\"\nimport { User } from \"../../../../../models/user\"\nimport { ChatSub } from 'src/app/models/chat-sub'\nimport { UsersService } from 'src/app/services/users'\nimport { UserSub } from \"../../../../../models/user-sub\"\nimport { ChatSubscribeAdminDialogComponent } from \"../chat-subscribe/chat-subscribe-admin-dialog/chat-subscribe-admin-dialog.component\"\nimport { MatDialog } from \"@angular/material/dialog\"\n\n@Component({\n        selector: \"app-chat-subscribe\",\n        templateUrl: \"chat-subscribe.component.html\",\n        styleUrls: [\"chat-subscribe.component.css\"]\n})\nexport class ChatSubscribeComponent implements OnInit, OnDestroy {\n        user: User\n        userSub: Subscription\n        subscribing: boolean = false\n        constructor(\n                private chatService: ChatService, \n                private authService: AuthenticationService, \n                private userService: UserService, \n                private usersService: UsersService,\n                private dialog: MatDialog\n        ) {}\n\n        //Initializes user object and user subscription\n        ngOnInit() {\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe( user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n        }\n\n        isAdmin() {\n                if (this.user === undefined || this.user === null) return false\n                return this.chatService.isAdmin(this.user._id)\n        }\n\n        //Subscribes user to chat if the user is logged in and has not yet subscribed\n        subscribe() {\n                if (this.subscribing) return\n                this.subscribing = true\n                this.chatService.subscribeToChat().then(\n                        () =>  {\n                                if (this.usersService.getUserSub(this.user._id) === null || this.usersService.getUserSub(this.user._id) === undefined) {\n                                this.usersService.getUser(this.user._id)\n                                        .then( (userSub: UserSub ) => {\n                                                this.usersService.users.push(userSub)\n                                                this.usersService.updateUsers()\n                                        })\n                                }\n                                this.userService.getUser(true)\n                                this.subscribing = false\n                        }\n                ).catch((reject) => console.log(reject))\n        }\n\n        //Unsubscribes user from chat if the user is logged in and is already subscribed\n        unsubscribe() {\n                this.chatService.unsubscribeFromChat().then(\n                        () => this.userService.getUser(true)\n                ).catch((reject) => console.log(reject))\n        }\n\n        //Checks if user has logged in \n        isAuthenticated() {\n                return this.authService.isAuthenticated()\n        }\n\n        //Checks if user is subscribed to the chat\n        isSubscribed() {\n                if (this.chatService.chatId === undefined || this.chatService.chatId === null || this.user === null || this.user === undefined) return false\n                const chat: ChatSub = this.chatService.getChatSub()\n                for (var i = 0; i < this.user.chatIds.length; i++) {\n                        if (this.user.chatIds[i] === chat._id) {\n                                return true\n                        }\n                }\n                return false\n        }\n\n        openDialog() {\n                const dialogRef = this.dialog.open(ChatSubscribeAdminDialogComponent, {\n                        width: '350px',\n                        height: \"350px\",\n                        data: { chatId: this.chatService.chatId }\n                })\n                dialogRef.afterClosed()\n                        .subscribe(() => {\n                                this.chatService.getChat(true)\n                        })\n        }\n\n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n}","<div class=\"container transform-height\" *ngIf=\"this.isAuthenticated()\">\n        <div class=\"admin-container transform-background-color\" *ngIf=\"this.isAdmin()\" (click)=\"openDialog()\">\n                <div class=\"admin-text transform-color\">\n                        Edit\n                </div>\n        </div>\n        <div class=\"subscribe-button-container transform-background-color\" *ngIf=\"!this.isSubscribed()\" (click)=\"this.subscribe()\">\n                <div class=\"subscribe-button transform-color\">\n                        Join\n                </div>\n        </div>\n        <div class=\"subscribed-button-container transform-background-color\" *ngIf=\"this.isSubscribed() && !this.isAdmin()\" (click)=\"this.unsubscribe()\">\n                <div class=\"subscribed-button transform-color\">\n                        Joined\n                </div>\n        </div>\n</div>","import { Component, Input } from \"@angular/core\"\nimport { Subscription } from 'rxjs'\nimport { Chat } from 'src/app/models/chat'\nimport { ChatService } from \"../../../../services/chat\"\nimport { ChatsService } from \"../../../../services/chats\"\n\n@Component({\n        selector: \"app-chat-title\",\n        templateUrl: \"chat-title.component.html\",\n        styleUrls: [\"chat-title.component.css\"]\n})\nexport class ChatTitleComponent {\n        chatSub: Subscription\n        chat: Chat\n        @Input() onChatPage: boolean = false\n        constructor(private chatService: ChatService, public chatsService: ChatsService) {}\n\n        ngOnInit() {\n                this.chatSub = this.chatService.getChatUpdated()\n                        .subscribe(chat => {\n                                this.chat = chat\n                        })\n                this.chatService.getChat()\n        }    \n\n        ngOnDestroy() {\n                this.chatSub.unsubscribe()\n        }    \n}","<div class=\"container\">\n        <div class=\"icon-container\">\n                <app-image-fab \n                        *ngIf=\"(this.chat !== undefined && this.chat !== null) && this.chat.image !== '$$$Default$$$'\" \n                        [imageUrl]=\"this.chat.image\" \n                        [showStatus]=\"false\"\n                ></app-image-fab>\n                <app-chat-icon \n                        *ngIf=\"this.chat === undefined || this.chat === null ||this.chat.image === '$$$Default$$$'\" \n                ></app-chat-icon>\n        </div>\n        <div class=\"title-container\">\n                <div class=\"title\"  *ngIf=\"this.chat !== undefined && this.chat !== null\">\n                        {{this.chat.title}}\n                </div>\n                <div class=\"title\" *ngIf=\"this.chat === undefined || this.chat === null\">\n                        Loading...\n                </div>\n                <div class=\"tags-container\" *ngIf=\"this.chat !== undefined && this.chat !== null\">\n                        <div class=\"tag-container\" *ngFor=\"let tag of this.chat.tags\">\n                                {{tag}}\n                        </div>\n                </div>\n        </div>\n        <span class=\"flex-expand\"></span>\n        <div class=\"chat-subscribe-container\" *ngIf=\"this.onChatPage\">\n                <app-chat-subscribe></app-chat-subscribe>\n        </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core'\nimport { ChatService } from '../../../../services/chat'\nimport { AuthenticationService } from \"../../../../services/authentication\"\nimport { UserService } from '../../../../services/user'\nimport { User } from '../../../../models/user'\nimport { Subscription } from 'rxjs'\nimport { NgForm } from '@angular/forms'\nimport { UsersService } from 'src/app/services/users'\nimport { UserSub } from 'src/app/models/user-sub'\n\n@Component({\n  selector: \"app-message-create\",\n  templateUrl: \"message-create.component.html\",\n  styleUrls: [\"message-create.component.css\"]\n})\nexport class MessageCreateComponent {\n  user: User\n  userSub: Subscription\n  constructor(private userService: UserService, private chatService: ChatService, private authService: AuthenticationService, private usersService: UsersService) {}\n\n  //Initializes link to UserService user\n  ngOnInit() {\n    this.userSub = this.userService.getUserUpdated()\n      .subscribe(user => {\n        this.user = user\n      })\n    this.userService.getUser()\n  }\n\n  //Requests message post to database\n  postMessage(messageForm: NgForm) {\n    const message = messageForm.value.message.trim()\n    if (message == \"\" || message == null || message == undefined) {return}\n    let timestamp = new Date().getTime()\n    this.chatService.postMessage(message, this.user._id, timestamp)\n    if (this.usersService.getUserSub(this.user._id) === null || this.usersService.getUserSub(this.user._id) === undefined) {\n      this.usersService.getUser(this.user._id)\n        .then( (userSub: UserSub ) => {\n          this.usersService.users.push(userSub)\n          this.usersService.updateUsers()\n        })\n    }\n    messageForm.resetForm()\n  }\n\n  //Check if user is authenticated\n  isAuthenticated() {\n    return this.authService.isAuthenticated()\n  }\n\n  //Avoid memory leaks\n  ngOnDestroy() {\n    this.userSub.unsubscribe()\n  }\n\n}\n","<div *ngIf=\"isAuthenticated()\"  class=\"container-one\">\n  <div class=\"container-two\">\n      <form #messageForm=\"ngForm\" (submit)=\"postMessage(messageForm)\" class=\"message-form\">\n        <!-- Message Field -->\n        <div class=\"message-field-container\">\n          <input\n            matInput\n            type=\"text\"\n            name=\"message\"\n            ngModel\n            placeholder=\"message\"\n            #message=\"ngModel\"\n            class=\"message-field\"\n            autocomplete=\"off\" \n          >\n          <!-- ?mat-form-field? -->\n        </div>\n        <div class=\"form-submit-container\">\n            <button mat-raised-button type=\"submit\" class=\"form-submit\">\n              Send\n            </button>\n        </div>\n      </form>\n  </div>\n</div>\n<div *ngIf=\"!isAuthenticated()\" class=\"placeholder\">\n  <p [routerLink]=\"'/api/authentication/login'\" class=\"placeholder-text login\">login</p>\n  <p class=\"placeholder-text\">or</p>\n  <p [routerLink]=\"'/api/authentication/register'\" class=\"placeholder-text register\">register</p>\n  <p class=\"placeholder-text\">to send messages</p>\n\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core'\nimport { UserService } from '../../../services/user'\nimport { User } from 'src/app/models/user'\nimport { Subscription } from 'rxjs'\nimport { Chat } from 'src/app/models/chat'\nimport { ChatService } from \"../../../services/chat\"\n\n@Component({\n  selector: \"app-message-view\",\n  templateUrl: \"message-view.component.html\",\n  styleUrls: [\"message-view.component.css\"]\n})\nexport class MessageViewComponent {\n  chat: Chat\n  chatSub: Subscription\n  user: User\n  userSub: Subscription\n\n  constructor(private userService: UserService, private chatService: ChatService) {}\n\n  //Keeping the user object updated\n  ngOnInit() {\n    //Creates link to UserService user\n    this.userSub = this.userService.getUserUpdated()\n      .subscribe(user => {\n        this.user = user\n      })\n    this.userService.getUser()\n    //Creates link to ChatService chat\n    this.chatSub = this.chatService.getChatUpdated()\n      .subscribe(chat => this.chat = chat)\n    this.chatService.getChat()\n  }\n\n  \n\n  //Avoid memory leak\n  ngOnDestroy() {\n    this.userSub.unsubscribe()\n    this.chatSub.unsubscribe()\n  }\n}\n","<div class=\"view-background\">\n  <app-chat-title *ngIf=\"this.chat != undefined && this.chat != null\" [onChatPage]=\"true\"></app-chat-title>\n  <app-messages></app-messages>\n  <app-message-create></app-message-create>\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core'\nimport { UsersService } from \"../../../../../services/users\"\nimport { UserSub } from 'src/app/models/user-sub'\n\n@Component({\n  selector: \"app-message-received\",\n  templateUrl: \"message-received.component.html\",\n  styleUrls: [\"message-received.component.css\"]\n})\nexport class MessageReceivedComponent implements OnInit {\n  @Input() senderId: string\n  @Input() timestamp: number\n  userSub: UserSub = {\n    _id: \"----\",\n    username: \"loading...\",\n    image: \"$$$Default$$$\",\n    online: false\n  }\n\n  constructor(private usersService: UsersService) {}\n\n  ngOnInit() {\n    this.getUser()\n  }\n\n  getUser() {\n    if (this.usersService.getUserSub(this.senderId)) {\n      this.userSub = this.usersService.getUserSub(this.senderId)\n    }\n  }\n\n  getTime(timestampMil: number) {\n    const timestamp = new Date()\n    //Converts the timestamp from milliseconds to the clients local time\n    timestamp.setTime(timestampMil)\n    //Raw Time \n    const rawTime = timestamp.toLocaleTimeString()\n    const time = this.parseRawTime(rawTime)\n    const rawDate = timestamp.toDateString()\n    const date = this.parseRawDate(rawDate)\n    return time + \" \" + date\n  }\n\n  //Format HH:MM:SS (AM/PM) -> HH:MM (AM/PM)\n  parseRawTime(rawTime: string) {\n    const splitTime = rawTime.split(\":\")\n    const time = splitTime[0] + \":\" + splitTime[1] + splitTime[2].split(\" \")[1].toLowerCase()\n    return time\n  }\n\n  //Format WEEKDAY MON DAY YEAR -> MON DAY\n  parseRawDate(rawDate: string) {\n    if (rawDate === new Date().toDateString()) return \"Today\"\n    const dateSplit = rawDate.split(\" \")\n    var date = dateSplit[1] + \" \" + dateSplit[2]\n    if (dateSplit[2].length === 2) {\n      if (dateSplit[2][1] === '1') date += \"st\"\n      else if (dateSplit[2][1] === '2') date += \"nd\"\n      else if (dateSplit[2][1] === '3') date += \"rd\"\n      else date += \"th\"\n    } else {\n      if (dateSplit[2] === \"1\") date += \"st\"\n      else if (dateSplit[2] === \"2\") date += \"nd\"\n      else if (dateSplit[2] === \"3\") date += \"rd\"\n      else date += \"th\"\n    }\n    return date\n  }\n}\n","<div class=\"container\">\n  <div class=\"user-icon-container\">\n    <div class=\"user-icon\">\n      <app-image-fab *ngIf=\"this.userSub.image != '$$$Default$$$'\" [imageUrl]=\"this.userSub.image\" [showStatus]=\"false\"></app-image-fab>\n      <app-user-icon *ngIf=\"this.userSub.image === '$$$Default$$$'\" [showStatus]=\"false\"></app-user-icon>\n    </div>\n  </div>\n  <div class=\"message-container\">\n    <div class=\"message-header-container\">\n      <div class=\"username\">{{this.userSub.username}}</div>\n      <!-- Timestamp -->\n      <div class=\"timestamp\">{{this.getTime(this.timestamp)}}</div>\n    </div>\n    <!-- Text -->\n    <div class=\"message-body-container\">\n        <span class=\"message-text\"><ng-content></ng-content></span>\n    </div>\n  </div>\n</div>\n","import { Component, Input} from '@angular/core'\n\n@Component({\n  selector: \"app-message-sent\",\n  templateUrl: \"message-sent.component.html\",\n  styleUrls: [\"message-sent.component.css\"]\n})\nexport class MessageSentComponent {\n  @Input() senderUsername\n}\n","<div class=\"container\">\n  <div class=\"message-container\">\n    <div class=\"message-header-container\">\n        <div class=\"username\">{{this.senderUsername}}</div>\n        <!-- Timestamp -->\n    </div>\n    <!-- Text -->\n    <div class=\"message-body-container\">\n        <p class=\"message-text\"><ng-content></ng-content></p>\n    </div>\n  </div>\n  <div class=\"user-icon-container\">\n    <div class=\"user-icon\">\n        <app-user-icon></app-user-icon>\n    </div>\n  </div>\n</div>\n  ","import { Component, OnInit, OnDestroy, ElementRef, ViewChild, AfterViewChecked } from \"@angular/core\"\nimport { ChatService } from \"../../../../services/chat\"\nimport { UserService } from \"../../../../services/user\"\nimport { Message } from \"../../../../models/message\"\nimport { Chat } from \"../../../../models/chat\"\nimport { User } from \"../../../../models/user\"\nimport { Subscription } from \"rxjs\"\n\n@Component({\n        selector: \"app-messages\",\n        templateUrl: \"messages.component.html\",\n        styleUrls: [\"messages.component.css\"]\n})\nexport class MessagesComponent {\n        @ViewChild(\"messages\") private messageContainer: ElementRef\n        chat: Chat\n        chatSub: Subscription\n        user: User\n        userSub: Subscription\n\n        constructor(private userService: UserService, private chatService: ChatService) {}\n\n        //Keeping the user object updated\n        ngOnInit() {\n                //Scrolls to most recent messages\n                this.scrollToBottom();\n                //Creates link to UserService user\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n                \n                //Creates link to ChatService chat\n                this.chatSub = this.chatService.getChatUpdated()\n                        .subscribe(chat => {\n                                this.chat = chat\n                                this.scrollToBottom()\n                        })\n                this.chatService.getChat()\n        }\n\n        ngAfterViewChecked() {\n                this.scrollToBottom()\n        }\n\n        //Compresses messages\n        compressMessages(messages: Message[]) : Message[] {\n                if (messages === undefined || messages === null || messages.length == 0) return []\n                var compressedMessages: Message[] = [{...messages[0]}]\n                for (var i = 1; i < messages.length; i++) {\n                        var len = compressedMessages.length\n                        if (messages[i].senderId == compressedMessages[len-1].senderId) {\n                                compressedMessages[len-1].text = compressedMessages[len-1].text\n                                        .concat(\"\\n\", messages[i].text)\n                                compressedMessages[len - 1].timestamp = messages[i].timestamp\n                        } else {\n                                compressedMessages.push({...messages[i]})\n                        }\n                }\n                return compressedMessages\n        }\n\n        //Checks if logged in user sent the message\n        sent(message: Message) : boolean {\n                //Checks if user exists\n                if (this.user == undefined || this.user == null) return false\n                return message.senderId == this.user._id\n        }\n                \n        //Checks if logged in user received the message\n        received(message: Message) : boolean {\n                return !this.sent(message)\n        }\n\n        //Scroll to most recent messages\n        scrollToBottom() {\n                try {\n                        var currentPos = this.messageContainer.nativeElement.scrollHeight\n                        this.messageContainer.nativeElement.scrollTop = currentPos\n                } catch(err) {}\n        }\n\n        //Avoid memory leak\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n                this.chatSub.unsubscribe()\n        }\n}\n","<div #messages *ngIf=\"this.chat != undefined && this.chat != null\" class=\"messages\">\n        <div *ngFor=\"let message of compressMessages(chat.messages)\">\n                <app-message-received [senderId]=\"message.senderId\" [timestamp]=\"message.timestamp\"> \n                        {{message.text}}\n                </app-message-received>\n                <div class=\"spacer invisible\"></div>\n        </div>\n</div>","import { Component, Input } from \"@angular/core\"\n\n@Component({\n        selector: \"app-subscriber\",\n        templateUrl: \"subscriber.component.html\",\n        styleUrls: [\"subscriber.component.css\"]\n})\nexport class SubscriberComponent {\n        @Input() username: string = \"loading...\"\n        @Input() online: boolean = false\n        @Input() image: string = \"$$$Default$$$\"\n        @Input() adminId: string = \"--admin--\"\n        @Input() subId: string = \"--user--\"\n}","<div class=\"subscriber-container\" *ngIf=\"this.subId !== this.adminId\">\n        <div class=\"subscriber-icon-container\">\n                <app-image-fab *ngIf=\"this.image != '$$$Default$$$'\" [imageUrl]=\"this.image\" [showStatus]=\"true\" [online]=\"this.online\"></app-image-fab>\n                <app-user-icon *ngIf=\"this.image === '$$$Default$$$'\" [showStatus]=\"true\" [online]=\"this.online\"></app-user-icon>\n        </div>\n        <div class=\"subscriber-username-container\">\n                <div class=\"subscriber-username\">\n                        {{this.username}}\n                </div>\n        </div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { ChatService } from \"../../../services/chat\"\nimport { Chat } from 'src/app/models/chat'\nimport { Subscription } from 'rxjs'\nimport { UsersService } from 'src/app/services/users'\n\n@Component({\n        selector: \"app-subscribers-view\",\n        templateUrl: \"subscribers-view.component.html\",\n        styleUrls: [\"subscribers-view.component.css\"]\n})\nexport class SubscribersViewComponent implements OnInit, OnDestroy {\n        chat: Chat\n        chatSub: Subscription\n        constructor(private chatService: ChatService, private usersService: UsersService) {}\n\n        //Initialize chat object\n        ngOnInit() {\n                this.chatSub = this.chatService.getChatUpdated()\n                        .subscribe(chat => {\n                                this.chat = chat\n                                // console.log(\"List of subs updated \\n Sub count: \" + this.chat.subs.length)\n                        })\n                this.chatService.getChat()\n        }\n\n        getUserSub(subId: string) {\n                if (this.usersService.getUserSub(subId)) {\n                        return this.usersService.getUserSub(subId)\n                }\n                return {\n                        _id: \"-----\",\n                        username: \"loading...\",\n                        image: \"$$$Default$$$\",\n                        online: false\n                }\n        }\n\n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.chatSub.unsubscribe()\n        }\n}\n\n","<app-header \n        [headerText]=\"'Admin'\" \n        [imageUrl]=\"'../../../assets/images/Admin2.png'\"\n></app-header>\n<app-subscriber \n        *ngIf=\"this.chat !== undefined && this.chat !== null\"\n        [username]=\"this.getUserSub(this.chat.adminId).username\" \n        [image]=\"this.getUserSub(this.chat.adminId).image\" \n        [online]=\"this.getUserSub(this.chat.adminId).online\" \n        [subId]=\"'------'\"\n></app-subscriber>\n\n<app-header \n        [headerText]=\"'Subscribers'\" \n        *ngIf=\"this.chat !== undefined && this.chat !== null && this.chat.subs.length > 0\" \n        [imageUrl]=\"'../../../assets/images/SubTwo.png'\"\n></app-header>\n<div *ngIf=\"this.chat\" class=\"subscribers-view-container\">\n        <app-subscriber \n                *ngFor=\"let subId of this.chat.subs\" \n                [adminId]=\"this.chat.adminId\" \n                [username]=\"this.getUserSub(subId).username\" \n                [image]=\"this.getUserSub(subId).image\" \n                [online]=\"this.getUserSub(subId).online\" \n                [subId]=\"subId\"\n        ></app-subscriber>\n</div>","import { Component, Input, AfterContentInit, ElementRef, ViewChild, AfterViewInit } from \"@angular/core\"\nimport { ChatsService } from 'src/app/services/chats'\nimport { trigger, state, style, animate, transition } from '@angular/animations'\n\n@Component({\n        selector: \"app-chat-option\",\n        animations: [\n                trigger('expansionBox', [\n                        state('open', style({\n                                backgroundColor: \"rgb(30, 40, 50)\",\n                                height: \"90px\",\n                                borderRadius: \"5px\",\n                                width: \"100%\",\n                                marginBottom: \"5px\",\n                                marginTop: \"5px\"\n                        })),\n                        state('closed', style({\n                                // backgroundColor: \"rgb(38, 49, 54)\",\n                                height: \"40px\",\n                                borderRadius: \"0px\",\n                                width: \"100%\"\n                        })),\n                                transition('open => closed', [\n                                        animate('0.1s')\n                        ]),\n                                transition('closed => open', [\n                                        animate('0.2s')\n                        ]),\n                ])\n        ],\n        templateUrl: \"chat-option.html\",\n        styleUrls: [\"chat-option.css\"]\n})\nexport class ChatOptionComponent {\n        @Input() chatId: string\n        @Input(\"color\") color: string\n        @ViewChild(\"chatTitle\") chatTitle: ElementRef\n        expanded = false;\n        constructor(private chatsService: ChatsService) {}\n\n        //Get chat sub\n        getChatSub() {\n                if (this.chatsService.getChatSub(this.chatId)) {\n                        return this.chatsService.getChatSub(this.chatId)\n                }\n                return {\n                        _id: \"-----\",\n                        title: \"loading...\",\n                        image: \"$$$Default$$$\",\n                        tags: [],\n                        subCount: 0\n                }\n        }\n\n        //Sets the selected chat id for the chat display\n        setAsSelectedChat() {\n                this.chatsService.setSelectedChatId(this.chatId)\n        }\n\n        //Change expand\n        toggle() {\n                this.expanded = !this.expanded\n                if (this.expanded) {\n                        this.setAsSelectedChat()\n                }\n        }\n}","<div [@expansionBox]=\"expanded ? 'open' : 'closed'\" (click)=\"this.toggle()\" class=\"container transform-background-color\">\n        <div class=\"top-container\">\n                <div class=\"icon-container\">\n                        <app-image-fab \n                                *ngIf=\"this.getChatSub().image != '$$$Default$$$'\" \n                                [imageUrl]=\"this.getChatSub().image\" \n                                [showStatus]=\"false\"\n                        ></app-image-fab>\n                        <app-chat-icon \n                                *ngIf=\"this.getChatSub().image === '$$$Default$$$'\" \n                        ></app-chat-icon>\n                </div>\n                <div class=\"title-container\">\n                <div class=\"title no-select transform-font-size transform-color\" [style]=\"'color:' + this.color + ';'\" *ngIf=\"!this.expanded\" #chatTitle>\n                                {{this.getChatSub().title}}\n                        </div>\n                        <div class=\"title-expanded no-select\" *ngIf=\"this.expanded\">\n                                {{this.getChatSub().title}}\n                        </div>\n                </div>\n        </div>\n        <div class=\"bottom-container\" *ngIf=\"this.expanded\">\n                <div class=\"bottom-bottom-container\">\n                        <div class=\"sub-count-container no-select\">\n                                {{'Sub Count: ' + this.getChatSub().subCount}}\n                        </div>\n                        <span class=\"flex-expand\"></span>\n                        <div class=\"go-button transform-opacity no-select\" [routerLink]=\"['/api/chat/view', this.chatId]\">\n                                Chat\n                        </div>\n                </div>\n                <div class=\"tags-container\">\n                        <div class=\"tag-container no-select transform-color\" *ngFor=\"let tag of this.getChatSub().tags\">\n                                {{tag}}\n                        </div>\n                </div>\n                \n        </div>\n\n</div>","import { Component, Input } from \"@angular/core\"\n\n@Component({\n        selector: \"app-chat-selection\",\n        templateUrl: \"chat-selection.html\",\n        styleUrls: [\"chat-selection.css\"]\n})\nexport class ChatSelectionComponent {\n        @Input() chatIds: string[]\n        @Input(\"color\") color: string = \"white\"\n}","<div class=\"container\">\n        <app-chat-option \n                *ngFor=\"let chatId of this.chatIds\" \n                [chatId]=\"this.chatId\"\n                [color]='this.color'\n        ></app-chat-option>\n</div>","import { Component, Input, AfterViewInit, ElementRef, ViewChild } from \"@angular/core\";\n\n@Component({\n        selector: \"app-header\",\n        templateUrl: \"header.component.html\",\n        styleUrls: [\"header.component.css\"]\n})\nexport class HeaderComponent implements AfterViewInit {\n        @Input(\"imageUrl\") imageUrl: string\n        @Input(\"headerText\") headerText: string\n        @ViewChild(\"headerTextElement\") headerTextElement: ElementRef\n        @Input(\"color\") color: string = \"white\"\n\n        ngAfterViewInit() {\n                this.headerTextElement.nativeElement.style.color = this.color\n        }\n\n}","<div class=\"container\">\n        <div class=\"icon-container\">\n                <app-image-fab [imageUrl]=\"this.imageUrl\"></app-image-fab>\n        </div>\n        <div class=\"text-container\">\n                <div class=\"text\" #headerTextElement>\n                        {{this.headerText}}\n                </div>\n        </div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { ChatsService } from \"../../../services/chats\"\nimport { Subscription } from \"rxjs\"\nimport { Chat } from \"../../../models/chat\"\nimport { UsersService } from 'src/app/services/users'\nimport { ChatService } from 'src/app/services/chat'\n\n\n@Component({\n  selector: \"app-chat-display\",\n  templateUrl: \"chat-display.component.html\",\n  styleUrls: [\"chat-display.component.css\"]\n})\nexport class ChatDisplayComponent implements OnInit, OnDestroy {\n  selectedChatSub: Subscription\n  selectedChat: Chat\n  selectedChatIdSub: Subscription\n  constructor(public chatsService: ChatsService, private chatService: ChatService, private usersService: UsersService) {}\n\n  ngOnInit() {\n   this.selectedChatIdSub = this.chatsService.getSelectedChatIdUpdated()\n    .subscribe((chatId: string) => {\n      if (this.selectedChat !== undefined && this.selectedChat._id === chatId) return\n      this.chatService.setChatId(chatId)\n      this.selectedChatSub = this.chatService.getChatUpdated()\n        .subscribe(chat => {\n          if (this.selectedChat === undefined || this.selectedChat === null || this.selectedChat._id !== this.chatsService.selectedChatId) {\n            this.selectedChat = chat\n            var userIds = []\n            for (var i = 0; i < this.selectedChat.subs.length; i++) {\n              const userId = this.selectedChat.subs[i]\n              if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                userIds.push(userId)\n              }\n            }\n            for (var i = 0; i < this.selectedChat.messages.length; i++) {\n              const userId = this.selectedChat.messages[i].senderId\n              if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                userIds.push(userId)\n              }\n            }\n            this.usersService.getUsers(userIds)\n          }\n        })\n      this.chatService.getChat(true)\n    })\n  }\n  //Avoid memory leaks\n  ngOnDestroy() {\n    if (this.selectedChatIdSub !== undefined && this.selectedChatIdSub === null) {\n      this.selectedChatIdSub.unsubscribe()\n    }\n    if (this.selectedChatSub !== undefined && this.selectedChatSub !== null) {\n      this.selectedChatSub.unsubscribe()\n    }\n  }\n}\n","<div class=\"container transform-opacity\" >\n      <app-chat-title></app-chat-title>\n      <app-messages></app-messages>\n      <div \n            *ngIf=\"this.chatsService.selectedChatId !== null && this.chatsService.selectedChatId\" \n            [routerLink]=\"['/api/chat/view', this.chatsService.selectedChatId]\"\n            class=\"chat-button transform-opacity transform-border transform-top no-select\"\n      >CHAT\n      </div>\n</div>\n\n\n\n\n\n","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { ChatsService } from 'src/app/services/chats';\nimport { Subscription } from 'rxjs';\n\n@Component({\n        selector: \"app-chat-lists\",\n        templateUrl: \"chat-lists.component.html\",\n        styleUrls: [\"chat-lists.component.css\"]\n})\nexport class ChatListsComponent implements OnInit, OnDestroy {\n        popChatIds: string[]\n        recChatIds: string[]\n        recomChatIds: string[]\n        popChatIdsSub: Subscription\n        recChatIdsSub: Subscription\n        recomChatIdsSub: Subscription\n        constructor(private chatsService: ChatsService) {}\n\n        ngOnInit() {    \n                this.popChatIdsSub = this.chatsService.getPopularChatIdsUpdated()\n                        .subscribe(popChatIds => {\n                                this.popChatIds = popChatIds\n                                this.chatsService.getChats(this.popChatIds)\n                                this.popChatIdsSub.unsubscribe()\n                        })\n                this.recomChatIdsSub = this.chatsService.getRecommendedChatIdsUpdated()\n                        .subscribe(recomChatIds => {\n                                this.recomChatIds = recomChatIds\n                                this.chatsService.getChats(this.recomChatIds)\n                                this.recomChatIdsSub.unsubscribe()\n                        })\n                this.recChatIdsSub = this.chatsService.getRecentChatIdsUpdated()\n                        .subscribe(recChatIds => {\n                                this.recChatIds = recChatIds\n                                this.chatsService.getChats(this.recChatIds)\n                                this.recChatIdsSub.unsubscribe()\n                        })\n                this.chatsService.getPopularChatIds()\n                this.chatsService.getRecentChatIds()\n                this.chatsService.getRecommendedChatIds()\n        }\n\n        ngOnDestroy() {\n                this.popChatIdsSub.unsubscribe()\n                this.recChatIdsSub.unsubscribe()\n                this.recomChatIdsSub.unsubscribe()\n        }\n}","<div class=\"container\">\n        <app-header \n                [headerText]=\"'Popular Chats'\" \n                [imageUrl]=\"'../../../assets/images/PopularTwo.png'\"\n        ></app-header>\n        <app-chat-selection \n                *ngIf=\"this.popChatIds !== undefined\"\n                [chatIds]=\"this.popChatIds\"\n                [color]=\"'rgb(173, 243, 250)'\"\n        ></app-chat-selection>\n        <app-header \n                [headerText]=\"'New Chats'\" \n                [imageUrl]=\"'../../../assets/images/NewChatOne.png'\"\n        ></app-header>\n        <app-chat-selection \n                *ngIf=\"this.recChatIds !== undefined\"\n                [chatIds]=\"this.recChatIds\"\n                [color]=\"'rgb(173, 243, 250)'\"\n        ></app-chat-selection>\n        <app-header \n                [headerText]=\"'Recommended Chats'\" \n                [imageUrl]=\"'../../../assets/images/RecomOne.png'\"\n            ></app-header>\n        <app-chat-selection \n                *ngIf=\"this.recomChatIds !== undefined\"\n                [chatIds]=\"this.recomChatIds\"\n                [color]=\"'rgb(173, 243, 250)'\"\n        ></app-chat-selection>\n</div>","import { Component, OnInit, OnDestroy, ElementRef, ViewChild } from \"@angular/core\"\nimport { FormControl } from \"@angular/forms\"\nimport { ChatsService } from \"../../../services/chats\"\nimport { Observable, Subscription } from \"rxjs\"\nimport { map, startWith } from 'rxjs/operators'\n\n@Component({\n        selector: \"app-chat-search\",\n        templateUrl: \"chat-search.component.html\",\n        styleUrls: [\"chat-search.component.css\"]\n})\nexport class ChatSearchComponent implements OnInit, OnDestroy {\n        @ViewChild(\"tagInput\") tagInput: ElementRef\n        formControlTags = new FormControl()\n        formControlTitles = new FormControl()\n        categories: String[] = [\n                \"Any\",\n                \"Science and Tech\",\n                \"Entertainment\",\n                \"Esports\",\n                \"Sports\",\n                \"Other\"\n        ]\n        titleValue: string = \"\"\n        tagValue: string = \"\"\n        queriedTags: boolean = false\n        queriedTitles: boolean = false\n        titleOptions: string[] = []\n        tagOptions: string[] = []\n        tagOptionsSub: Subscription\n        titleOptionsSub: Subscription\n        filteredTitleOptions: Observable<string[]>\n        filteredTagOptions: Observable<string[]>\n        tags: string[] = []\n        searching: boolean = false\n        searchResults: string[] = [] //Chat ids\n        constructor(private chatsService: ChatsService) {}\n\n        ngOnInit() {\n                this.filteredTagOptions = this.formControlTags.valueChanges.pipe(\n                        startWith(''),\n                        map(value => this.tagFilter(value))\n                )\n                this.filteredTitleOptions = this.formControlTitles.valueChanges.pipe(\n                        startWith(''),\n                        map(value => this.titleFilter(value))\n                )\n\n                this.titleOptionsSub = this.chatsService.getChatTitlesUpdated() \n                        .subscribe( titleOptions => {\n                                this.titleOptions = titleOptions\n                                this.titleOptionsSub.unsubscribe()\n                        })\n                this.tagOptionsSub = this.chatsService.getTagsUpdated() \n                        .subscribe( tagOptions => {\n                                this.tagOptions = tagOptions\n                                this.tagOptionsSub.unsubscribe()\n                        })\n                this.chatsService.getAllTags()\n                this.chatsService.getAllChatTitles()\n        }\n\n        //Adds a new tag to the list of tags\n        addTag() {\n                const newTag = this.fixTag(\n                                this.tagValue\n                                .trim()\n                                .toLowerCase()\n                        )\n                        .split(/\\s+/g)\n                        .join('‑')\n                this.tagValue = \"\"\n                if (this.tagInput !== undefined && this.tagInput !== null) {\n                        this.tagInput.nativeElement.value = \"\"\n                }\n                if (newTag === null || newTag === undefined || newTag === \"\" || newTag === \"new tag\") return\n                if (this.tags.indexOf(newTag) === -1 && this.tags.length <= 6) {\n                        this.tags.push(newTag)\n                }\n        }\n\n        //Removes a given tag\n        removeTag(tag: string) {\n                const index = this.tags.indexOf(tag)\n                if (index !== -1) {\n                        this.tags.splice(index, 1)\n                }\n        }\n\n        //Replace underscores and hyphens with no breakable hyphen\n        fixTag(tag: string) {\n                for (var i = 0; i < tag.length; i++) {\n                        if (tag[i] === '_' || tag[i] === '-') {\n                                tag = this.replaceAt(tag, i, '‑')\n                        }\n                }\n                return tag\n        }\n\n        //Search chats based on query params\n        searchChats(category: string) {\n                if (this.searching) return\n                this.searching = true\n                if (category === undefined || category === null || category === \"\") {\n                        category = \"Any\"\n                }\n                this.chatsService.searchChats(category, this.titleValue, this.tags)\n                        .then((results: string[]) => {\n                                this.searchResults = results\n                                this.chatsService.getChats(this.searchResults)\n                                this.searching = false\n                        })\n                        .catch(reject => {\n                                console.log(reject)\n                                this.searching = false\n                        })\n                return\n        }\n\n        //Replace character at index\n        replaceAt(current: string, index: number, replacement: string) {\n                return current.substr(0, index) + replacement + current.substr(index + replacement.length);\n        }\n\n        //https://stackblitz.com/angular/mjxnrkeoknp?file=src%2Fapp%2Fautocomplete-auto-active-first-option-example.ts\n        tagFilter(value: string): string[] {\n                this.tagValue = value\n                const filterValue = value.toLowerCase()    \n                return this.tagOptions.filter(option => option.toLowerCase().indexOf(filterValue) === 0)\n        }\n\n        titleFilter(value: string): string[] {\n                this.titleValue = value\n                const filterValue = value.toLowerCase()\n                return this.titleOptions.filter(option => option.toLowerCase().indexOf(filterValue) === 0)\n        }\n        \n        ngOnDestroy() {\n                this.tagOptionsSub.unsubscribe()\n                this.titleOptionsSub.unsubscribe()\n        }\n}","<div class=\"container\">\n        <app-header \n                [headerText]=\"'Search Chats'\" \n                [imageUrl]=\"'../../../assets/images/Search2.png'\"\n        ></app-header>\n        <div class=\"chat-search-container\">\n                <div class=\"chat-title-container\">\n                        <input\n                                type=\"text\"\n                                matInput\n                                name=\"title\"\n                                placeholder=\"title\"\n                                maxlength=\"40\"\n                                class=\"chat-title\"\n                                [matAutocomplete]=\"autoTitles\"\n                                [formControl]=\"this.formControlTitles\"\n                        >\n                </div>\n                <mat-autocomplete autoActiveFirstOption #autoTitles=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let title of filteredTitleOptions | async\" [value]=\"title\">\n                                        {{title}}\n                        </mat-option>\n                </mat-autocomplete>\n                <div class=\"chat-category-container\">\n                        <mat-select placeholder=\"Category\" ngModel #category=\"ngModel\" name=\"category\">\n                                <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n                                        {{category}}\n                                </mat-option>\n                        </mat-select>\n                </div>\n                <div class=\"chat-tags-container\">\n                        <div class=\"tags-container\">\n                                <div class=\"tag-container\" *ngFor=\"let tag of tags\">\n                                        <div class=\"tag-text-container no-select\">\n                                                {{tag}}\n                                        </div>\n                                        <div class=\"tag-button-container no-select\" (click)=\"removeTag(tag)\">\n                                                x\n                                        </div>\n                                </div>\n                                <button class=\"add-tag-button no-select\" (click)=\"addTag()\">+</button>\n                                <form (submit)=\"addTag()\">\n                                        <div class=\"add-tag-input-container\">\n                                                <input class=\"add-tag-input\" \n                                                        type=\"text\"\n                                                        matInput\n                                                        #tagInput\n                                                        name=\"tag\"\n                                                        placeholder=\"tag\"\n                                                        maxlength=\"25\"\n                                                        [matAutocomplete]=\"autoTags\"\n                                                        [formControl]=\"this.formControlTags\"\n                                                >\n                                        </div>\n                                        <mat-autocomplete autoActiveFirstOption #autoTags=\"matAutocomplete\">\n                                                <mat-option *ngFor=\"let tag of filteredTagOptions | async\" [value]=\"tag\">\n                                                          {{tag}}\n                                                </mat-option>\n                                        </mat-autocomplete>\n                                </form> \n                        </div>\n                </div>\n                <div class=\"search-button\" (click)=\"searchChats(category.value)\">\n                        search\n                </div>\n                <div class=\"results-container\">\n                        <div class=\"searching-label\" *ngIf=\"this.searching\">loading...</div>\n                        <app-chat-selection \n                                [chatIds]=\"this.searchResults\" \n                                [color]=\"'rgb(173, 243, 250)'\">\n                        </app-chat-selection>\n                </div>\n        </div>\n       \n</div>","import { Component, OnInit, OnDestroy } from '@angular/core'\nimport { ChatsService } from 'src/app/services/chats'\nimport { trigger, state, style, animate, transition } from '@angular/animations'\nimport { Subscription } from \"rxjs\"\nimport { MediaObserver } from \"@angular/flex-layout\"\nimport { ChatService } from 'src/app/services/chat'\n\n@Component({\n  selector: \"app-home-page\",\n  animations: [\n          trigger(\"expansionPanel\", [\n                  state(\"open\", style({\n                          visibility: \"visible\",\n                          width: \"calc(100% - 64px)\"\n                  })),\n                  state(\"closed\", style({\n                          width: \"0%\",\n                          visibility: \"hidden\"\n                  })),\n                  transition(\"open => closed\", [\n                          animate(\"0.2s\")\n                  ]),\n                  transition(\"closed => open\", [\n                          animate(\"0.2s\")\n                  ])\n          ]),\n          trigger(\"expansionTitle\", [\n                  state(\"visible\", style({\n                          width: \"30px\",\n                          lineHeight: \"30px\",\n                          marginRight: \"1px\",\n                          marginLeft: \"1px\",\n                          visibility: \"visible\"\n                  })),\n                  state(\"invisible\", style({\n                          width: \"0px\",\n                          visibility: \"hidden\"\n                  }))\n            ])\n  ],\n  templateUrl: \"home-page.component.html\",\n  styleUrls: [\"home-page.component.css\"],\n  providers: [ChatService]\n})\nexport class HomePageComponent implements OnInit, OnDestroy {\n  constructor(private chatsService: ChatsService, public media: MediaObserver, private chatService: ChatService) {}\n  leftExpanded: boolean = false\n  rightExpanded: boolean = false\n  popChatIdsSub: Subscription\n  ngOnInit() {\n        this.popChatIdsSub = this.chatsService.getPopularChatIdsUpdated()\n                .subscribe(popularChatsIds => {\n                        this.chatsService.setSelectedChatId(popularChatsIds[0])\n                        this.popChatIdsSub.unsubscribe()\n                })\n  }\n\n  //Toggle left expansion panel\n  toggleLeft() {\n    this.leftExpanded = !this.leftExpanded\n    if (this.leftExpanded) {\n      this.rightExpanded = false\n    }\n  }\n\n  //Toggle right expansion panel\n  toggleRight() {\n    this.rightExpanded = !this.rightExpanded\n    if (this.rightExpanded) {\n      this.leftExpanded = false\n    }\n  }\n\n  //Toggle middle expansion panel \n  toggleMiddle() {\n    this.rightExpanded = false\n    this.leftExpanded = false\n  }\n\n  ngOnDestroy() {\n        this.popChatIdsSub.unsubscribe()\n  }\n}\n","<app-navbar>\n        <div *ngIf=\"this.media.isActive('gt-sm')\" fxShow=\"true\" fxHide.lt-md=\"true\" class=\"container\">\n                <div class=\"left\">\n                        <app-chat-search></app-chat-search>\n                </div>\n                <div class=\"middle\">\n                        <app-chat-display></app-chat-display>\n                </div>\n                <div class=\"right\">\n                        <app-chat-lists></app-chat-lists>\n                </div>\n        </div>\n        <div *ngIf=\"this.media.isActive('lt-md')\" fxShow=\"true\" fxHide.gt-sm=\"true\" class=\"container-small\">\n                <div class=\"header-container float-left\" [@expansionTitle]=\"!leftExpanded ? 'visible' : 'invisible'\" (click)=\"toggleLeft()\">\n                        <span class=\"header-text no-select transform-color\">\n                                ◀&#xFE0E;\n                        </span> \n                </div>\n                <div class=\"left-small float-left\" [@expansionPanel]=\"leftExpanded ? 'open' : 'closed'\">\n                        <app-chat-search></app-chat-search>\n                </div> \n\n                <div class=\"header-container float-left\" [@expansionTitle]=\"(leftExpanded || rightExpanded) ? 'visible' : 'invisible'\" (click)=\"toggleMiddle()\">\n                        <span class=\"header-text transform-color no-select\">\n                                ◈&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"middle-small float-left\" [@expansionPanel]=\"(!rightExpanded && !leftExpanded)? 'open' : 'closed'\">\n                        <app-chat-display></app-chat-display>\n                </div>\n\n\n                <div class=\"header-container float-right\" [@expansionTitle]=\"!rightExpanded ? 'visible' : 'invisible'\" (click)=\"toggleRight()\">\n                        <span class=\"header-text no-select transform-color\">\n                                ▶&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"right-small float-right\" [@expansionPanel]=\"rightExpanded ? 'open' : 'closed'\">\n                        <app-chat-lists></app-chat-lists>\n                </div>\n        </div>\n</app-navbar>\n\n\n","import { Component, Input } from \"@angular/core\"\nimport { DomSanitizer } from \"@angular/platform-browser\"\n\n@Component({\n        selector: \"app-image-fab\",\n        templateUrl: \"image-fab.component.html\",\n        styleUrls: [\"image-fab.component.css\"]\n})\nexport class ImageFabComponent {\n        @Input() imageUrl: string\n        @Input() showStatus: boolean\n        @Input() online: boolean\n        constructor(public DomSanitationService: DomSanitizer) {}\n}\n","<div class=\"container\">\n        <img \n                [src]=\"DomSanitationService.bypassSecurityTrustUrl(imageUrl)\" \n                class=\"icon-button\" \n                object-fit=\"contain\"\n        >\n        <div class=\"online-marker\" *ngIf=\"this.online && this.showStatus\"></div>\n        <div class=\"offline-marker\" *ngIf=\"!this.online && this.showStatus\"></div>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core'\nimport { AuthenticationService } from '../../services/authentication'\nimport { NgForm } from '@angular/forms'\n\n@Component({\n  selector: \"app-login-page\",\n  templateUrl: \"login-page.component.html\",\n  styleUrls: [\"login-page.component.css\"],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LoginPageComponent {\n  errorMessage: string\n  loggingIn: boolean = false\n  constructor(private authService : AuthenticationService) {}\n\n  login(loginForm: NgForm) {\n    if (this.loggingIn) return\n    if (loginForm.invalid) this.errorMessage = \"Enter missing data\"\n    else {\n      this.loggingIn = true\n      const email = loginForm.value.email\n      const password = loginForm.value.password\n      this.authService.login(email, password)\n        .then( (resolve: string) => {\n          this.errorMessage = resolve\n          loginForm.resetForm()\n          this.loggingIn = false\n        })\n    }\n  }\n}","<div class=\"login-background\">\n  <mat-card class=\"login-form-card\">\n    <div class=\"login-form-container\">\n      <form #loginForm=\"ngForm\" (submit)=\"login(loginForm)\">\n          <!-- Email Field -->\n          <div class=\"form-input-container\">\n            <mat-form-field>\n              <input\n                matInput\n                type=\"text\"\n                name=\"email\"\n                ngModel\n                required\n                placeholder=\"email\"\n                #email=\"ngModel\"\n                class=\"input-field\"\n              >\n              <mat-error *ngIf=\"email.invalid\">Enter your email</mat-error>\n            </mat-form-field>\n          </div>\n          <!-- Password Field -->\n          <div class=\"form-input-container\">\n            <mat-form-field>\n              <input\n                matInput\n                name=\"password\"\n                ngModel\n                required\n                placeholder=\"password\"\n                #password=\"ngModel\"\n                type=\"password\"\n                class=\"input-field\"\n              >\n              <mat-error *ngIf=\"password.invalid\">Enter your password</mat-error>\n            </mat-form-field>\n          </div>\n\n          <!-- Submit Button -->\n          <div class=\"form-button-container\">\n            <button mat-raised-button type=\"submit\" class=\"form-submit-button\">Login</button>\n          </div>\n          <div *ngIf=\"this.errorMessage !== undefined\" class=\"error-message\">\n            {{this.errorMessage}}\n          </div>\n      </form>\n      <div class=\"message-container\">\n        <p class=\"placeholder-text\">Don't have an account?</p>\n        <button mat-raised-button [routerLink]=\"'/api/authentication/register'\" class=\"register-button\">Register!</button>\n      </div>\n    </div>\n  </mat-card>\n</div>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { AuthenticationService } from \"../../services/authentication\"\nimport { UserService } from \"../../services/user\"\nimport { Subscription } from 'rxjs'\nimport { User } from 'src/app/models/user'\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n  styleUrls: [\"navbar.component.css\"]\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  userSub : Subscription\n  user : User\n  constructor(private authService : AuthenticationService, private userService : UserService) {}\n\n  ngOnInit() {\n    this.userSub = this.userService.getUserUpdated()\n      .subscribe(user => {\n        this.user = user\n      })\n    if (this.authService.isAuthenticated()) {\n      this.userService.getUser()\n    }\n  }\n\n  //Checks if user is logged in\n  isAuthenticated() {\n    return this.authService.isAuthenticated()\n  }\n\n  //Avoids memory leak\n  ngOnDestroy() {\n    this.userSub.unsubscribe()\n  }\n}\n","<div class=\"nav-container\">\n  <mat-toolbar class=\"navbar-main\">\n    <div class=\"account-button transform-border\" *ngIf=\"this.user !== undefined && this.user !== null\">\n      <app-user-icon \n        [routerLink]=\"'/api/user'\"  \n        *ngIf=\"this.user.image === '$$$Default$$$'\" \n        class=\"change-on-hover\" \n        [showStatus]=\"true\" \n        [online]=\"this.user.online\"\n        style=\"outline: 0 !important;\"\n      ></app-user-icon>\n      <app-image-fab \n        [routerLink]=\"'/api/user'\"  \n        *ngIf=\"this.user.image != '$$$Default$$$'\" \n        [imageUrl]=\"this.user.image\" \n        [showStatus]=\"true\" \n        [online]=\"this.user.online\" \n        class=\"change-on-hover\"\n        style=\"outline: 0 !important;\"\n      ></app-image-fab>\n    </div>\n    <span *ngIf=\"this.isAuthenticated()\" class=\"flexExpand\"></span>\n    <div \n      [routerLink]=\"''\" \n      class=\"home-link \n      transform-color \n      transform-border-bottom \n      transform-border-top\n      no-select\"\n    >RUMBLE</div> \n    <span class=\"flexExpand\" *ngIf=\"!isAuthenticated()\"></span>\n    <button mat-raised-button class=\"button-login transform-opacity\" [routerLink]=\"'/api/authentication/login'\" *ngIf=\"!isAuthenticated()\">Login</button>\n    <button mat-raised-button class=\"button-register transform-opacity\" [routerLink]=\"'/api/authentication/register'\" *ngIf=\"!isAuthenticated()\">Register</button>\n  </mat-toolbar>\n  <ng-content></ng-content>\n</div>\n","import { Component } from \"@angular/core\"\nimport { NgForm } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication'\n\n@Component({\n  selector: \"app-register-page\",\n  templateUrl: \"register-page.component.html\",\n  styleUrls: [\"register-page.component.css\"]\n})\nexport class RegisterPageComponent {\n  errorMessage: string\n  registering: boolean = false;\n  constructor(private authService: AuthenticationService) {}\n\n  register(registerForm: NgForm) {\n    if (this.registering) return \n    else if (registerForm.invalid) {\n      this.errorMessage = \"Enter missing data\"\n      return\n    }\n    const username = registerForm.value.username\n    const email = String(registerForm.value.email).toLowerCase()\n    const password = registerForm.value.password\n    const reEnteredPassword = registerForm.value.reEnteredPassword\n    if (password !== reEnteredPassword) {\n      this.errorMessage = \"Passwords do not match\"\n      return\n    }\n    if (!this.isValidEmail(email)) {\n      this.errorMessage = \"Email is invalid\"\n      return \n    } \n    if (!this.passwordIsSafe(password)) {\n      this.errorMessage = \"Insecure password\"\n      alert(\"Password must contain:\\n-One capital letter\\n-One lowercase letter\\n-One special character\\n-One number\\n-At least 8 characters\")\n      return\n    }\n    this.registering = true\n    this.authService.register(username, email, password)\n      .then( (resolve: string) => {\n        this.errorMessage = resolve\n        this.registering = false\n      })\n  }\n  //Checks if password is safe\n  passwordIsSafe(password: string) {\n    // const regex = /^(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/\n    // return regex.test(password)\n    return true\n  }\n\n  //Checks if email syntax is correct\n  isValidEmail(email: string) {\n    const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    return regex.test(email);\n  }\n}\n","<div class=\"register-background\">\n    <mat-card class=\"register-form-card\">\n      <div class=\"register-form-container\">\n        <form #registerForm=\"ngForm\" (submit)=\"register(registerForm)\">\n            <!-- Username Field -->\n            <div class=\"form-input-container\">\n              <mat-form-field>\n                <input\n                  matInput\n                  type=\"text\"\n                  name=\"username\"\n                  ngModel\n                  required\n                  placeholder=\"username\"\n                  #username=\"ngModel\"\n                  class=\"input-field\"\n                >\n                <mat-error *ngIf=\"username.invalid\">Enter your username</mat-error>\n              </mat-form-field>\n            </div>\n            <!-- Email Field -->\n            <div class=\"form-input-container\">\n              <mat-form-field>\n                <input\n                  matInput\n                  type=\"text\"\n                  name=\"email\"\n                  ngModel\n                  required\n                  placeholder=\"email\"\n                  #email=\"ngModel\"\n                  class=\"input-field\"\n                >\n                <mat-error *ngIf=\"email.invalid\">Enter your email</mat-error>\n              </mat-form-field>\n            </div>\n            <!-- Password Field -->\n            <div class=\"form-input-container\">\n              <mat-form-field>\n                <input\n                  matInput\n                  name=\"password\"\n                  ngModel\n                  required\n                  placeholder=\"password\"\n                  #password=\"ngModel\"\n                  type=\"password\"\n                  class=\"input-field\"\n                >\n                <mat-error *ngIf=\"password.invalid\">Enter your password</mat-error>\n              </mat-form-field>\n            </div>\n            <!-- Re-entered Password Field -->\n            <div class=\"form-input-container\">\n              <mat-form-field>\n                <input\n                  matInput\n                  name=\"reEnteredPassword\"\n                  ngModel\n                  required\n                  placeholder=\"re-enter password\"\n                  #reEnteredPassword=\"ngModel\"\n                  type=\"password\"\n                  class=\"input-field\"\n                >\n                <mat-error>Re-enter your password</mat-error>\n              </mat-form-field>\n            </div>\n            <!-- Submit Button -->\n            <div class=\"form-button-container\">\n              <button mat-raised-button type=\"submit\" class=\"form-submit-button\">Register</button>\n            </div>\n            \n            <div *ngIf=\"this.errorMessage !== undefined\" class=\"error-message\">\n                {{this.errorMessage}}\n              </div>\n        </form>\n        <div class=\"message-container\">\n          <p class=\"placeholder-text\">Already have an account?</p>\n          <button mat-raised-button [routerLink]=\"'/api/authentication/login'\" class=\"login-button\">Login!</button>\n        </div>\n      </div>\n    </mat-card>\n  </div>\n","import { Component, Input } from \"@angular/core\"\n\n@Component({\n        selector: \"app-user-icon\",\n        templateUrl: \"user-icon.component.html\",\n        styleUrls: [\"user-icon.component.css\"]\n})\nexport class UserIconComponent {\n        @Input(\"showStatus\") showStatus: boolean\n        @Input(\"online\") online: boolean\n}","<div class=\"icon-button\">\n        <div class=\"online-marker\" *ngIf=\"this.showStatus && this.online\"></div>\n        <div class=\"offline-marker\" *ngIf=\"this.showStatus && !this.online\"></div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { UserService } from \"../../../services/user\"\nimport { User } from 'src/app/models/user'\nimport { Subscription } from 'rxjs'\n\n@Component({\n        selector: \"app-user-chats-view\",\n        templateUrl: \"user-chats-view.component.html\",\n        styleUrls: [\"user-chats-view.component.css\"]\n})\nexport class UserChatsViewComponent implements OnInit, OnDestroy {\n        user: User\n        userSub: Subscription\n        constructor(private userService: UserService) {}\n\n        ngOnInit() {\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n        }\n\n        //Get chat Ids from user chatIds list\n        getChatIds() {\n                if (this.user === undefined || this.user === null) return []\n                var chatIds = []\n                for (var i = 0; i < this.user.chatIds.length; i++) {\n                        chatIds.push(this.user.chatIds[i])\n                }\n                return chatIds\n        }\n\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n}","<div class=\"container\">\n        <div class=\"header-container\">\n                <app-header \n                        [headerText]=\"'Subscriptions'\" \n                        [imageUrl]=\"'../../../assets/images/SubsTwo.png'\"\n                ></app-header>     \n        </div>\n        <div class=\"chats-container\">\n                <app-chat-selection \n                        [chatIds]=\"this.getChatIds()\"\n                        [color]=\"'rgb(173, 243, 250)'\"\n                >\n                </app-chat-selection>\n        </div>\n</div>","import { Component, Input } from \"@angular/core\"\nimport { UserService } from 'src/app/services/user'\n\n@Component({\n        selector: \"app-friend-request\",\n        templateUrl: \"friend-request.component.html\",\n        styleUrls: [\"friend-request.component.css\"]\n})\nexport class FriendRequestComponent {\n        @Input() username: string\n        @Input() image: string = \"$$$Default$$$\"\n        @Input() userId: string\n\n        constructor(private userService: UserService) {}\n\n        //Accept user's friend request\n        acceptRequest() {\n                this.userService.acceptFriendRequest(this.userId)\n        }\n\n        //Decline user's friend request\n        declineRequest() {\n                this.userService.declineFriendRequest(this.userId)\n        }\n}","<div class=\"request-container\">\n        <div class=\"request-icon-container\">\n                <app-image-fab \n                        *ngIf=\"this.image !== '$$$Default$$$'\" \n                        [imageUrl]=\"this.image\" \n                        [showStatus]=\"false\" \n                        [online]=\"false\"\n                ></app-image-fab>\n                <app-user-icon \n                        *ngIf=\"this.image === '$$$Default$$$'\" \n                        [showStatus]=\"false\" \n                        [online]=\"false\"\n                ></app-user-icon>\n        </div>\n        <div class=\"request-username-container\">\n                <div class=\"request-username\">\n                        {{this.username}}\n                </div>\n        </div>\n        <div class=\"request-actions-container\">\n                <div \n                        class=\"request-accept \n                        transform-background-color \n                        transform-font-size \n                        transform-color\" \n                        (click)=\"acceptRequest()\"\n                >   ✓\n                </div>\n                <div \n                        class=\"request-decline \n                        transform-background-color \n                        transform-font-size \n                        transform-color\" \n                        (click)=\"declineRequest()\"\n                >   x\n                </div>\n        </div>\n</div>","import { Component, OnInit, OnDestroy} from \"@angular/core\"\nimport { Subscription } from \"rxjs\"\nimport { UserService } from \"../../../services/user\"\nimport { User } from \"../../../models/user\"\nimport { UsersService } from 'src/app/services/users'\n\n@Component({\n        selector: \"app-user-friends-view\",\n        templateUrl: \"user-friends-view.component.html\",\n        styleUrls: [\"user-friends-view.component.css\"]\n})\nexport class UserFriendsViewComponent implements OnInit, OnDestroy {\n        user: User\n        userSub: Subscription\n        constructor(private userService: UserService, private usersService: UsersService) {}\n        \n        ngOnInit() {\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n        }\n\n        getUserSub(subId: string) {\n                if (this.usersService.getUserSub(subId)) {\n                        return this.usersService.getUserSub(subId)\n                }\n                return {\n                        _id: \"-----\",\n                        username: \"loading...\",\n                        image: \"$$$Default$$$\",\n                        online: false\n                }\n        }\n\n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n\n\n}","<div class=\"container\">\n        <app-header [headerText]=\"'Friends'\" [imageUrl]=\"'../../../assets/images/FriendsThree.png'\"></app-header>\n        <app-subscriber\n                *ngFor=\"let friendId of this.user.friendIds\" \n                [username]=\"this.getUserSub(friendId).username\" \n                [online]=\"this.getUserSub(friendId).online\"\n                [image]=\"this.getUserSub(friendId).image\"\n        ></app-subscriber>\n        <app-header *ngIf=\"this.user.friendReqIds.length > 0\" [headerText]=\"'Friend Requests'\" [imageUrl]=\"'../../../assets/images/SubsOne.png'\"></app-header>\n        <app-friend-request \n                *ngFor=\"let requestId of this.user.friendReqIds\"\n                [username]=\"this.getUserSub(requestId).username\" \n                [image]=\"this.getUserSub(requestId).image\"\n                [userId]=\"requestId\"\n        ></app-friend-request>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { UserService } from \"../../services/user\"\nimport { Subscription } from \"rxjs\"\nimport { User } from 'src/app/models/user'\nimport { AuthenticationService } from 'src/app/services/authentication'\nimport { ChatsService } from 'src/app/services/chats'\nimport { UsersService } from 'src/app/services/users'\nimport { trigger, state, style, animate, transition } from '@angular/animations'\nimport { MediaObserver } from \"@angular/flex-layout\"\n\n@Component({\n        selector: \"app-user-page\",\n        templateUrl: \"user-page.component.html\",\n        styleUrls: [\"user-page.component.css\"],\n        animations: [\n                trigger(\"expansionPanel\", [\n                        state(\"open\", style({\n                                visibility: \"visible\",\n                                width: \"calc(100% - 64px)\"\n                        })),\n                        state(\"closed\", style({\n                                width: \"0%\",\n                                visibility: \"hidden\"\n                        })),\n                        transition(\"open => closed\", [\n                                animate(\"0.2s\")\n                        ]),\n                        transition(\"closed => open\", [\n                                animate(\"0.2s\")\n                        ])\n                ]),\n                trigger(\"expansionTitle\", [\n                        state(\"visible\", style({\n                                width: \"30px\",\n                                lineHeight: \"30px\",\n                                marginRight: \"1px\",\n                                marginLeft: \"1px\",\n                                visibility: \"visible\"\n                        })),\n                        state(\"invisible\", style({\n                                width: \"0px\",\n                                visibility: \"hidden\"\n                        }))\n                  ])\n        ]\n})\nexport class UserPageComponent implements OnInit, OnDestroy {\n        user: User\n        userSub: Subscription\n        leftExpanded: boolean = false\n        rightExpanded: boolean = true\n        queried: boolean = false\n        constructor(\n                private userService: UserService, \n                private authService: AuthenticationService, \n                private chatsService: ChatsService,\n                private usersService: UsersService,\n                public media: MediaObserver\n        ) {}\n\n        ngOnInit() {\n                if (this.queried) return\n                this.queried = true\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                                var chatIds = []\n                                for (var i = 0; i < this.user.chatIds.length; i++) {\n                                        const chatId = this.user.chatIds[i]\n                                        if (!this.chatsService.containsChatSub(chatId) && chatIds.indexOf(chatId) === -1) {\n                                                chatIds.push(chatId)\n                                        }\n                                }\n                                this.chatsService.getChats(chatIds)\n                                var userIds = []\n                                for (var i = 0; i < this.user.friendIds.length; i++) {\n                                        const userId = this.user.friendIds[i]\n                                        if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                                                userIds.push(userId)\n                                        }\n                                }\n                                for (var i = 0; i < this.user.friendReqIds.length; i++) {\n                                        const userId = this.user.friendReqIds[i]\n                                        if (!this.usersService.containsUserSub(userId) && userIds.indexOf(userId) === -1) {\n                                                userIds.push(userId)\n                                        }\n                                }\n                                this.usersService.getUsers(userIds)\n                        })\n                this.userService.getUser()\n        }\n\n        isAuthenticated() {\n                return this.authService.isAuthenticated()\n        }\n\n        //Avoid memoroy leaks\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n\n        //Toggles the left expansion panel\n        toggleLeft() {\n                this.leftExpanded = !this.leftExpanded\n                if (this.leftExpanded) {\n                        this.rightExpanded = false\n                }\n        }\n\n        //Toggles the right expansion panel\n        toggleRight() {\n                this.rightExpanded = !this.rightExpanded\n                if (this.rightExpanded) {\n                        this.leftExpanded = false\n                }\n        }\n\n        //Toggles the middle expansion panel\n        toggleMiddle() {\n                this.rightExpanded = false\n                this.leftExpanded = false\n        }\n} ","<app-navbar>\n        <div *ngIf=\"this.media.isActive('gt-sm')\" class=\"container\" fxShow=\"true\" fxHide.lt-md=\"true\">\n                <div class=\"left\" *ngIf=\"this.user != null && this.user != undefined\">\n                        <app-user-friends-view></app-user-friends-view>\n                </div>\n                <div class=\"middle\" *ngIf=\"this.user != null && this.user != undefined\">\n                        <app-user-chats-view></app-user-chats-view>\n                </div>\n                <div class=\"right\" *ngIf=\"this.user != null && this.user != undefined\">\n                        <app-user-view></app-user-view>\n                </div>\n        </div>\n        \n        <div *ngIf=\"this.media.isActive('lt-md')\" fxShow=\"true\" fxHide.gt-sm=\"true\" class=\"container-small\">\n                <div class=\"header-container float-left\" [@expansionTitle]=\"!leftExpanded ? 'visible' : 'invisible'\" (click)=\"toggleLeft()\">\n                        <span class=\"header-text no-select transform-color\">\n                                ◀&#xFE0E;\n                        </span> \n                </div>\n                <div class=\"left-small float-left\" [@expansionPanel]=\"leftExpanded ? 'open' : 'closed'\">\n                        <app-user-friends-view></app-user-friends-view>\n                </div>\n        \n                <div class=\"header-container float-left\" [@expansionTitle]=\"(leftExpanded || rightExpanded) ? 'visible' : 'invisible'\" (click)=\"toggleMiddle()\">\n                        <span class=\"header-text transform-color no-select\">\n                                ◈&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"middle-small float-left\" [@expansionPanel]=\"(!rightExpanded && !leftExpanded)? 'open' : 'closed'\">\n                        <app-user-chats-view></app-user-chats-view>\n                </div>\n        \n        \n                <div class=\"header-container float-right\" [@expansionTitle]=\"!rightExpanded ? 'visible' : 'invisible'\" (click)=\"toggleRight()\">\n                        <span class=\"header-text no-select transform-color\">\n                                ▶&#xFE0E;\n                        </span>\n                </div>\n                <div class=\"right-small float-right\" [@expansionPanel]=\"rightExpanded ? 'open' : 'closed'\">\n                        <app-user-view></app-user-view>\n                </div>\n        </div>\n</app-navbar>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { NgForm } from '@angular/forms'\nimport { Chat } from 'src/app/models/chat'\nimport { Subscription } from 'rxjs'\nimport { ChatCreateService } from 'src/app/services/chat-create'\n\n@Component({\n        selector: \"app-chat-tags\",\n        templateUrl: \"chat-tags.component.html\",\n        styleUrls: [\"chat-tags.component.css\"]\n})\nexport class ChatTagsComponent implements OnInit, OnDestroy{\n        newChat: Chat\n        newChatSub: Subscription\n\n        constructor(private chatCreateService: ChatCreateService) {}\n\n        ngOnInit() {\n                this.newChatSub = this.chatCreateService.getNewChatUpdated()\n                        .subscribe(chat => { \n                                this.newChat = chat\n                        })\n                this.chatCreateService.updateNewChat()\n        }\n\n        //Adds a new tag to the list of tags\n        addTag(tagForm: NgForm) {\n                const newTag = this.fixTag(tagForm\n                                .value\n                                .tag\n                                .trim()\n                                .toLowerCase()\n                        )\n                        .split(/\\s+/g)\n                        .join('‑')\n                if (!(newTag === null || newTag === undefined || newTag === \"\" || newTag === \"new tag\")) {\n                        this.chatCreateService.addTag(newTag)\n                }\n                tagForm.resetForm()\n        }\n\n        //Replace underscores and hyphens with no breakable hyphen\n        fixTag(tag: string) {\n                for (var i = 0; i < tag.length; i++) {\n                        if (tag[i] === '_' || tag[i] === '-') {\n                                tag = this.replaceAt(tag, i, '‑')\n                        }\n                }\n                return tag\n        }\n\n        //Replace character at index\n        replaceAt(current: string, index: number, replacement: string) {\n                return current.substr(0, index) + replacement + current.substr(index + replacement.length);\n        }\n\n\n        updateOptions(queryText: string) {\n                // this.chatsService.getTags(queryText) \n        }\n\n        ngOnDestroy() {\n                this.newChatSub.unsubscribe()\n        }\n}","<div class=\"main-container\">\n        <div class=\"tags-container\">\n                <div class=\"tag-container\" *ngFor=\"let tag of newChat.tags\">\n                        <app-tag [tagText]=\"tag\"></app-tag>\n                </div>\n                <button class=\"add-tag-button no-select\" (click)=\"addTag(tagForm)\">+</button>\n                <form #tagForm=\"ngForm\" (submit)=\"addTag(tagForm)\">\n                        <div class=\"add-tag-input-container tag-container\">\n                                <input class=\"add-tag-input\" \n                                        type=\"text\"\n                                        matInput\n                                        name=\"tag\"\n                                        ngModel\n                                        #tag=\"ngModel\"\n                                        placeholder=\"tag\"\n                                        maxlength=\"25\"\n                                        autocomplete=\"off\"\n                                >\n                        </div>\n                </form> \n                \n        </div>\n</div>","import { Component, Input } from \"@angular/core\"\nimport { ChatCreateService } from 'src/app/services/chat-create'\n\n@Component({\n        selector: \"app-tag\",\n        templateUrl: \"tag.component.html\",\n        styleUrls: [\"tag.component.css\"]\n})\nexport class TagComponent {\n        @Input() tagText: string\n\n        constructor(private chatCreateService: ChatCreateService) {}\n\n        //Removes existing tag from this of tags\n        removeTag() {\n                this.chatCreateService.removeTag(this.tagText)\n        }\n\n}","<div class=\"container\">\n        <div class=\"text-container no-select\">\n                {{this.tagText}}\n        </div>\n        <div class=\"button-container no-select\" (click)=\"removeTag()\">\n                x\n        </div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { NgForm } from '@angular/forms'\nimport { UserService } from \"../../../../services/user\"\nimport { User } from \"../../../../models/user\"\nimport { Subscription } from 'rxjs'\nimport { AuthenticationService } from 'src/app/services/authentication'\nimport { ChatCreateService } from 'src/app/services/chat-create'\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\n\n@Component({\n        selector: \"app-user-view-chat-create-dialog\",\n        templateUrl: \"user-view-chat-create-dialog.component.html\",\n        styleUrls: [\"user-view-chat-create-dialog.component.css\"]\n})\nexport class UserViewChatCreateDialogComponent implements OnInit, OnDestroy {\n        categories: String[] = [\n                \"Science and Tech\",\n                \"Entertainment\",\n                \"Esports\",\n                \"Sports\",\n                \"Other\"\n        ]\n        user: User;\n        userSub: Subscription\n        constructor(\n                private chatCreateService: ChatCreateService, \n                private userService: UserService, \n                private authService: AuthenticationService,\n                public dialogRef: MatDialogRef<UserViewChatCreateDialogComponent>\n        ) {}\n\n        onExit() {\n                this.dialogRef.close()\n        }\n        \n        ngOnInit() {\n                this.chatCreateService.initNewChat()\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n        }\n        \n        isAuthenticated() {\n                return this.authService.isAuthenticated()\n        }\n        \n        //Creates a chat if the users input is valid\n        createChat(chatForm: NgForm) {\n                const title = chatForm.value.title\n                const category = chatForm.value.category\n                if (!chatForm.invalid && category !== undefined && category !== null && category !== \"\") {\n                        this.chatCreateService.postChat(title, this.user._id, category, true)\n                        chatForm.resetForm()\n                }\n        }\n        \n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n}","<div class=\"two-container\">\n        <div class=\"three-container\">\n                <form #chatForm=\"ngForm\">\n                        <div class=\"chat-title-input-container\">\n                                <input\n                                        type=\"text\"\n                                        matInput\n                                        name=\"title\"\n                                        ngModel\n                                        required\n                                        #title=\"ngModel\"\n                                        placeholder=\"title\"\n                                        maxlength=\"40\"\n                                        class=\"chat-title-input\"\n                                        autocomplete=\"off\"\n                                >\n                        </div>\n                        <!-- Mat select for categories -->\n                        <div class=\"chat-category-container\">\n                                <mat-select placeholder=\"Select a Category\" ngModel #category=\"ngModel\" name=\"category\">\n                                        <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n                                                {{category}}\n                                        </mat-option>\n                                </mat-select>\n                        </div>\n                        <app-chat-tags class=\"chat-tags\"></app-chat-tags>\n                        <div class=\"form-submit-container\" mat-dialog-actions>\n                                <button \n                                        mat-button \n                                        (click)=\"createChat(chatForm)\"\n                                        class=\"form-submit-button\" \n                                        *ngIf=\"title.value !== '' && !(category.value === undefined || category.value === null || category.value === '')\" \n                                >Create</button>\n                                <button \n                                        mat-button \n                                        (click)=\"onExit()\" \n                                        class=\"dialog-button\"\n                                >Exit</button>\n                        </div>\n                </form>\n        </div>\n</div>","import { Component } from \"@angular/core\"\nimport { MatDialogRef } from '@angular/material/dialog'\nimport { UserService } from 'src/app/services/user'\n\n@Component({\n        selector: 'app-user-view-icon-dialog',\n        templateUrl: 'user-view-icon-dialog.component.html',\n        styleUrls: [\"user-view-icon-dialog.component.css\"]\n})\nexport class UserViewIconDialogComponent {\n        selectedImage\n        selectedImageUrl\n        constructor(\n                public dialogRef: MatDialogRef<UserViewIconDialogComponent>, \n                private userService: UserService,\n        ) {}\n        \n        //Closes the dialog\n        onExit() {\n                this.dialogRef.close();\n        }\n\n       //Sets the selected image to the image selected by the user\n       onImageSelected(event) {\n                this.selectedImage = event.target.files[0]\n                const reader = new FileReader()\n                reader.readAsDataURL(this.selectedImage)\n                reader.onload = () => {\n                        const originalDataUrl = reader.result\n                        //Scaled the image down to a 400 X 400 square\n                        this.scaleImage(originalDataUrl, 400, 400, this.selectedImage.type, 0.7, (dataUrl) => {\n                                this.selectedImageUrl = dataUrl\n                        })\n                }\n        }\n\n        //https://codepen.io/shrinivas93/pen/xdLLPN\n        scaleImage(dataUrl, newWidth: number, newHeight: number, imageType: string, imageArguments: number, callback) {\n                imageType = imageType || \"image/jpeg\";\n                imageArguments = imageArguments || 0.7;\n                const image = new Image();\n                image.onload = function() {\n                        const canvas = document.createElement(\"canvas\");\n                        canvas.width = newWidth;\n                        canvas.height = newHeight;\n                        const ctx = canvas.getContext(\"2d\");\n                        ctx.drawImage(image, 0, 0, newWidth, newHeight);\n                        const newDataUrl = canvas.toDataURL(imageType, imageArguments);\n                        callback(newDataUrl);\n                }\n                image.src = dataUrl;\n        }\n\n        //Uploads image\n        uploadImage() {\n                if (this.selectedImageUrl === undefined || this.selectedImageUrl === null) return\n                this.userService.setProfileImage(this.selectedImageUrl)\n                this.dialogRef.close()\n        }\n\n}","<div class=\"container\">\n        <div class=\"dialog-header\">Upload profile image</div>\n        <div class=\"file-input-container\">\n                <input type=\"file\"\n                        accept=\"image/*\"\n                        (change)=\"onImageSelected($event)\"\n                >\n        </div>\n        <div mat-dialog-actions>\n                <button \n                        mat-button \n                        *ngIf=\"this.selectedImage !== null && this.selectedImage !== undefined\" \n                        (click)=\"uploadImage()\"\n                        class=\"upload-button\"\n                >Upload</button>\n                <button \n                        mat-button \n                        (click)=\"onExit()\" \n                        class=\"dialog-button\"\n                >Exit</button>\n                \n        </div>\n</div>","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { NgForm } from \"@angular/forms\"\nimport { UserService } from \"../../../services/user\"\nimport { User } from 'src/app/models/user'\nimport { Subscription } from 'rxjs'\nimport { DomSanitizer } from \"@angular/platform-browser\"\nimport { MatDialog } from \"@angular/material/dialog\"\nimport { UserViewIconDialogComponent } from './user-view-icon-dialog/user-view-icon-dialog.component'\nimport { UserViewChatCreateDialogComponent } from './user-view-chat-create-dialog/user-view-chat-create-dialog.component'\n\n@Component({\n        selector: \"app-user-view\",\n        templateUrl: \"user-view.component.html\",\n        styleUrls: [\"user-view.component.css\"]\n})\nexport class UserViewComponent implements OnInit, OnDestroy {\n        user: User\n        userSub: Subscription\n        sendingFriendRequest: boolean = false\n        constructor(\n                private userService: UserService, \n                public DomSanitationService: DomSanitizer,\n                private dialog: MatDialog\n        ) {}\n        \n        ngOnInit() {\n                this.userSub = this.userService.getUserUpdated()\n                        .subscribe(user => {\n                                this.user = user\n                        })\n                this.userService.getUser()\n        }\n        \n        //Sends a friend request\n        sendFriendReq(requestForm: NgForm) {\n                const email = requestForm.value.email.trim()\n                if (email == \"\" || email == \"null\" || email == undefined || this.sendingFriendRequest) return\n                this.sendingFriendRequest = true\n                this.userService.sendFriendRequestToEmail(email)\n                        .then( resolve => {\n                                alert(resolve)\n                                this.sendingFriendRequest = false\n                                requestForm.resetForm()\n                        })\n                        .catch( reject => {\n                                alert(reject)\n                                this.sendingFriendRequest = false\n                                requestForm.resetForm()\n                        })\n        }\n\n        //Opens the image icon select dialog\n        openIconDialog() {\n                const dialogRef = this.dialog.open(UserViewIconDialogComponent, {\n                        width: \"350px\",\n                        height: \"350px\"\n                })\n                dialogRef.afterClosed()\n                        .subscribe(() => {\n                                //Gets the new user icon image from the database\n                                this.userService.getUser(true)\n                        })\n        }\n\n        //Opens the chat create dialog\n        openChatCreateDialog() {\n                this.dialog.open(UserViewChatCreateDialogComponent, {\n                        width: \"350px\",\n                        height: \"550px\"\n                })\n                \n        }\n\n        //Logs out the user\n        logOut() {\n                \n                this.userService.logOut()\n        }\n\n        //Avoid memory leaks\n        ngOnDestroy() {\n                this.userSub.unsubscribe()\n        }\n}","<div class=\"container\">\n        <div class=\"user-container\">\n                <div class=\"user-icon-container\">\n                        <app-image-fab \n                                *ngIf=\"this.user.image != '$$$Default$$$'\" \n                                [imageUrl]=\"this.user.image\" \n                        ></app-image-fab>\n                        <app-user-icon \n                                *ngIf=\"this.user.image === '$$$Default$$$'\"\n                        ></app-user-icon>\n                </div>\n                <div class=\"user-username-container\">\n                        <div class=\"user-username\">\n                                {{this.user.username}}\n                        </div>\n                </div>\n        </div>\n        <h2 class=\"user-options-header\">\n                Options\n        </h2>\n        <div class=\"user-options-container\">\n                <div class=\"user-option-container\">\n                        <div class=\"user-option-header\">\n                                Set Your Icon\n                        </div>\n                        <div class=\"user-option\">\n                                <div class=\"edit-image-button \n                                        transform-color \n                                        no-select\"\n                                        (click)=\"openIconDialog()\"\n                                >Edit</div>\n                        </div>\n                </div>\n                <div class=\"user-option-container margin-top\">\n                        <div class=\"user-option-header\">\n                                Send a Friend Request\n                        </div>\n                        <div class=\"user-option\">\n                                <div class=\"friend-request-form-container\">\n                                        <form #friendReqForm=\"ngForm\" (submit)=\"sendFriendReq(friendReqForm)\" class=\"friend-request-form\">\n                                                <div class=\"friend-request-input-container\">\n                                                        <mat-form-field>\n                                                                <input\n                                                                        matInput\n                                                                        type=\"text\"\n                                                                        name=\"email\"\n                                                                        ngModel\n                                                                        placeholder=\"email\"\n                                                                        #email=\"ngModel\"\n                                                                        class=\"friend-request-email-field\"\n                                                                        autocomplete=\"off\"\n                                                                >\n                                                        </mat-form-field>\n                                                        <div \n                                                                *ngIf=\"friendReqForm.value.email !== ''\"\n                                                                class=\"friend-request-button\n                                                                transform-color\n                                                                no-select\" \n                                                                (click)=\"sendFriendReq(friendReqForm)\"\n                                                        >Send</div>\n                                                </div>\n                                        </form>\n                                </div>\n                                \n                        </div>\n                </div>\n                <div class=\"user-option-container margin-top\">\n                        <div class=\"user-option-header\">\n                                Create a New Chat\n                        </div>\n                        <div class=\"user-option\">\n                                <div \n                                        (click)=\"openChatCreateDialog()\"\n                                        class=\"create-chat-button\n                                        transform-color\n                                        no-select\" \n                                >Create</div>\n                        </div>\n                </div>\n                <div class=\"user-option-container margin-top\">\n                        <div class=\"user-option-header\">\n                                Log Out\n                        </div>\n                        <div class=\"user-option\">\n                                <div \n                                        class=\"log-out-button \n                                        transform-color \n                                        no-select\"\n                                        (click)=\"logOut()\"\n                                >Leave</div>\n                        </div>\n                </div>\n        </div>\n</div>","//Service for the authentication API\nimport { Injectable } from \"@angular/core\"\nimport { HttpHeaders, HttpClient } from '@angular/common/http'\nimport { Location } from '@angular/common';\nconst BASE_URL = \"https://ddm-rumble.herokuapp.com/api/authentication/\"\nconst BASE_USER_URL = \"https://ddm-rumble.herokuapp.com/api/user/\"\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthenticationService {\n  constructor(private http: HttpClient, private location : Location) {\n    console.log(\"Authentication Service Initialized\")\n  }\n\n  //Returns clients jwt token\n  getToken() {\n    return sessionStorage.getItem(\"accessToken\")\n  }\n  \n  //Removes token from session storage\n  clearTokens() {\n    sessionStorage.clear()\n  }\n\n  setAccessToken(token: string) {\n    this.clearTokens()\n    sessionStorage.setItem(\"accessToken\", token)\n  }\n\n  isAuthenticated() {\n    if (this.getToken()) return true\n    return false\n  }\n\n  //Changes client url\n  go(route: string) {\n    this.location.replaceState(route);\n    window.location.reload()\n  }\n\n  //Register a new user\n  register(username: string, email: string, password: string) {\n    return new Promise(resolve => {\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      const body = {\n        username: username,\n        email: email,\n        password: password\n      }\n      this.http.post(BASE_URL + \"register/createUser\", body, { headers: headers })\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === '0') {\n            const accessToken = res.data\n            if (accessToken) {\n              //User was created\n              this.setAccessToken(accessToken)\n              this.go(\"\")\n            }\n          } else {\n            resolve(res.data)\n          }\n        })\n    })\n  }\n\n  //Logs in a given user\n  login(email: string, password: string) {\n    return new Promise(resolve => {\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      const body = {\n        email: email,\n        password: password\n      }\n      this.http.post(BASE_URL + \"login/authenticate\", body, { headers: headers })\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === '0') {\n            const accessToken = res.data\n            if (accessToken) {\n              //User was authenticated\n              this.setAccessToken(accessToken)\n              this.setUserStatusOnline()\n                .then( () => this.go(\"\") )\n            }\n          } else {\n            resolve(res.data)\n          }\n        })\n    })\n  }\n\n  //Set user status as online\n  setUserStatusOnline() {\n    return new Promise((resolve, reject) => {\n      this.http.get(BASE_USER_URL + \"userOnline\")\n       .subscribe((res: {status: string, data: string} ) => {\n        console.log(res)\n        resolve(\"User status was set\")\n       })\n    })\n  }\n}\n","//Service for the chat API\n//Handles the creation of a single chat\nconst BASE_URL = \"https://ddm-rumble.herokuapp.com/api/chat/\"\nimport { Injectable } from \"@angular/core\"\nimport { Location } from \"@angular/common\"\nimport { HttpHeaders, HttpClient } from '@angular/common/http'\nimport { Subject } from 'rxjs'\nimport { Chat } from '../models/chat'\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ChatCreateService {\n        newChat: Chat\n        newChatUpdated = new Subject<Chat>()\n\n        constructor(private http: HttpClient, private location: Location) {}\n\n        getNewChatUpdated() {\n                return this.newChatUpdated.asObservable()\n        }\n\n        //Initializes new chat\n        initNewChat() {\n                this.newChat = {\n                        _id: undefined,\n                        tags: [],\n                        title: undefined,\n                        messages: [],\n                        category: undefined,\n                        adminId: undefined,\n                        subs: [],\n                        global: undefined,\n                        image: \"$$$Default$$$\"\n                }\n        }\n\n        //Adds a tag to the new chat\n        addTag(newTag: string) {\n                if (this.newChat === undefined || this.newChat === null) return \n                else if (this.newChat.tags.indexOf(newTag) == -1 && this.newChat.tags.length < 8) {\n                        this.newChat.tags.push(newTag)\n                        this.updateNewChat()\n                }\n        }\n        \n        //Removes a tag from the new chats list of tags\n        removeTag(tagToRemove: string) {\n                if (this.newChat === undefined || this.newChat === null) return \n                const indexOfTag = this.newChat.tags.indexOf(tagToRemove)\n                if (indexOfTag >= 0) {\n                        this.newChat.tags.splice(indexOfTag, 1)\n                        this.updateNewChat()\n                }\n        }\n\n        //Changes client url\n        go(route: string) {\n                this.location.replaceState(route);\n                window.location.reload()\n        }\n    \n        //Create new chat\n        postChat(title: string, adminId: string, category: string, global: boolean) {\n                const body = {\n                        title: title,\n                        adminId: adminId,\n                        category: category,\n                        tags: this.newChat.tags,\n                        global: global\n                }\n        var headers = new HttpHeaders()\n        headers = headers.append('Content-type', 'application/json')\n        this.http.post(BASE_URL + \"chat-create/create\", body, { headers: headers })\n                .subscribe( (res: string ) => {\n                        console.log(res)\n                        //Chat was created\n                        this.postTags(this.newChat.tags, res)\n                        .then( () => this.postCategory(category, res)\n                        .then( () => {\n                                //Visit then chat once it's been created\n                                this.go(\"api/chat/view/\" + res)\n                        })\n                )\n          })\n      }\n    \n      //Add newly created tags and update existing tags with chat sub\n      postTags(tags: string[], chatId: string) {\n                return new Promise((resolve, reject) => {\n                        for (var i = 0; i < tags.length; i++) {\n                                const body = {\n                                        tag: tags[i],\n                                        chatId: chatId\n                                }\n                                var headers = new HttpHeaders()\n                                headers = headers.append('Content-type', 'application/json')\n                                this.http.post(BASE_URL + \"chat-create/addTag\", body, { headers: headers })\n                                        .subscribe( res => console.log(res) )\n                                }\n                        resolve(0)\n                })\n        }\n    \n        //Post category from newly created chat\n        postCategory(category: string, chatId: string) {\n                return new Promise((resolve, reject) => {\n                        const body = {\n                                category: category,\n                                chatId: chatId\n                        }\n                        var headers = new HttpHeaders()\n                        headers = headers.append('Content-type', 'application/json')\n                        this.http.post(BASE_URL + \"chat-create/addCategory\", body, { headers: headers })\n                                .subscribe( res => console.log(res) )\n                        resolve(0)\n                })\n        }\n        \n        //Update new chat\n        updateNewChat() {\n                if (this.newChat === undefined || this.newChat === null) return \n                this.newChatUpdated.next({...this.newChat})\n        }\n}","//Service for the chat API\n//Handles a single chat\nconst CHAT_API = \"https://ddm-rumble.herokuapp.com/api/chat/\"\nimport { Injectable } from \"@angular/core\"\nimport { HttpHeaders, HttpClient } from '@angular/common/http'\nimport { Subject } from 'rxjs'\nimport { Chat } from '../models/chat'\nimport { Message } from \"../models/message\"\nimport * as io from 'socket.io-client'\nimport { ChatSub } from '../models/chat-sub'\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ChatService {\n  socket: SocketIOClient.Socket\n  chat: Chat\n  chatUpdated = new Subject<Chat>()\n  chatId: string\n  constructor(private http: HttpClient) {}\n\n  //Get subscription to chat object\n  getChatUpdated() {\n    return this.chatUpdated.asObservable()\n  }\n\n  initChatService(chatId: string) {\n    this.setChatId(chatId)\n    console.log(\"Chat Service Initialized\")\n    this.socket = io.connect(\"\", )\n    this.initClientSocket()\n  }\n  //Sets the chat id\n  setChatId(chatId: string) {\n    this.chatId = chatId\n  }\n\n  //Returns chat sub\n  getChatSub() : ChatSub {\n    return {\n      _id: this.chat._id, \n      title: this.chat.title, \n      image: this.chat.image,\n      tags: this.chat.tags,\n      subCount: this.chat.subs.length\n    }\n  }\n\n  //Updates chat\n  getChat(query=false) {\n    if (this.chatId === null || this.chatId === undefined || (!query && this.chat !== undefined && this.chat !== null)) {\n      this.updateChat()\n      return\n    } \n    this.http.get(CHAT_API + \"data/\" + this.chatId)\n    .subscribe((res: Chat) => {\n      this.chat = res\n      this.updateChat()\n    })\n  }\n\n  //Creates link between the socket on the client and the socket on the server\n  initServerSocket() {\n    this.http.get(CHAT_API + \"init\")\n      .subscribe(res => {\n        console.log(res)\n      })\n  }\n\n  //Declares function of client socket\n  initClientSocket() {\n    const _this = this\n    this.socket.on(\"message-posted-to-chat-\" + this.chatId, function(message: Message) {\n      _this.chat.messages.push(message)\n      _this.updateChat()\n    })\n  }\n\n  //Request message post to database\n  postMessage(message: string, senderId: string, timestamp: number) {\n    this.socket.emit(\"message-posted-to-server\", {\n      text: message,\n      senderId: senderId,\n      chatId: this.chatId,\n      timestamp: timestamp\n    })\n  }\n\n  // Requests a subscription to a given chat\n  subscribeToChat() {\n    return new Promise( (resolve, reject) => {\n      if (this.chatId == undefined || this.chatId == null) reject(\"Bad Data\")\n      const body = {\n        chatId: this.chatId\n      }\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      this.http.post(CHAT_API + \"subscribe/\", body, { headers: headers })\n        .subscribe( (res: string) => {\n          //Get user and not just user id\n          if (res == undefined || res == null) reject(\"Subscription was unsuccessful\")\n          this.chat.subs.push(res)\n          this.updateChat()\n          resolve(0)\n        })\n    })\n  }\n\n  // Requests a unsubscription to a given chat\n  unsubscribeFromChat() {\n    return new Promise( (resolve, reject) => {\n      if (this.chatId == undefined || this.chatId == null) {\n        reject(\"Bad Data\")\n        return\n      }\n      const body = {\n        chatId: this.chatId\n      }\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      this.http.post(CHAT_API + \"unsubscribe/\", body, { headers: headers })\n        .subscribe((res: {status: string, data: string}) => {\n          //Get user and not just user id\n          if (res === undefined || res === null) {\n            reject(\"Subscription was unsuccessful\")\n            return\n          }\n          const index = this.getIndexOfUserId(res.data)\n          if (index !== -1) {\n            this.chat.subs.splice(index, 1)\n          }\n          this.updateChat()\n          resolve(0)\n        })\n    })\n  }\n\n  //Get index of userSub in Chat subs list\n  getIndexOfUserId(userId: string) {\n    for (var i = 0; i < this.chat.subs.length; i++) {\n      const cur = this.chat.subs[i]\n      if (cur === userId) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  //Sets chat image\n  setChatImage(dataUrl) {\n    const body = {\n      imageUrl: dataUrl\n    }\n    var headers = new HttpHeaders()\n    headers = headers.append('Content-type', 'application/json')\n    this.http.post(CHAT_API + \"setChatImage/\" + this.chatId, body, { headers: headers }) \n      .subscribe((res: {status: number, data: string}) => {\n        if (res.status == 1) {\n          this.chat.image = res.data\n          this.updateChat()\n        }\n      })\n  }\n\n  //Checks if user on chat is the chat's admin\n  isAdmin(userId: string) {\n          if (this.chat === undefined || userId === undefined) return false\n          if (this.chat.adminId === userId) return true\n          return false\n  }  \n\n  //Update chat object\n  updateChat() {\n    this.chatUpdated.next({...this.chat})\n  }\n}\n","//Service for the chat API\n//Handles multiple chats\nconst BASE_URL = \"https://ddm-rumble.herokuapp.com/api/chat/\"\nimport { Injectable } from \"@angular/core\"\nimport { HttpHeaders, HttpClient } from '@angular/common/http'\nimport { Subject } from 'rxjs'\nimport { ChatSub } from '../models/chat-sub'\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ChatsService {\n  chats: ChatSub[] = []\n  chatIds: string[] = []\n  chatsUpdated = new Subject<ChatSub[]>()\n  popChatIds: string[] = []\n  recChatIds: string[] = []\n  recomChatIds: string[] = []\n  popChatIdsUpdated = new Subject<string[]>()\n  recChatIdsUpdated = new Subject<string[]>()\n  recomChatIdsUpdated = new Subject<string[]>()\n  chatTitles: string[] = []\n  chatTags: string[] = []\n  chatTitlesUpdated = new Subject<string[]>()\n  chatTagsUpdated = new Subject<string[]>()\n  selectedChatId: string\n  selectedChatIdUpdated = new Subject<string>()\n\n  constructor(private http: HttpClient) {}\n\n  //Gets subscription to all chat subs\n  getChatsUpdated() {\n    return this.chatsUpdated.asObservable()\n  }\n\n  //Get selected chat updated\n  getSelectedChatIdUpdated() {\n    return this.selectedChatIdUpdated.asObservable()\n  }\n\n  //Get observable for recent chat Ids\n  getRecentChatIdsUpdated() {\n    return this.recChatIdsUpdated.asObservable()\n  }\n\n  //Get observable for popular chat Ids\n  getPopularChatIdsUpdated() {\n    return this.popChatIdsUpdated.asObservable()\n  }\n\n  //Get observable for recent chat Ids\n  getRecommendedChatIdsUpdated() {\n    return this.recomChatIdsUpdated.asObservable()\n  }\n\n  //Gets observable for all tags in use\n  getTagsUpdated() {\n    return this.chatTagsUpdated.asObservable()\n  }\n\n  //Gets observable for all chat titles in use\n  getChatTitlesUpdated() {\n    return this.chatTitlesUpdated.asObservable()\n  }\n\n  //Gets chatsub from list of chatsubs that have already been gotten\n  getChatSub(chatId: string) {\n    if (this.chats === undefined || this.chats === null) return\n    for (var i = 0; i < this.chats.length; i++) {\n      if (this.chats[i]._id === chatId) {\n        return this.chats[i]\n      }\n    }\n  }\n\n  //Checks if service has already searched for a given chat\n  containsChatSub(chatId: string) {\n    for (var i = 0; i < this.chatIds.length; i++) {\n      if (this.chatIds[i] === chatId) return true\n    }\n    return false\n  }\n\n  //Creates list of chat subs from a list of chatIds\n  getChats(chatIds: string[]) {\n    if (chatIds.length === 0) return\n    console.log(\"Getting chats\", chatIds)\n    for (var i = 0; i < chatIds.length; i++) {\n      const chatId = chatIds[i]\n      if (this.containsChatSub(chatId)) continue \n      this.chatIds.push(chatId)\n      this.getChat(chatId) \n        .then( (chatSub: ChatSub) => {\n          this.chats.push(chatSub)\n          this.updateChats()\n        })\n    }\n  }\n\n  //Promise that resolves a chatSub\n  getChat(chatId: string) {\n    return new Promise((resolve, reject) => {\n      if (chatId === undefined || chatId === null) {\n        reject(\"Bad data\")\n        return\n      }\n      //Send get request for chat sub\n      const body = {\n        _id: chatId\n      }\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      this.http.post(BASE_URL + \"chatSub\", body, { headers: headers })\n        .subscribe( (chatSub: ChatSub) => {\n          resolve(chatSub)\n        })\n    })\n  }\n\n  //Get most recent 10 chats ids\n  getRecentChatIds() {\n    if (this.recChatIds.length === 0) {\n      this.http.get(BASE_URL + \"chatIds/recent\")\n      .subscribe((res: {status: string, data: string[]}) => {\n        this.recChatIds = res.data\n        this.updateRecentChatIds()\n      })\n    } else {\n      this.updateRecentChatIds()\n    }\n  }\n  \n  //Get 10 most popular chats\n  getPopularChatIds() {\n    if (this.popChatIds.length === 0) {\n      this.http.get(BASE_URL + \"chatIds/popular\")\n        .subscribe((res: {status: string, data: string[]}) => {\n          this.popChatIds = res.data\n          this.updatePopularChatIds()\n        })\n    } else {\n      this.updatePopularChatIds()\n    }\n  }\n\n  //Get 10 recommeded chats\n  getRecommendedChatIds() {\n    if (this.recomChatIds.length === 0) {\n      this.http.get(BASE_URL + \"chatIds/recommended\")\n        .subscribe((res: {status: string, data: string[]}) => {\n          this.recomChatIds = res.data\n          this.updateRecommendedChatIds()\n        })\n    } else {\n      this.updateRecommendedChatIds()\n    }\n  }\n\n  //Get up to 10 related chats\n  getRelatedChatIds(chatTags: string[], chatCategory: string, chatId: string) {\n    return new Promise((resolve) => {\n      const body = {\n        tags: chatTags,\n        category: chatCategory,\n        chatId: chatId\n      }\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      this.http.post(BASE_URL + \"chatIds/related\", body, { headers: headers })\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === '0') {\n            resolve(res.data)\n          }\n        })\n    }) \n  }\n\n  //Get all tags in use\n  getAllTags() {\n     if (this.chatTags.length === 0) {\n      this.http.get(BASE_URL + \"allTags\")\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === '0') {\n            this.chatTags = res.data\n            this.updateChatTags()\n          } \n        })\n    } else {\n      this.updateChatTags()\n    }\n  }\n\n  //Get all chat titles in use\n  getAllChatTitles() {\n    if (this.chatTitles.length === 0) {\n      this.http.get(BASE_URL + \"allChatTitles\")\n      .subscribe((res: {status: string, data: any}) => {\n        if (res.status === '0') {\n          this.chatTitles = res.data\n          this.updateChatTitles()\n        } \n      })\n    } else {\n      this.updateChatTitles()\n    }\n  }\n\n  //Search chats based on title prefix, category and tags\n  searchChats(category: string, title: string, tags: string[]) {\n    return new Promise((resolve, reject) => {\n      const body = {\n        category: category,\n        title: title,\n        tags: tags\n      }\n      var headers = new HttpHeaders()\n      headers.append('Content-type', 'application/json')\n      this.http.post(BASE_URL + \"searchChats\", body, { headers: headers })\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === \"0\") {\n            resolve(res.data)\n          } else {\n            reject(res.data)\n          }\n        })\n    })\n  }\n\n  //Select chat\n  setSelectedChatId(chatId: string) {\n    this.selectedChatId = chatId\n    this.updateSelectedChatId()\n  }\n\n  //Update chat \n  updateChats() {\n    this.chatsUpdated.next([...this.chats])\n  }\n\n  //Update selected chat id\n  updateSelectedChatId() {\n    if (this.selectedChatId === undefined || this.selectedChatId === null) return\n    this.selectedChatIdUpdated.next(this.selectedChatId)\n  }\n\n  //Updated recent chat ids\n  updateRecentChatIds() {\n    this.recChatIdsUpdated.next([...this.recChatIds])\n  }\n\n  //Updated recent chat ids\n  updatePopularChatIds() {\n    this.popChatIdsUpdated.next([...this.popChatIds])\n  }\n\n  //Updated recent chat ids\n  updateRecommendedChatIds() {\n    this.recomChatIdsUpdated.next([...this.recomChatIds])\n  }\n\n  //Update chat tags\n  updateChatTags() {\n    this.chatTagsUpdated.next([...this.chatTags])\n  }\n\n  //Updates chat titles\n  updateChatTitles() {\n    this.chatTitlesUpdated.next([...this.chatTitles])\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { HttpRequest, HttpEvent, HttpHandler, HttpInterceptor } from '@angular/common/http'\nimport { AuthenticationService } from './authentication'\nimport { Observable } from 'rxjs'\n\n@Injectable( { providedIn: \"root\" })\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(public authService : AuthenticationService) {\n    console.log(\"Token Interceptor Initialized\")\n  }\n\n  intercept(request : HttpRequest<any>, next: HttpHandler) : Observable<HttpEvent<any>> {\n    //Injects token into request\n\n    // console.log(\"Injecting token\")\n    request = request.clone({\n      setHeaders: {\n        authorization: \"Bearer \" + this.authService.getToken(),\n      }\n    })\n    //Sends request to next handler\n    return next.handle(request)\n  }\n}","//Service for User API\nconst BASE_URL = \"https://ddm-rumble.herokuapp.com/api/user/\"\nimport { Injectable } from \"@angular/core\"\nimport { HttpHeaders, HttpClient } from '@angular/common/http'\nimport { User } from '../models/user'\nimport { Subject } from 'rxjs'\nimport { Location } from '@angular/common'\n\n@Injectable({ providedIn: \"root\"} )\nexport class UserService {\n  user : User\n  userUpdated = new Subject<User>()\n  constructor(private http: HttpClient, private location: Location) {\n    console.log(\"User Service Initialized\")\n  }\n\n  getUserUpdated() {\n    return this.userUpdated.asObservable()\n  }\n\n  getUser(query=false) {\n    if (query || this.user == undefined || this.user == null) {\n      //Query for user\n      this.http.get(BASE_URL + \"data\")\n      .subscribe((res : {status: string, data: any}) => {\n        if (res.status === '0') {\n          this.user = res.data\n          this.updateUser()\n        }\n      })\n    } else {\n      //Update subscription with existing user\n      this.updateUser()\n    }\n  }\n\n  //Send friend request\n  sendFriendRequestToEmail(userEmail: String) {\n    return new Promise((resolve, reject) => {\n      const body = {\n        email: userEmail\n      }\n      var headers = new HttpHeaders()\n      headers = headers.append('Content-type', 'application/json')\n      this.http.post(BASE_URL + \"friend-request\", body, { headers: headers })\n        .subscribe((res: {status: string, data: any}) => {\n          if (res.status === '0') {\n            resolve(res.data)\n          } else {\n            reject(res.data)\n          }\n        })\n    })\n    \n  }\n\n  //Logs out the user\n  logOut() {\n    //Sets user status as offline\n    this.http.get(BASE_URL + \"userOffline\")\n      .subscribe((res: {status: string, data: string}) => {\n        console.log(res)\n        //Deletes authentication token\n        sessionStorage.clear()\n        //Deletes user data\n        this.user = undefined\n        //Routes to the home page and reloads\n        this.go(\"\")\n      })\n  }\n\n  //Changes client url\n  go(route: string) {\n    this.location.replaceState(route);\n    window.location.reload()\n  }\n\n  acceptFriendRequest(requestId: string) {\n    const body = {\n        requestId: requestId,\n    }\n    var headers = new HttpHeaders()\n    headers = headers.append('Content-type', 'application/json')\n    this.http.post(BASE_URL + \"accept-request\", body, { headers: headers })\n      .subscribe((res: {status: string, data: any}) => {\n        if (res.status === '0') {\n          const index = this.user.friendReqIds.indexOf(requestId)\n          if (index !== -1) {\n            this.user.friendReqIds.splice(index, 1)\n            this.updateUser()\n          }\n          this.user.friendIds.push(requestId)\n          this.updateUser()\n        }\n      })\n  }\n\n  declineFriendRequest(requestId: string) {\n    const body = {\n      requestId: requestId\n    }\n    var headers = new HttpHeaders()\n    headers = headers.append('Content-type', 'application/json')\n    this.http.post(BASE_URL + \"decline-request\", body, { headers: headers }) \n      .subscribe((res: {status: string, data: any}) => {\n        if (res.status === \"0\") {\n          const index = this.user.friendReqIds.indexOf(requestId)\n          if (index !== -1) {\n            this.user.friendReqIds.splice(index, 1)\n            this.updateUser()\n          }\n        }\n      })\n  }\n\n  //Sets profile image\n  setProfileImage(dataUrl) {\n    const body = {\n      imageUrl: dataUrl\n    }\n    var headers = new HttpHeaders()\n    headers = headers.append('Content-type', 'application/json')\n    this.http.post(BASE_URL + \"setProfileImage\", body, { headers: headers }) \n      .subscribe((res: {status: number, data: string}) => {\n        if (res.status == 1) {\n          this.user.image = res.data\n          this.updateUser()\n        }\n      })\n  }\n\n  //Set user status as offline\n  setUserStatusOffline() {\n    return new Promise((resolve, reject) => {\n      this.http.get(BASE_URL + \"userOffline\")\n        .subscribe((res: {status: string, data: string} ) => {\n          console.log(res)\n          resolve(0)\n        })\n    })\n  }\n\n  updateUser() {\n    this.userUpdated.next({...this.user})\n  }\n}","import { Injectable } from \"@angular/core\"\nimport { HttpClient } from '@angular/common/http'\nimport { UserSub } from \"../models/user-sub\"\nimport { Subject } from \"rxjs\"\n\nconst BASE_URL = \"https://ddm-rumble.herokuapp.com/api/user/\"\n\n@Injectable({\n        providedIn: \"root\"\n})\nexport class UsersService {\n        users: UserSub[] = []\n        userIds: string[] = []\n        usersUpdated = new Subject<UserSub[]>()\n\n        constructor(private http: HttpClient) {}\n\n        getUsersUpdated() {\n                return this.usersUpdated.asObservable()\n        }\n\n        //Get user from list of users that have already been retreived from database\n        getUserSub(userId: string) {\n                if (this.users === undefined || this.users === null) return \n                for (var i = 0; i < this.users.length; i++) {\n                        if (this.users[i]._id === userId) {\n                                return this.users[i]\n                        }\n                }\n        } \n\n        //Check if user service contains a user sub\n        containsUserSub(userId: string) {\n                for (var i = 0; i < this.userIds.length; i++) {\n                        if (this.userIds[i] === userId) return true\n                }\n                return false\n        }\n\n        //Creates list of user subs from a list of userIds\n        getUsers(userIds: string[]) {\n                if (userIds.length === 0) return\n                console.log(\"Getting users\", userIds)\n                for (var i = 0; i < userIds.length; i++) {\n                        const userId = userIds[i]\n                        if (this.containsUserSub(userId)) continue\n                        this.userIds.push(userId)\n                        this.getUser(userId)\n                                .then( (userSub: UserSub) => {\n                                        this.users.push(userSub)\n                                        this.updateUsers()\n                                })\n                }\n        }\n\n        //Promise that resolves a userSub\n        getUser(userId: string) {\n                return new Promise((resolve, reject) => {\n                        if (userId === null || userId === undefined) {\n                                reject(\"Bad data\")\n                                return\n                        }\n                        this.http.get(BASE_URL + \"data/\" + userId)\n                                .subscribe( (userSub: UserSub) => {\n                                        resolve(userSub)\n                                })\n                })   \n        }\n\n        //Updates the users subject\n        updateUsers() {\n                if (this.users) {\n                        this.usersUpdated.next([...this.users])\n                }\n        }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}